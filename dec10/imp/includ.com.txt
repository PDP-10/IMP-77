&&&&&&&&&&&& INCLUD.SUB

INCLUD.SUB
IOLIB.INC
FORTRA.INC
CALLIS.INC
DASQ.INC
FILLIB.INC
JSYS.INC
TIME.INC
MTAPE.INC
$$$$$$$$$$$$
&&&&&&&&&&&& IOLIB.INC

%ENDOFLIST
!IOLIB.INC
!CONTAINS THE RECORD DEFINITIONS FOR ALL THE INTERNAL I/O RECORDS

!SIZES FOR IOBUFFERS
%CONSTINTEGER DSKBUFFERSIZE=131
%CONSTINTEGER SCBSIZE=39;   !WITH NON-EXTENDED LOOKUP BLOCK
%CONSTINTEGER TTSCBSIZE=9
%CONSTINTEGER STRSCBSIZE=7
%CONSTINTEGER TMPCORSIZE=128

%CONSTINTEGER MAX CHANS=15;  !MAX NUMBER OF I/O CHANNELS AND STREAMS

!DEVICE TYPES AS RETURNED BY 'DEVCHR' UUO
%CONSTINTEGER STRDEV=-3, TMPDEV=-2, UNDEV=-1; !SPECIAL CASES
%CONSTINTEGER DSKDEV=0,
              DTADEV=1,
              MTADEV=2,
              TTYDEV=3,
              XDSKDEV=4;   !ALL DEVICE TYPES>4 TO BE GENERALLY TREATED AS DISK

%CONSTINTEGER STREAM=0, DAFILE=1, SQFILE=2; !CHANNEL TYPES


%RECORDFORMAT OPENBLOCK(  %C
   %INTEGER STATUS,         %C
   %INTEGER DEVNAM,       %C
   %INTEGER BUFHEDS)


%RECORDFORMAT LOOKUPBLOCK( %C
   %INTEGER CNT,          %C
   %INTEGER PPN,          %C
   %INTEGER NAM,          %C
   %INTEGER EXT,           %C
   %INTEGER PRV,           %C
   %INTEGER SIZ, VER, SPL, EST, ALC, POS, TF1, NCA, MTA, DEV,   %C
   STS, ELB, EUN, QTF, QTO, QTR, USD, AUT, NXT, PRD, PCA, UFD, FLR, %C
   XRA, TIM, LAD, DED, ACT)


%RECORDFORMAT RINGHEADER( %C
   %INTEGER BUFADR,       %C
   %INTEGER BYTPTR,       %C
   %INTEGER BYTCNT,
   %INTEGER MPXUDX)


%RECORDFORMAT PATHBLOCK( %C
   %INTEGER FUNCT,       %C
   %INTEGER SWITCHES,    %C
   %INTEGER PPN,         %C
   %INTEGERARRAY SFDS(1:MAXSFDS))


%RECORDFORMAT FILOPBLOCK( %C
   %INTEGER FUNCT,        %C
   %INTEGER STATUS,         %C
   %INTEGER DEVNAM,       %C
   %INTEGER BUFHEDS,      %C
   %INTEGER BUFNUM,       %C
   %RECORD(LOOKUPBLOCK)%NAME LKENT, %C
   %INTEGER PATHARG)


%RECORDFORMAT  SCB(    %C
   %SHORTINTEGER DEVTYP,    %C
   %SHORTINTEGER CHNTYP,   %C
   %INTEGER NXTCHR,    %C
   %INTEGERNAME OPER,  %C
   %INTEGER FLAGS,     %C
   %INTEGER RESERVED , %C
   %STRING(3) TMPNAME, %C
   %INTEGER UDX,       %C
   %INTEGER FILOPFN,   %C
   %INTEGER STATUS,    %C
   %INTEGER DEVNAM,    %C
   %INTEGER BUFHEDS,   %C
   %INTEGER BUFNUM,    %C
   %RECORD(LOOKUPBLOCK)%NAME LKENT, %C
   %INTEGER PATHARG,   %C
   %RECORD(RINGHEADER) RINGHEAD, %C
   %INTEGER IBUFOP,    %C
   %INTEGER OBUFOP,    %C
   %INTEGER USETI,     %C
   %INTEGER USETO,     %C
   %INTEGER STATZ,     %C
   %INTEGER BLOCKSIZE,  %C
   %INTEGER BUFVEC,    %C
   %RECORD(PATHBLOCK) PATHBLK)

%RECORDFORMAT TTSCB(    %C
   %SHORTINTEGER DEVTYP,%C
   %SHORTINTEGER CHNTYP,%C
   %INTEGER NXTCHR,     %C
   %INTEGERNAME OPER,   %C
   %INTEGER FLAGS,      %C
   %INTEGER ARGPTR,     %C
   %INTEGER FUNCT,      %C
   %INTEGER UDX,        %C
   %INTEGER OUTARG)

%RECORDFORMAT STRSCB(  %C
   %SHORTINTEGER DEVTYP,
   %SHORTINTEGER CHNTYP,
   %INTEGER NXTCHR,
   %INTEGERNAME OPER,
   %INTEGER LENGTH,
   %INTEGER LENPTR,
   %INTEGER POINTER)



!AND FOR THE ARRAY OF RECORD POINTERS
%RECORDFORMAT SCBNAME(%RECORD(SCB)%NAME NAME)
%CONSTRECORD(SCB)%NAME UNDSCB=0; !AN UNDEFINED RECORD NAME
%LIST
%ENDOFFILE
!+
!.LC
!.NAP
!.NF
!.FLAG CAP
!^&^DEFINITION OF STREAM CONTROL BLOCKS\&
!.F.S
!^THE STREAM CONTROL BLOCKS FOR ALL THE STREAMS ARE POINTED
!TO BY THE FOLLOWING ARRAYS:-
!.NF.S
!^^%EXTERNALRECORD(SCBNAME)%ARRAY INVEC(0:15)
!%EXTERNALRECORD(SCBNAME)%ARRAY OUTVEC(0:15)\\
!.F.S
!WHERE THE RECORD <SCBNAME IS DEFINED:-
!.NF
!^^%RECORDFORMAT SCBNAME(%RECORD(SCB)%NAME NAME)\\
!.S
!AND THE CURRENT ^^SCB\\S ARE POINTED TO BY
!.NF.S
!^^%EXTERNALRECORD(SCB)%NAME INSCB
!%EXTERNALRECORD(SCB)%NAME OUTSCB\\
!.S.F
!^AND FOR <DA/SQ CHANNELS THEY ARE POINTED TO BY THE ARRAY:-
!.NF.S
!^^%EXTERNALRECORD(SCBNAME)%ARRAY DASQVEC(1:15)\\
!.S.F
!WHERE THE FORMAT OF THE <SCB IS AS FOLLOWS:-
!.NF.S
!<%RECORD <%FORMAT <SCB(   <%C
!    <%INTEGER <DEVTYP    - ^DEVICE TYPE, WHERE
!                         (-3=STRING, -2=TMPCOR, -1=UNASSIGNED
!                         AND >=0 IS DEFINED IN '<DEVTYP' <UUO)
!    <%INTEGER <CHNTYP    - ^STREAM OR CHANNEL TYPE. ^WHERE
!                         (0=STREAM, 1=<DA FILE, 2=<SQ FILE)
!    <%INTEGER <NXTCHR    - ^THE NEXT CHARACTER FOR INPUT
!    <%INTEGERNAME <OPER  - ^ADDRESS OF READ OR WRITE ROUTINE
!    <%INTEGER <FLAGS     - ^FLAG WORD (BIT0=ZERO AS NEXT SYMBOL)
!    <%INTEGER <RESERVED  - ^RESERVED
!    <%STRING(3) <TMPNAME - ^NAME OF A TMPCOR FILE.
!    <%INTEGER <UDX       - ^UNIVERSAL ^DEVICE ^INDEX
!    <%INTEGER <FILOPFN   - ^FIRST WORD OF A FILOP TYPE RECORD
!                         PHYSICAL CHANNEL NUMBER IN LH
!                         AND FILOP FUNCTION CODE IN RH
!    <%INTEGER <STATUS    - ^FIRST WORD OF AN OPEN BLOCK
!                         IS STATUS WORD, INCLUDING <I/O MODE
!    <%INTEGER <DEVNAM    - ^SIXBIT DEVICE NAME
!    <%INTEGER <BUFHEDS   - ^ADDRESSES OF BUFFER RING HEADERS
!                         OUTPUT<(LH) AND INPUT<(RH)
!    <%INTEGER <BUFNUM    - ^NUMBER OF BUFFERS IN RING
!                         OUTPUT<(LH) AND INPUT<(RH)
!    <%RECORD(LOOKUPBLOCK)%NAME <LKENT
!                       - ^ADDRESS OF LOOKUP-ENTER BLOCK
!    <%INTEGER <PATHARG   - ^PATH BLOCK POINTER
!                         LENGTH<(LH) AND ADDRESS<(RH)
!    <%RECORD(RINGHEADER) <RINGHEAD
!                       - ^BUFFER RING HEADER
!    <%INTEGER <IBUFOP    - <IN <CHAN,0
!    <%INTEGER <OBUFOP    - <OUT <CHAN,0
!    <%INTEGER <USETI     - <USETI <CHAN,0
!    <%INTEGER <USETO     - <USETO <CHAN,0
!    <%INTEGER <STATZ     - <STATZ <CHAN,740000
!    <%INTEGER <BLOCKSIZE - ^SIZE OF THE DEVICE BLOCKS
!    <%RECORD(PATHBLOCK) <PATHBLK )
!                       - ^PATH BLOCK
!.S
!^AND FOR TELETYPES
!.S
!<%RECORD <%FORMAT <TTSCB(   <%C
!    <%INTEGER <DEVTYP    - !
!    <%INTEGER <CHNTYP    - !
!    <%INTEGER <NXTCHR    - !    SAME AS IN <SCB
!    <%INTEGERNAME <OPER  - !
!    <%INTEGER <FLAGS     - ^FLAG WORD
!    <%INTEGER <ARGPTR    - ^POINTER TO TRMOP ARG BLOCK
!    <%INTEGER <FUNCT     - ^FIRST WORD OF ARG BLOCK- FUNCTION CODE
!    <%INTEGER <UDX       - ^UNIVERSAL ^DEVICE ^INDEX
!    <%INTEGER <OUTARG)   - ^NEXT CHAR FOR OUTPUT
!.S
!^AND FOR STRINGS
!.S
!<%RECORD <%FORMAT <STRSCB(   <%C
!    <%INTEGER <DEVTYP    - !
!    <%INTEGER <CHNTYP    - !
!    <%INTEGER <NXTCHR    - !    SAME AS IN <SCB
!    <%INTEGERNAME <OPER  - !
!    <%INTEGER <LENGTH    - ^STRING LENGTH
!    <%INTEGER <LENPTR    - ^POINTER TO LENGTH BYTE
!    <%INTEGER <POINTER)  - ^POINTER TO CURRENT BYTE
!.S
!^WHERE THE OTHER RECORDS ARE DEFINED AS FOLLOWS.
!.S 2
!<%RECORDFORMAT <OPENBLOCK(  <%C
!   <%INTEGER <STATUS,    - ^STATUS INCLUDING <I/O MODE
!   <%INTEGER <DEVNAM,    - ^SIXBIT DEVICE NAME
!   <%INTEGER <BUFHEDS)   - ^ADDRESSES OF BUFFERS
!                         OUTPUT<(LH) AND INPUT<(RH)
!.S
!^THIS RECORD CAN BE MAPPED ONTO THE <SCB AT <SCB__STATUS
!.S2
!<%RECORDFORMAT <LOOKUPBLOCK( <%C
!   <%INTEGER <CNT,       - ^LENGTH OF FOLLOWING BLOCK
!                         (DEFAULT=4)
!   <%INTEGER <PPN)       - ^PROJECT-PROGRAMMER NUMBER
!   <%INTEGER <NAM,       - ^SIXBIT FILE NAME
!   <%INTEGER <EXT,       - ^SIXBIT EXTENSION<(LH)
!   <%INTEGER <PRV,       - ^DATE-TIME AND PROTECTION
!.F
!^THE FOLLOWING RECORD ITEMS ARE ONLY USED WHEN THE ^^/EXTEND:\\N SWITCH IS
!GIVEN. ^THEY ARE NAMED ACCORDING TO THE <DEC-10 EXTENDED LOOKUP-BLOCK
!CONVENTIONS (SEE <DEC-10 <MONITOR <CALLS <MANUAL).
!.NF
!   <%INTEGER <SIZ, <VER, <SPL, <EST, <ALC, <POS, <TF1, <NCA, <MTA,
!   <DEV, <STS, <ELB, <EUN, <QTF, <QTO, <USD, <AUT, <PCA, <UFD, <FLR,
!   <XRA, <TIM)
!.S2
!<%RECORDFORMAT <RINGHEADER( <%C
!   <%INTEGER <BUFADR,    - ^ADDRESS OF CURRENT BUFFER
!   <%INTEGER <BYTPTR,    - ^POINTER TO CURRENT BYTE
!   <%INTEGER <BYTCNT,    - ^BYTE COUNT
!   <%INTEGER <MPXUDX)    - ^UNIVERSAL DEVICE INDEX FOR <MPX
!.S2
!<%RECORDFORMAT <PATHBLOCK( <%C
!   <%INTEGER <FUNCT,     - ^REQUIRED FUNCTION
!   <%INTEGER <SWITCHES,  - ^SCAN SWITCHES
!   <%INTEGER <PPN,       - ^PROJECT-PROGRAMMER NUMBER
!   <%INTEGERARRAY <SFDS(1:MAXSFDS)) - ^SIXBIT <SFD NAMES
!.S 2
!<%RECORDFORMAT <FILOPBLOCK( <%C
!   <%INTEGER <FUNCT,     - ^PHYSICAL CHANNEL NUMBER<(LH)
!                         AND FUNCTION CODE<(RH)
!   <%INTEGER <STATUS,    - ^STATUS WORD, INCLUDING <I/O MODE
!   <%INTEGER <DEVNAM,    - ^SIXBIT DEVICE NAME
!   <%INTEGER <BUFHEDS,   - ^ADDRESSES OF BUFFER RING HEADERS
!                         OUTPUT<(LH) AND INPUT<(RH)
!   <%INTEGER <BUFNUM,    - ^NUMBER OF BUFFERS IN EACH
!                         OUTPUT<(LH) AND INPUT<(RH)
!   <%RECORD(LOOKUPBLOCK)%NAME <LKENT,
!                       - ^LOOKUP-ENTER BLOCK ADDRESS
!   <%INTEGER <PATHARG)   - ^PATH BLOCK POINTER
!                         LENGTH<(LH) AND ADDRESS<(RH)
!.S
!^THIS RECORD CAN BE MAPPED ONTO THE <SCB AT <SCB__FILOPFN
!-

$$$$$$$$$$$$
&&&&&&&&&&&& FORTRA.INC

%EXTERNALROUTINESPEC CALL0(%NAME RT)
%EXTERNALROUTINESPEC CALL1(%NAME RT, %NAME A)
%EXTERNALROUTINESPEC CALL2(%NAME RT, %NAME A,B)
%EXTERNALROUTINESPEC CALL3(%NAME RT, %NAME A,B,C)
%EXTERNALROUTINESPEC CALL4(%NAME RT, %NAME A,B,C,D)
%EXTERNALROUTINESPEC CALL5(%NAME RT, %NAME A,B,C,D,E)
%EXTERNALROUTINESPEC CALL6(%NAME RT, %NAME A,B,C,D,E,F)
%EXTERNALROUTINESPEC CALL7(%NAME RT, %NAME A,B,C,D,E,F,G)
%EXTERNALROUTINESPEC CALL8(%NAME RT, %NAME A,B,C,D,E,F,G,H)
%EXTERNALROUTINESPEC CALL9(%NAME RT, %NAME A,B,C,D,E,F,G,H,I)

%EXTERNALINTEGERFNSPEC ICALL0(%NAME RT)
%EXTERNALINTEGERFNSPEC ICALL1(%NAME RT, %NAME A)
%EXTERNALINTEGERFNSPEC ICALL2(%NAME RT, %NAME A,B)
%EXTERNALINTEGERFNSPEC ICALL3(%NAME RT, %NAME A,B,C)
%EXTERNALINTEGERFNSPEC ICALL4(%NAME RT, %NAME A,B,C,D)
%EXTERNALINTEGERFNSPEC ICALL5(%NAME RT, %NAME A,B,C,D,E)
%EXTERNALINTEGERFNSPEC ICALL6(%NAME RT, %NAME A,B,C,D,E,F)
%EXTERNALINTEGERFNSPEC ICALL7(%NAME RT, %NAME A,B,C,D,E,F,G)
%EXTERNALINTEGERFNSPEC ICALL8(%NAME RT, %NAME A,B,C,D,E,F,G,H)
%EXTERNALINTEGERFNSPEC ICALL9(%NAME RT, %NAME A,B,C,D,E,F,G,H,I)

%EXTERNALREALFNSPEC RCALL0(%NAME RT)
%EXTERNALREALFNSPEC RCALL1(%NAME RT, %NAME A)
%EXTERNALREALFNSPEC RCALL2(%NAME RT, %NAME A,B)
%EXTERNALREALFNSPEC RCALL3(%NAME RT, %NAME A,B,C)
%EXTERNALREALFNSPEC RCALL4(%NAME RT, %NAME A,B,C,D)
%EXTERNALREALFNSPEC RCALL5(%NAME RT, %NAME A,B,C,D,E)
%EXTERNALREALFNSPEC RCALL6(%NAME RT, %NAME A,B,C,D,E,F)
%EXTERNALREALFNSPEC RCALL7(%NAME RT, %NAME A,B,C,D,E,F,G)
%EXTERNALREALFNSPEC RCALL8(%NAME RT, %NAME A,B,C,D,E,F,G,H)
%EXTERNALREALFNSPEC RCALL9(%NAME RT, %NAME A,B,C,D,E,F,G,H,I)

%ENDOFFILE
$$$$$$$$$$$$
&&&&&&&&&&&& CALLIS.INC

!CALLIS.INC     PARAMETER FILE FOR CALLI NUMBERS

%CONSTINTEGER LIGHTS=8_-1,
	RESET=8_0,
	DDTIN=8_1,
	SETDDT=8_2,
	DDTOUT=8_3,
	DEVCHR=8_4,
	DDTGT=8_5,
	GETCHR=8_6,
	DDTRL=8_7,
	WAIT=8_10,
	CORE=8_11,
	EXIT=8_12,
	UTPCLR=8_13,
	DATE=8_14,
	LOGIN=8_15,
	APRENB=8_16,
	LOGOUT=8_17
%CONSTINTEGER SWITCH=8_20,
	REASSI=8_21,
	TIMER=8_22,
	MSTIME=8_23,
	GETPPN=8_24,
	TRPSET=8_25,
;    ILLEGAL - 8_26
	RUNTIM=8_27,
	PJOB=8_30,
	SLEEP=8_31,
	SETPOV=8_32,
	PEEK=8_33,
	GETLIN=8_34,
	RUN=8_35,
	SETUWP=8_36,
	REMAP=8_37
%CONSTINTEGER GETSEG=8_40,
	GETTAB=8_41,
	SPY=8_42,
	SETNAM=8_43,
	TMPCOR=8_44,
	DSKCHR=8_45,
	SYSSTR=8_46,
	JOBSTR=8_47,
	STRUUO=8_50,
	SYSPHY=8_51,
	FRECHN=8_52,
	DEVTYP=8_53,
	DEVSTS=8_54,
	DEVPPN=8_55,
	SEEK=8_56
%CONSTINTEGER RTTRP=8_57,
	LOCK=8_60,
	JOBSTS=8_61,
	LOCATE=8_62,
	WHERE=8_63,
	DEVNAM=8_64,
	CTLJOB=8_65,
	GOBSTR=8_66,
	ACTIVA=8_67,
	DEACTI=8_70,
	HPQ=8_71,
	HIBER=8_72,
	WAKE=8_73,
	CHGPPN=8_74,
	SETUUO=8_75,
	DEVGEN=8_76,
	OTHUSR=8_77
%CONSTINTEGER CHKACC=8_100,
	DEVSIZ=8_101,
	DAEMON=8_102,
	JOBPEK=8_103,
	ATTACH=8_104,
	DAEFIN=8_105,
	FRCUUO=8_106,
	DEVLNM=8_107,
	PATH=8_110,
	METER=8_111,
	MTCHR=8_112,
	JBSET=8_113,
	POKE=8_114,
	TRMNO=8_115,
	TRMOP=8_116,
	RESDV=8_117
%CONSTINTEGER UNLOK=8_120,
	DISK=8_121,
	DVRST=8_122,
	DVURS=8_123,
	XTTSK=8_124,
	CAL11=8_125,
	MTAID=8_126,
	IONDX=8_127,
	CNECT=8_130,
	MVHDR=8_131,
	ERLST=8_132,
	SENSE=8_133,
	CLRST=8_134,
	PIINI=8_135,
	PISYS=8_136,
	DEBRK=8_137
%CONSTINTEGER PISAV=8_140,
	PIRST=8_141,
	IPCFR=8_142,
	IPCFS=8_143,
	IPCFQ=8_144,
	PAGE=8_145,
	SUSET=8_146,
;   RESERVED FOR DEC - 8_147,
	SCHED=8_150,
	ENQ=8_151,
	DEQ=8_152,
	ENQC=8_153,
	TAPOP=8_154,
	FILOP=8_155,
;   RESERVED FOR DEC - 8_156,
	NODE=8_157
%CONSTINTEGER ERRPT=8_160,
;   RESERVED  - 8_161,
	PERF=8_162,
;   RESREVED     - 8_163,
	DVPHY=8_164,
	GTNTN=8_165,
	GTXTN=8_166,
	ACCT=8_167,
	DEVOP=8_170
%ENDOFFILE
$$$$$$$$$$$$
&&&&&&&&&&&& DASQ.INC

%EXTERNALROUTINESPEC OPENDA(%INTEGER N,%STRING(255) SPEC)
%EXTERNALROUTINESPEC XOPENDA(%INTEGER N,%RECORD(FILESPEC)%NAME FS)
%EXTERNALROUTINESPEC READDA(%INTEGER N, %INTEGERNAME SECT, %NAME BEGIN, END)
%EXTERNALROUTINESPEC WRITEDA(%INTEGER N, %INTEGERNAME SECT, %NAME BEGIN,END)
%EXTERNALROUTINESPEC CLOSEDA(%INTEGER N)
%EXTERNALROUTINESPEC OPENSQ(%INTEGER N,%STRING(255) SPEC)
%EXTERNALROUTINESPEC XOPENSQ(%INTEGER N,%RECORD(FILESPEC)%NAME FS)
%EXTERNALROUTINESPEC READSQ(%INTEGER N, %NAME BEGIN, END)
%EXTERNALROUTINESPEC WRITESQ(%INTEGER N, %NAME BEGIN,END)
%EXTERNALROUTINESPEC CLOSESQ(%INTEGER N)
%ENDOFFILE

$$$$$$$$$$$$
&&&&&&&&&&&& FILLIB.INC

!FILLIB.INC
!AN INCLUDE FILE CONTAINING THE SPECS FOR THE FILE HANDLING UTILITIES

%EXTERNALPREDICATESPEC XISFILE(%RECORD(FILESPEC)%NAME FS)
%EXTERNALPREDICATESPEC ISFILE(%STRING(255) SPEC)

%EXTERNALROUTINESPEC XRENAME(%RECORD(FILESPEC)%NAME FS1,FS2)
%EXTERNALROUTINESPEC RENAME (%STRING(255) FILE1,FILE2)

%EXTERNALROUTINESPEC XDELETE(%RECORD(FILESPEC)%NAME FS)
%EXTERNALROUTINESPEC DELETE(%STRING(255) FILE)

%EXTERNALROUTINESPEC XCOPY(%RECORD(FILESPEC)%NAME FS1,FS2)
%EXTERNALROUTINESPEC COPY (%STRING(255) FILE1,FILE2)

%ENDOFFILE
$$$$$$$$$$$$
&&&&&&&&&&&& JSYS.INC

%EXTERNALROUTINESPEC JSYS4(%INTEGER N,%INTEGERNAME AC1,AC2,AC3,AC4)
%EXTERNALROUTINESPEC JSYS3(%INTEGER N,%INTEGERNAME AC1,AC2,AC3)
%EXTERNALROUTINESPEC JSYS2(%INTEGER N,%INTEGERNAME AC1,AC2)
%EXTERNALROUTINESPEC JSYS1(%INTEGER N,%INTEGERNAME AC1)
%EXTERNALROUTINESPEC JSYS0(%INTEGER N)
%ENDOFFILE
%ENDOFFILE
$$$$$$$$$$$$
&&&&&&&&&&&& TIME.INC

%ENDOFLIST
!TIME.INC
!INCLUDE FILE OF DECLARATIONS FOR TIME-RELATED PROCEDURES
!THE DATE IS STORED IN THE DEC-10 IN TWO FORMATS
!      1- DEC-10 FORM   DATE=((YEAR-1964)*12+(MONTH-1)*31+DAY-1
!      2- UNIVERSAL DATE TIME (UDT)  (SEE MONITOR CALLS MANUAL)

%EXTERNALINTEGERFNSPEC GETNOW;    !RETURNS THE DATE-TIME IN UDT FORMAT
%EXTERNALINTEGERFNSPEC GETDATE;   !RETURNS DATE IN DEC-10 FORMAT
%EXTERNALINTEGERFNSPEC GETTIME;   !RETURNS TIME IN MILLISECONDS PAST MIDNIGHT

%EXTERNALROUTINESPEC FROMUDT(%INTEGER UDT %INTEGERNAME DATE,TIME)
    !CONVERTS UDT TO DEC-10 FORM DATE AND TIME

%EXTERNALINTEGERFNSPEC TOUDT(%INTEGER DATE,TIME)
    !CONVERTS DEC-10 FORM DATE AND TIME TO UDT FORM

%EXTERNALROUTINESPEC FROMDATE(%INTEGER DATE,%INTEGERNAME D,M,Y)
    !CONVERTS A DATE FROM DEC-10 FORM TO DAY, MONTH AND YEAR

%EXTERNALINTEGERFNSPEC TODATE(%INTEGER DAY,MONTH,YEAR)
    !CONVERTS DAY, MONTH AND YEAR TO DEC-10 FORM DATE

%EXTERNALSTRING(9)%FNSPEC DATETOSTR(%INTEGER DATE)
    !CONVERTS THE DATE IN DEC-10 FORM TO "NN-MON-YY"

%EXTERNALSTRING(9)%FNSPEC DATE;   !RETURNS TODAYS DATE AS "NN-MON-YY"

%EXTERNALROUTINESPEC FROMTIME(%INTEGER TIME, %INTEGERNAME H,M,S)
    !CONVERTS MILLISECONDS PAST MIDNIGHT TO HOURS, MINUTES AND SECONDS

%EXTERNALINTEGERFNSPEC TOTIME(%INTEGER HRS,MINS,SECS)
    !CONVERTS HOURS, MINUTES AND SECONDS TO MILLISECS PAST MIDNIGHT

%EXTERNALSTRING(8)%FNSPEC TIMETOSTR(%INTEGER TIME)
    !CONVERTS THE TIME IN MILLISECS TO "HH:MM:SS" FORM

%EXTERNALSTRING(8)%FNSPEC TIME
    !RETURNS THE CURRENT TIME AS "HH:MM:SS"

%EXTERNALSTRING(18)%FNSPEC UDTTOSTR(%INTEGER UDT)
    !CONVERTS A UDT FORMAT DATE-TIME TO "DD-MON-YY HH:MM:SS" FORM

%EXTERNALSTRING(18)%FNSPEC DATETIME
    !RETURNS THE CURRENT DATE AND TIME AS "DD-MON-YY HH:MM:SS"
!THE FOLLOWING TWO FUNCTIONS RETURN A STRING OF UP TO NINE CHARACTERS BEING
!THE DAY OF THE WEEK


%EXTERNALSTRING(9)%FNSPEC DAY;  !RETURNS DAY OF THE WEEK FOR TODAY
%EXTERNALSTRING(9)%FNSPEC DAYTOSTR(%INTEGER UDT)
    !RETURNS DAY OF THE WEEK FOR A GIVEN DATE IN UNIVERSAL DATE-TIME FORM

!THE FOLLOWING THREE ROUTINES ARE CONCERNED WITH ACCOUNTING PERIODS

%EXTERNALINTEGERFNSPEC ACCPER(%INTEGER UDT)
    !RETURNS THE ACCOUNTING PERIOD IN WHICH THE GIVEN UDT FORM DATE-TIME IS

%EXTERNALINTEGERFNSPEC STARTOFPERIOD(%INTEGER PERIOD)
    !RETURNS THE UDT FORM DATE-TIME OF THE START OF THE GIVEN PERIOD

%EXTERNALINTEGERFNSPEC ENDOFPERIOD(%INTEGER PERIOD)
    !RETURNS THE UDT FORM DATE-TIME OF THE END OF THE GIVEN PERIOD

%LIST
%ENDOFFILE
$$$$$$$$$$$$
&&&&&&&&&&&& MTAPE.INC

%ENDOFLIST
!MTAPE.INC

%EXTERNALROUTINESPEC WATI(%INTEGER I)
%EXTERNALROUTINESPEC WATO(%INTEGER I)
%EXTERNALROUTINESPEC REWI(%INTEGER I)
%EXTERNALROUTINESPEC REWO(%INTEGER I)
%EXTERNALROUTINESPEC EOFI(%INTEGER I)
%EXTERNALROUTINESPEC EOFO(%INTEGER I)
%EXTERNALROUTINESPEC SKRI(%INTEGER I)
%EXTERNALROUTINESPEC SKRO(%INTEGER I)
%EXTERNALROUTINESPEC BSRI(%INTEGER I)
%EXTERNALROUTINESPEC BSRO(%INTEGER I)
%EXTERNALROUTINESPEC EOTI(%INTEGER I)
%EXTERNALROUTINESPEC EOTO(%INTEGER I)
%EXTERNALROUTINESPEC UNLI(%INTEGER I)
%EXTERNALROUTINESPEC UNLO(%INTEGER I)
%EXTERNALROUTINESPEC BLKI(%INTEGER I)
%EXTERNALROUTINESPEC BLKO(%INTEGER I)
%EXTERNALROUTINESPEC SKFI(%INTEGER I)
%EXTERNALROUTINESPEC SKFO(%INTEGER I)
%EXTERNALROUTINESPEC BSFI(%INTEGER I)
%EXTERNALROUTINESPEC BSFO(%INTEGER I)
%EXTERNALROUTINESPEC DECI(%INTEGER I)
%EXTERNALROUTINESPEC DECO(%INTEGER I)
%EXTERNALROUTINESPEC INDI(%INTEGER I)
%EXTERNALROUTINESPEC INDO(%INTEGER I)
%EXTERNALROUTINESPEC SETINI(%INTEGER I)
%EXTERNALROUTINESPEC SETINO(%INTEGER I)
%EXTERNALINTEGERFNSPEC GETBSI(%INTEGER I)
%EXTERNALINTEGERFNSPEC GETBSO(%INTEGER I)
%EXTERNALROUTINESPEC SETBSI(%INTEGER I,SIZE)
%EXTERNALROUTINESPEC SETBSO(%INTEGER I,SIZE)
%EXTERNALPREDICATESPEC TAPOP(%STRING(6)DEVICE,%INTEGER CODE,NARGS,%INTEGERARRAYNAME ARG,%INTEGERNAME RESULT)
%LIST
%ENDOFFILE
!THE ROUTINES ARE ALL USED ON STREAMS WHICH HAVE BEEN DEFINED
!FOR DEVICE "MTA:"
!THE MNEMONICS FOR THE ROUTINES ARE THOSE USED IN THE DEC-10
!MONITOR CALLS MANUAL FOR THE MTAPE UUO.
!THOSE ROUTINES WHOSE NAME ENDS IN 'I' OPERATE ON THE GIVEN
!INPUT STREAM AND THOSE ENDING IN 'O', THE GIVEN
!OUTPUT STREAM NUMBER.

!WAT	WAIT FOR SPACING AND I/O TO FINISH
!REW	REWIND TO LOAD POINT
!EOF	WRITE AN EOF
!SKR	SKIP ONE RECORD
!BSR	BACKSPACE ONE RECORD
!EOT	SPACE TO LOGICAL END OF TAPE
!UNL	REWIND AND UNLOAD
!BLK	WRITE 3 INCHES OF BLANK TAPE
!SKF	SKIP ONE FILE
!BSF	BACKSPACE ONE FILE
!DEC	INITIALISE AS DEC-COMPATIBLE 9-CHANNEL TAPE
!IND	INITIALISE AS INDUSTRY-COMPATIBLE 9-CHANNEL TAPE

!GETBS	RETURNS THE BLOCKSIZE
!SETBS	SETS THE BLOCKSIZE

!NOTE THAT DEFINE INPUT AND DEFINE OUTPUT ALLOW /DENSITY, /PARITY,/BLOCKSIZE
!SWITCHES
$$$$$$$$$$$$
