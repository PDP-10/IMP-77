%BEGIN;        !  PDP 10 ALIST !
   %CONSTINTEGER SOURCE = 1, OBJECT = 2
   %INTEGER WORD
   %INTEGER CURRENT LINE, HERE
   %INTEGER TYPE, LENGTH, J, S, CA
   %SWITCH LT(0:15)
   %CONSTINTEGER SIZE = 60
   %OWNINTEGER LEFT = SIZE
   %EXTERNALROUTINESPEC DIAGSTREAMS
   %EXTERNALINTEGERFNSPEC EVENTINFO
   %ON %EVENT 9 %START
      NEWLINE
      %STOP
   %FINISH

   %ROUTINE TEST PAGE
      LEFT = LEFT-1
      %IF LEFT <= 0 %START
         LEFT = SIZE;  PRINTSYMBOL(12)
      %FINISH
      %IF S=12 %THEN LEFT=SIZE;  !WHEN FORM FEED ENCOUNTERED
   %END
   %ROUTINE OCTAL(%INTEGER N)
      %INTEGER J
      PRINTSYMBOL(N>>J&7+'0') %FOR J = 15, -3, 0
      SPACE
   %END
   %ROUTINE READ WORD
      READSYMBOL(WORD)
   %END
   %ROUTINE SKIP(%INTEGER N)
      READ WORD %FOR N = 1, 1, N
   %END

   DIAG STREAMS
   SELECTINPUT(OBJECT);  SELECTOUTPUT(1)
   CURRENT LINE = 0;  HERE = 0;  CA = -1
   LEFT=SIZE

   %CYCLE
      READ WORD
      TYPE = WORD>>18
      %WHILE TYPE>8_3777 %CYCLE;  !SKIP ASCII TEXT
         READ WORD
         TYPE=WORD>>18
      %REPEAT
      LENGTH = WORD&8_777777
      ->LT(TYPE)
LT(0):! LINE NO
      READ WORD;  READ WORD
      CURRENT LINE = WORD
      %CONTINUE
LT(1):! CODE/GLA
      READ WORD;  READ WORD
      %IF WORD&8_400000 = 0 %START
         SKIP(LENGTH-1)
         %CONTINUE
      %FINISH
      CA = WORD
      SELECTINPUT(SOURCE)
      %WHILE CURRENT LINE # HERE %CYCLE
         HERE = HERE+1;  WRITE(HERE, 4);  SPACE
         %IF HERE = CURRENT LINE %THEN OCTAL(CA) %C
                                 %ELSE SPACES(7)
         %CYCLE
            READSYMBOL(S);  PRINTSYMBOL(S)
            %EXIT %IF NL<=S<=FF
         %REPEAT
         TEST PAGE
      %REPEAT
      SELECTINPUT(OBJECT)
      %CYCLE J = LENGTH-1, -1, 1
         READ WORD;  CA = CA+1
      %REPEAT
      %CONTINUE
!LT(*);   !***TEMP**
LT(2):
LT(3):
LT(4):
LT(6):
LT(7):
LT(8):
LT(9):
LT(10):
LT(11):
LT(12):
LT(13):
LT(14):
LT(15):SKIP(LENGTH+1)
   %REPEAT
LT(5):
   NEWLINE
%ENDOFPROGRAM
