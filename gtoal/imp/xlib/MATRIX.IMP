
%EXTERNALROUTINESPEC SOLVE LN EQ(%LONGREALARRAYNAME A,B,%INTEGER N,%LONGREALNAME DET)

%EXTERNALROUTINE DIV MATRIX(%LONGREALARRAYNAME A,B,%INTEGER N,M,%LONGREALNAME DET)
%COMMENT  A=INV(B)A : BNXN, ANXM
%LONGREAL AMAX,CH
%INTEGER  I,J,JMAX,S,K
-> 3 %IF  N>0
      PRINTSTRING('
      DIV MATRIX DATA FAULT N=')
      WRITE(N,2)
NEWLINE ; %STOP
3: -> 1 %IF  N>1
DET = B(1,1)
-> 2 %IF  DET = 0
%CYCLE  I=1,1,M
A(1,I)=A(1,I)/DET
%REPEAT
-> 2
1: DET=1
%CYCLE  I=1,1,N-1
AMAX=0; JMAX = 0
%CYCLE  J=I,1,N
-> 4 %IF !B(J,I)!<=AMAX
AMAX=!B(J,I)!; JMAX=J
4:%REPEAT
-> 5 %IF  J MAX =I
DET=-DET
-> 6 %IF  JMAX # 0
DET = 0 ; -> 2
6: %CYCLE  J=I,1,N
CH=B(I,J)
B(I,J)=B(JMAX,J)
B(JMAX,J)=CH
%REPEAT
%CYCLE  K=1,1,M
CH=A(I,K)
A(I,K)=A(JMAX,K)
A(JMAX,K)=CH
%REPEAT
5: CH=B(I,I)
DET=DET*CH
%CYCLE  J=I+1,1,N
AMAX=B(J,I)/CH
%CYCLE  S=I+1,1,N
B(J,S)=B(J,S)-B(I,S)*AMAX
%REPEAT
%CYCLE  K=1,1,M
A(J,K)=A(J,K)-A(I,K)*AMAX
%REPEAT
%REPEAT
%REPEAT
CH=B(N,N)
DET=DET*CH
-> 2 %IF  DET = 0
%CYCLE  K=1,1,M
A(N,K)=A(N,K)/CH
%REPEAT
%CYCLE  I=N-1,-1,1
AMAX=B(I,I)
%CYCLE  K=1,1,M
CH=A(I,K)
%CYCLE  J=I+1,1,N
CH=CH-B(I,J)*A(J,K)
%REPEAT
A(I,K)=CH/AMAX
%REPEAT
%REPEAT
2:
%END
%EXTERNALROUTINE UNIT(%LONGREALARRAYNAME A,%INTEGER N)
%INTEGER  I,J
->10 %IF N>0
PRINTSTRING('
MATRIX BOUND ZERO OR NEGATIVE')
NEWLINE
%STOP
10:
%CYCLE  I=1,1,N
%CYCLE  J=1,1,N
A(I,J)=0
%REPEAT
A(I,I)=1
%REPEAT
%END
%EXTERNALROUTINE INVERT(%LONGREALARRAYNAME A,B,%INTEGER N,%LONGREALNAME DET)
%COMMENT A=INV B USING DIV MATRIX
-> 3 %IF  N>0
      PRINTSTRING('
      INVERT DATA FAULT N=')
      WRITE(N,2); NEWLINE; %STOP
3:UNIT(A,N)
DIV MATRIX(A,B,N,N,DET)
%END
%EXTERNALLONGREALFN DET(%LONGREALARRAYNAME A,%INTEGER N)
%LONGREALARRAY B(1:N); %LONGREAL DET
%INTEGER I
->10 %IF N>0
PRINTSTRING('
MATRIX BOUND ZERO OR NEGATIVE')
NEWLINE
%STOP
10:
%CYCLE I=1,1,N
B(I)=0
%REPEAT
SOLVE LN EQ(A,B,N,DET)
%RESULT  = DET
%END
%EXTERNALROUTINE NULL(%LONGREALARRAYNAME A,%INTEGER N,M)
%INTEGER  I,J
->10 %IF N>0 %AND M>0
PRINTSTRING('
MATRIX BOUND ZERO OR NEGATIVE')
NEWLINE
%STOP
10:
%CYCLE  I=1,1,N
%CYCLE  J=1,1,M
A(I,J)=0
%REPEAT
%REPEAT
%END
%EXTERNALROUTINE ADD MATRIX(%LONGREALARRAYNAME A,B,C,%INTEGER N,M)
%INTEGER  I,J
->10 %IF N>0 %AND M>0
PRINTSTRING('
MATRIX BOUND ZERO OR NEGATIVE')
NEWLINE
%STOP
10:
%CYCLE  I=1,1,N
%CYCLE  J=1,1,M
A(I,J)=B(I,J)+C(I,J)
%REPEAT
%REPEAT
%END
%EXTERNALROUTINE SUB MATRIX(%LONGREALARRAYNAME A,B,C,%INTEGER N,M)
%INTEGER  I,J
->10 %IF N>0 %AND M>0
PRINTSTRING('
MATRIX BOUND ZERO OR NEGATIVE')
NEWLINE
%STOP
10:
%CYCLE  I=1,1,N
%CYCLE  J=1,1,M
A(I,J)=B(I,J)-C(I,J)
%REPEAT
%REPEAT
%END
%EXTERNALROUTINE COPY MATRIX(%LONGREALARRAYNAME A,B,%INTEGER N,M)
%INTEGER  I,J
->10 %IF N>0 %AND M>0
PRINTSTRING('
MATRIX BOUND ZERO OR NEGATIVE')
NEWLINE
%STOP
10:
%CYCLE  I=1,1,N
%CYCLE  J=1,1,M
A(I,J)=B(I,J)
%REPEAT
%REPEAT
%END
%EXTERNALROUTINE MULT MATRIX(%LONGREALARRAYNAME A,B,C,%INTEGER N,P,M)
%COMMENT  A=B*C, A IS N X M
%INTEGER  I,J,K
%LONGREAL R
->10 %IF N>0 %AND M>0 %AND P>0
PRINTSTRING('
MATRIX BOUND ZERO OR NEGATIVE')
NEWLINE
%STOP
10:
%CYCLE  I=1,1,N
%CYCLE  J=1,1,M
R=0
%CYCLE  K=1,1,P
R=R+B(I,K)*C(K,J)
%REPEAT
A(I,J)=R
%REPEAT
%REPEAT
%END
%EXTERNALROUTINE MULT TR MATRIX(%LONGREALARRAYNAME A,B,C,%INTEGER N,P,M)
%LONGREAL R
%COMMENT  A = B*C', A IS N X M
%INTEGER  I,J,K
->10 %IF N>0 %AND M>0 %AND P>0
PRINTSTRING('
MATRIX BOUND ZERO OR NEGATIVE')
NEWLINE
%STOP
10:
%CYCLE  I=1,1,N
%CYCLE  J=1,1,M
R=0
%CYCLE  K=1,1,P
R=R+B(I,K)*C(J,K)
%REPEAT
A(I,J)=R
%REPEAT
%REPEAT
%END
%EXTERNALROUTINE TRANS MATRIX(%LONGREALARRAYNAME A,B,%INTEGER N,M)
%COMMENT  AN X M, B M X N
%INTEGER  I,J
->10 %IF N>0 %AND M>0
PRINTSTRING('
MATRIX BOUND ZERO OR NEGATIVE')
NEWLINE
%STOP
10:
%CYCLE  I=1,1,N
%CYCLE  J=1,1,M
A(I,J)=B(J,I)
%REPEAT
%REPEAT
%END

%ENDOFFILE

