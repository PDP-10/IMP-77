!QUEUE.IMP
!ENTERS A FILE INTO A GIVEN GALAXY QUEUE

%INCLUDE "IMP:IOLIB.INC"

%CONSTINTEGER MAX STREAMS=15
%EXTERNALRECORD(SCBNAME)%ARRAY %SPEC INVEC(-1:MAX STREAMS)
%EXTERNALRECORD(SCB)%NAMESPEC INSCB
%EXTERNALRECORD(FILESPEC)%FNSPEC STRTOFS(%STRING(255) STR)
%EXTERNALPREDICATESPEC CALLI2(%INTEGER N,%INTEGERNAME X)
%EXTERNALSTRING(6)%FNSPEC SIXTOSTR(%INTEGER N)
%EXTERNALINTEGERFNSPEC PPN
%SYSTEMPREDICATESPEC GETTAB(%INTEGER N,M,%INTEGERNAME RES)
%EXTERNALINTEGERFNSPEC STRTOSIX(%STRING(6) S)
%EXTERNALROUTINESPEC QUEUEIT(%NAME N,%STRING(1)%NAME MESS);   !TO SEND REQUEST TO QUASAR
%EXTERNALSTRING(255)%SPEC ERRMSG

%STRING(6)%FN DEVICE OF(%RECORD(FILESPEC) FS)
!==================================================
!returns the device on which a file exists
!
%INTEGER N,TEMP,ARG,DEVNAME
%RECORDFORMAT DSKCHR(%INTEGER NAM,UFT,FCT,UNT,SNM)
%RECORD(DSKCHR) D
   %IF FS_DEV#"" %THEN %RESULT=FS_DEV %ELSE FS_DEV="ALL"
   %FOR N=1,1,MAX STREAMS %CYCLE
      %IF INVEC(N)_NAME_DEVTYP=UNDEV %START
         TEMP=N; ->OK
      %FINISH
   %REPEAT
   ERRMSG="No free streams for routine QUEUE "
   %SIGNAL 10
OK: FS_SWITCHES="/EXT:#16"
   XDEFINE INPUT(TEMP,FS)
   N=INSTREAM; SELECT INPUT(TEMP)
   DEVNAME=INSCB_LKENT_DEV
   CLOSE INPUT
   SELECT INPUT(N)
   D=0
   D_NAM=DEVNAME
   ARG=5<<18!ADDR(D)
   %IF CALLI2(8_45,ARG) %START; %FINISH
   %RESULT = SIXTOSTR(D_SNM)
%END


%EXTERNALROUTINE QUEUE(%STRING(70) FILSPEC, %STRING(12) JOB NAME, USER NAME,DEVICE,%INTEGER USER PPN,SIZE,LIMIT,DISPOSE,LOG,%STRING(1)%NAME MESSAGE)
!====================================================================================================
!
!This routine sends a file request to QUASAR
!
!Arguments are:
!FILSPEC       a full filespec which if it does not include a structure name
!              the file will be looked up for it.
!JOB NAME      the JOB NAME in the queue which defaults to the file name
!USER NAME     which defaults to the user name of this job
!DEVICE        any device recognised by QUASAR, may include node number
!USER PPN      PPN of request, defaults to this jobs PPN
!SIZE          OUTPUT blocks in file, should be present. or INPUT core page limit
!LIMIT         OUTPUT page limit or INPUT time limit(seconds)
!DISPOSE        for OUTPUT 1 = delete after printing, 0 = preserve
!              for INPUT /output:value
!LOG           what to do with the log file for batch jobs
!
%RECORDFORMAT FPARAM(%INTEGER SIZE,INF,START,REP1,REP2)
%RECORDFORMAT FD(%INTEGER DEV,FILE,EXT,PPN,%INTEGERARRAY SFD(1:5))
%RECORDFORMAT EQ(%INTEGER HEAD,PID,LEN,REQDEV,JOBNAME,SEQ,SPC,AFT,DED,LIM1,  %C
LIM2,LIM3,LIM4,LIM5,%INTEGERARRAY CHECK(1:5),ACC(1:8),USERNAME(1:2),  %C
%INTEGER OWNER, %INTEGERARRAY OWN PATH(1:5),%RECORD(FPARAM) FP, %RECORD(FD) F,  %C
%RECORD(FPARAM) FP1, %RECORD(FD) F1)
%RECORD(EQ) E
%RECORD(FILESPEC) FS
%INTEGER N,I,EPPN,LEN,SIZ,NUM OF FILES, DELETE, OUTPUT SW
%CONSTINTEGER QSRVER=8_33; !QUEUE VERSION
%CONSTINTEGER EQLEN=35, FPLEN=9 ;  !LENGTH OF EQ AND BASIC F
%CONSTINTEGER INP DEV=8_515660;   !SIXBIT/INP/

   %INTEGERFN ERSATZ(%STRING(6) DEV)
   !RETURNS THE PPN IMPLIED BY AN ERSATZ DEVICE NAME
   %INTEGER PN
   %CONSTINTEGER DEVPPN=8_55, DSK=8_446353 000000;   !SIXBIT 'DSK'
      %RESULT=0 %IF LENGTH(DEV)#3
      PN=STRTOSIX(DEV)
      %RESULT=0 %IF PN=DSK %OR %NOT CALLI2(DEVPPN,PN)
      %RESULT=PN
   %END

   %INTEGERFN GETJOB(%INTEGER N)
      %INTEGER M
      %UNLESS GETTAB(N,-1,M) %START
         ERRMSG="GETTAB failure"; %SIGNAL 15
      %FINISH
      %RESULT=M
   %END

   %ON %EVENT 15 %START
      PRINTSTRING(ERRMSG)
      PRINTSTRING("IN QUEUE routine")
      %RETURN
   %FINISH

   %IF GETTAB(8_126,3,N) %AND N#0 %START;  !GALAXY V4 - GET PID FOR MDA
     MESSAGE="[file ".FILSPEC." not queued to GALAXY]"
      %return
   %FINISH
   FS=STRTOFS(FILSPEC)
   %IF FS_FILE="" %START
      ERRMSG="filename missing in QUEUE request"
      %signal 15
   %FINISH
   EPPN=ERSATZ(FS_DEV)
   %IF EPPN#0 %START
      FS_PPN=EPPN; FS_DEV="";    !USE ERSATZ PPN
   %FINISH
   FS_DEV=DEVICE OF(FS)
   E=0;  !initialise the record
   E_LEN=QSRVER<<18!EQLEN
   E_REQDEV=STRTOSIX(DEVICE)
   %IF E_REQDEV>>18=INP DEV %START;   !DISTINGUISH BETWEEN INPUT AND OUTPUT QUEUES
      NUM OF FILES=2; DELETE=0; OUTPUT SW=DISPOSE!8_500!LOG;  !UNIQUE AND NON-RESTARTABLE
   %ELSE
      NUM OF FILES=1; DELETE=DISPOSE; OUTPUT SW=0
   %FINISH
   %IF JOBNAME="" %THEN E_JOBNAME=STRTOSIX(FS_FILE) %ELSE E_JOBNAME=STRTOSIX(JOBNAME)
   E_SEQ=8_600!(GETJOB(8_26)<<12);   !STATION # OF LAST LOCATE COMMAND AND PRIV BIT TO ALLOW DELETES AFTER PRINTING
   E_SPC=NUM OF FILES  ;!NUMBER OF REQUESTS
   E_LIM1=OUTPUT SW<<27
   E_LIM2=SIZE<<18!LIMIT
   N=LENGTH(USERNAME)
   %IF N=0 %START
      E_USERNAME(1)=GETJOB(8_31)
      E_USERNAME(2)=GETJOB(8_32)
   %ELSE
      %IF N<6 %THEN I=N %ELSE I=6
      E_USERNAME(1)=STRTOSIX(SUBSTRING(USERNAME,1,I))
      E_USERNAME(2)=STRTOSIX(SUBSTRING(USERNAME,7,N)) %IF N>6
   %FINISH
   %IF USER PPN=0 %THEN E_OWNER=PPN %ELSE E_OWNER=USER PPN
!Now fill the file parameter block
   E_FP_INF=8_10001 000001!(DELETE&1)<<17;  !STANDARD BIT SETTINGS
   E_FP_START=1
!Now fill the file definition record
   E_F_DEV=STRTOSIX(FS_DEV)
   E_F_FILE=STRTOSIX(FS_FILE)
   E_F_EXT=STRTOSIX(FS_EXT)
   %IF FS_PPN=0 %THEN E_F_PPN=PPN %ELSE E_F_PPN=FS_PPN
   SIZ=4;  !SIZE OF PATH BLOCK
   LEN=EQLEN+FPLEN;  !BASIC LENGTH OF ENTRY
   %FOR N=1,1,5 %CYCLE
      %EXIT %IF FS_SFDS(N)=""
      SIZ=SIZ+1;   !INCREASE LENGTH OF PATH BLOCK COUNT
      LEN=LEN+1; !INCREASE LENGTH OF ENTRY COUNT
      E_F_SFD(N)=STRTOSIX(FS_SFDS(N))
   %REPEAT
   E_FP_SIZE=5<<18!SIZ
   %IF NUM OF FILES=2 %START
      E_FP1=E_FP; E_F1=E_F; E_F1_EXT=STRTOSIX("LOG");   !PUT IN A LOG FILE
      E_FP1_INF=E_FP1_INF!8_200000;   !SAY THIS IS THE LOG FILE
      E_FP_SIZE=5<<18!FPLEN;   !USE MAX PATH SIZE FOR FIRST SPEC
      LEN=LEN+FPLEN+5;  !ADD ONE MORE FILESPEC OVER THE BASIC LENGTH
   %FINISH
   E_HEAD=8_400000 000007!(LEN<<18);   !REPLY, LENGTH AND TYPE(7=CREATE)
   QUEUEIT(E,MESSAGE)
%END

%ENDOFFILE
