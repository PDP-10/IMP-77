%INCLUDE "IMP:IOLIB.INC"

%SYSTEMROUTINESPEC ZERO(%NAME FROM,TO)
%EXTERNALPREDICATESPEC CALLI2(%INTEGER NUM,%INTEGERNAME AC)
%EXTERNALSTRING(255)%SPEC ERRMSG
%EXTERNALINTEGERARRAYSPEC STACK(0:1);   !DATA STACK WITH DUMMY SIZE
%EXTERNALINTEGER STACKBASE,STACKTOP
%EXTERNALINTEGERSPEC STACKSIZE
%EXTERNALINTEGER CPU;  !PROCESSOR TYPE
%EXTERNALRECORD(SCBNAME)%ARRAYSPEC DASQVEC(1:MAXCHANS);  !ADDRESSES OF SCBS FOR EACH DASQ CHANNEL
%EXTERNALRECORD(SCBNAME)%ARRAYSPEC INVEC(-1:MAXCHANS);  !ADDRESSES OF SCBS FOR EACH STREAM
%EXTERNALRECORD(SCBNAME)%ARRAYSPEC OUTVEC(-1:MAXCHANS);  !FOR OUTPUT
%EXTERNALRECORD(SCB)%SPEC IUNSCB
%EXTERNALRECORD(SCB)%SPEC OUNSCB
%EXTERNALRECORD(SCB)%SPEC ITYSCB
%EXTERNALRECORD(SCB)%SPEC OTYSCB
%CONSTINTEGER RH=8_777777, BIT1=8_200000 000000
%CONSTINTEGER UNDEF=RH
%CONSTINTEGER BASE1=8_16, P=8_17; !AC DEFNS
%CONSTINTEGER PAGE SIZE=512
%CONSTINTEGER DEFLT STACKSIZE=PAGESIZE
%CONSTINTEGERNAME JBFF=8_121,JBREL=8_44, JBHRL=8_115




%OWNINTEGER STACKSIZ
%OWNINTEGER OLDRETRN,RETRN,LASTSTACKLEN
%OWNINTEGER STACKRESTART=0


%SYSTEMROUTINE GET PAGES(%INTEGER FIRST PAGE, LAST PAGE)
   %INTEGER PAGE,AC
   %INTEGERARRAY ARGS(0:1)
   %RETURN %IF CPU=3; !DEC-20
   ARGS(0)=1; ARGS(1)=0
   %FOR PAGE=FIRST PAGE,1,LAST PAGE %CYCLE
      ARGS(1)=ARGS(1)&BIT1!PAGE;  !IF GONE VIRTUAL SAVE THE BIT IN LH
GETPAGE:
      AC=1<<18!ADDR(ARGS(0)); !CREATE A PAGE
      %UNLESS CALLI2(8_145,AC) %START
         %IF AC=8_12 %START; !CORE FULL- GO VIRTUAL
            ARGS(1)=ARGS(1)!BIT1
            ->GETPAGE
         %FINISH
         ERRMSG="Cannot get store"
         %SIGNAL 2,1,AC
      %FINISH
   %REPEAT
%END


%SYSTEMROUTINE INITIO
%INTEGER I
! SET UP DEFAULT STREAMS
   INVEC(-1)_NAME==IUNSCB; !SET SYSTEM STRING STREAM TO UNASSIGNED
   OUTVEC(-1)_NAME==OUNSCB; !SET SYSTEM STRING STREAM TO UNASSIGNED
   INVEC(0)_NAME==ITYSCB; !SET TO USER TTY
   OUTVEC(0)_NAME==OTYSCB
    %CYCLE I=1,1,MAX CHANS
!DEFAULT TO UNASSIGNED ALL STREAMS
        INVEC(I)_NAME==IUNSCB
        OUTVEC(I)_NAME==OUNSCB
        DASQVEC(I)_NAME==UNDSCB; !AND MARK DASQ CHANNELS
    %REPEAT
   IUNSCB_NXTCHR=0; ITYSCB_NXTCHR=0
   SELECT INPUT(0);    SELECT OUTPUT(0)
%END

%SYSTEMROUTINE INITSTACK
! GET SPACE FOR STACK
   %INTEGER BPAGE,TPAGE
   %IF STACKRESTART=0 %START
      %IF STACKSIZE=-1 %THEN STACKSIZ=DEFLT STACKSIZE %ELSE STACKSIZ=STACKSIZE
      %IF ADDR(STACK(0))=UNDEF %START
         STACKBASE=INTEGER(JBHRL)&RH+1;    !DEFAULT STACKBASE
         %IF STACKBASE=1 %THEN STACKBASE=8_200000; !PUT AT TOP OF LOW IF NO HIGH SEG
         STACKTOP=STACKBASE+STACKSIZ
         BPAGE=STACKBASE>>9
         TPAGE=STACKTOP>>9
         %IF TPAGE>=BPAGE %THEN GETPAGES(BPAGE,TPAGE)
      %ELSE
         STACKBASE=ADDR(STACK(0))
         STACKTOP=STACKBASE+STACKSIZ
      %FINISH
      STACKRESTART=-1
   %ELSE ZERO(INTEGER(STACKBASE),INTEGER(STACKTOP))
   RETRN=AC(BASE1); !RETURN ADDRESS
   OLDRETRN=INTEGER(AC(BASE1)+1); !LAST RETURN ADDRESS
   %IF OLDRETRN=0 %THEN LASTSTACKLEN=0 %ELSE LASTSTACKLEN=RETRN&RH-OLDRETRN&RH; !LENGTH OF LAST STACK FRAME
   INTEGER(STACKBASE+LASTSTACKLEN+1)=1<<18!STACKBASE;  !SET UP  OLD STACK POINTER
   INTEGER(STACKBASE+LASTSTACKLEN)=INTEGER(RETRN&RH); !AND RETURN ADDRESS
   INTEGER(STACKBASE)=INTEGER(OLDRETRN&RH) %UNLESS OLDRETRN=0; !AND PREVIOUS RETRN
   AC(BASE1)=2<<18!STACKBASE+LASTSTACKLEN;  !POINT TO CURRENT STACK BASE
%END


%SYSTEMROUTINE FINIT
!FINISH OFF CHANNELS
  %INTEGER I
  %CYCLE I=0,1,MAX CHANS
    %UNLESS OUTVEC(I)_NAME_DEVTYP=UNDEV %START
      SELECTOUTPUT(I); CLOSE OUTPUT
   %FINISH
  %REPEAT
%END

%ENDOFFILE
