!+
!.AP
! ^THIS LIBRARY CONTAINS OCTAL READING AND WRITING ROUTINES
!-


%SYSTEMINTEGERFNSPEC STON(%STRING(1)%NAME STR,%ROUTINE READER(%INTEGERNAME N))
%EXTERNALSTRING(255)%SPEC ERRMSG


!+
!%EXTERNALROUTINE READ OCTAL(%INTEGERNAME N)
! ^READS AN OCTAL NUMBER FROM THE CURRENT INPUT STREAM INTO N.
!-

%EXTERNALROUTINE READ OCTAL(%INTEGERNAME N)
    %INTEGER S,SIGN
    S=NEXTSYMBOL
    %WHILE S<=' ' %THEN SKIPSYMBOL %AND S=NEXTSYMBOL
    N=0; SIGN=0
    %IF S='-' %THEN SIGN='-' %AND SKIPSYMBOL %AND S=NEXTSYMBOL
    %UNLESS '0'<=S<='7' %START
        ERRMSG="Octal integer not found"
        %SIGNAL 3,1,S
    %FINISH
    %WHILE '0'<=S<='7' %CYCLE
      N=N<<3+(S-'0')
      SKIPSYMBOL; S=NEXTSYMBOL
      %REPEAT
    %IF SIGN#0 %THEN N=-N
%END


!+
!%EXTERNALROUTINE WRITE OCTAL(%INTEGER N,S)
! ^OUTPUTS A SIGNED OCTAL INTEGER N WITH S PLACES ON THE CURRENT OUTPUT STREAM.
!-

%EXTERNALROUTINE WRITE OCTAL(%INTEGER N,S)
    %INTEGER SIGN
    %ROUTINESPEC P(%INTEGER N)
    %IF S<=0 %THEN SIGN=S %ELSE SIGN=' '
    S=IMOD(S); S=63 %IF S>63
    %IF N<0 %THEN N=-N %AND SIGN='-'
    P(N)
    %ROUTINE P(%INTEGER N)
        S=S-1
        P(N//8) %IF N>=8
        %IF SIGN > 0 %START
            SPACES(S-1)
            PRINTSYMBOL(SIGN); SIGN=0
        %ELSE %IF SIGN<0 %THEN SPACES(S) %AND SIGN=0
        PRINTSYMBOL(REM(N,8)+'0')
    %END
%END


%EXTERNALINTEGERFN STRTOOCT(%STRING(1)%NAME STR)
   %RESULT=STON(STR,READOCTAL)
%END


%ENDOFFILE

