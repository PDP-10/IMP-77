%INCLUDE "IMP:IOLIB.INC"
%CONTROL 16_4000;  !ALLOW RECORDS TO MATCH


%SYSTEMROUTINESPEC FREEVEC(%INTEGER ADR)
%SYSTEMINTEGERFNSPEC GETVEC(%INTEGER SIZE)
%EXTERNALRECORD(SCBNAME)%ARRAYSPEC INVEC(-1:MAXCHANS);  !ADDRESSES OF SCBS FOR EACH CHANNEL
%EXTERNALRECORD(SCB)%NAMESPEC INSCB;            !ADDRESS OF CURRENT SCB START
%EXTERNALSTRING(255)%SPEC ERRMSG


%SYSTEMPREDICATESPEC FILOP(%RECORD(SCB)%NAME SCB, %INTEGERNAME ERR)
%SYSTEMROUTINESPEC  RELEASE(%INTEGER CHAN)



%EXTERNALROUTINE RESETINPUT
   %RECORD(STRSCB)%NAME STRSCB
   %INTEGER ERR,BYTE
   %IF INSCB_DEVTYP=UNDEV %OR INSCB_DEVTYP=TTYDEV %THEN %RETURN
   INSCB_NXTCHR=0; INSCB_FLAGS=INSCB_FLAGS&8_377777 777777;  !CLEAR PENDING SYMBOLS
   %IF INSCB_DEVTYP=STRDEV %START;  !A STRING
      STRSCB==RECORD(ADDR(INSCB))
      STRSCB_POINTER=STRSCB_LENPTR;   !POINT TO BEGINNING
      AC(2)=STRSCB_LENPTR
      *8_135040 000002;   !LDB 1,2    -GET LENGTH
      STRSCB_LENGTH=AC(1)
      STRSCB_NXTCHR=0
      %RETURN
   %FINISH
  %IF INSCB_DEVTYP=TMPDEV %START;  !TMPCOR
      INSCB_RINGHEAD_BYTPTR=8_700000000+INSCB_RINGHEAD_BUFADR+2;  !RESET POINTER
      INSCB_RINGHEAD_BYTCNT=INTEGER(INSCB_RINGHEAD_BUFADR+1)*5;  !AND BYTE COUNT
      %RETURN
  %FINISH
   BYTE=(INSCB_RINGHEAD_BYTPTR>>24)&8_77;  !EXTRACT BYTE SIZE
   RELEASE(INSCB_FILOPFN>>18&15)
!WE MUST FREE AND REGET THE BUFFER RING BECAUSE FILOP SETS IT IP
   FREEVEC(INSCB_BUFVEC&8_777777);  !FREE OLD BUFFERS
   INSCB_RINGHEAD_BUFADR=GETVEC(INSCB_BUFVEC>>18)
   INSCB_BUFVEC=(INSCB_BUFVEC&8_777777000000)!INSCB_RINGHEAD_BUFADR
  %UNLESS FILOP(INSCB,ERR) %THEN   %C
      ERRMSG="Cannot RESET input stream" %AND %SIGNAL 10,12,INSTREAM
   INSCB_NXTCHR=0
   INSCB_RINGHEAD_BYTPTR=(INSCB_RINGHEAD_BYTPTR&8_777777)!(BYTE<<24);  !RESET BYTE SIZE
%END

%ENDOFFILE



