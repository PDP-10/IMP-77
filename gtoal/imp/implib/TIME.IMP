!+
!.AP
! ^THIS LIBRARY CONTAINS DATE-TIME FUNCTIONS.
!-

%EXTERNALINTEGERFNSPEC GETNOW
%EXTERNALINTEGERFNSPEC GETDATE
%EXTERNALINTEGERFNSPEC GETTIME
%EXTERNALROUTINESPEC FROMUDT(%INTEGER UDT, %INTEGERNAME D,T)
%EXTERNALSTRING(12)%FNSPEC INTTOSTR(%INTEGER I)
%EXTERNALSTRING(255)%SPEC ERRMSG
%CONSTINTEGER START OF 7401=8_122106 000000; !UDT OF START OF ACCONTING PERIOD
%CONSTINTEGER LH=8_777777 000000

!+
!.AP
!%EXTERNALSTRING(9)%FN DATE
! ^RETURNS THE DATE AS A STRING IN THE FORM DD-MM-YY.
!-

%EXTERNALROUTINE FROMDATE(%INTEGER DATE,%INTEGERNAME D,M,Y)
   %INTEGER I
   I=DATE//31
   D=REM(DATE,31)+1
   Y=I//12+1964
   M=REM(I,12)+1
%END


%EXTERNALINTEGERFN TODATE(%INTEGER DAY,MONTH,YEAR)
   %IF YEAR>1900 %THEN YEAR=YEAR-1900
   %RESULT=((YEAR-64)*12+(MONTH-1))*31+DAY-1
%END


%EXTERNALSTRING(9)%FN DATETOSTR(%INTEGER DATE)
   %INTEGER D,M,Y
   %CONSTSTRING(5)%ARRAY MONTHS(0:11) =
   "-Jan-", "-Feb-", "-Mar-", "-Apr-", "-May-", "-Jun-",
   "-Jul-", "-Aug-", "-Sep-", "-Oct-", "-Nov-", "-Dec-"
   FROMDATE(DATE,D,M,Y)
   M=REM(IMOD(M)-1,12);    !make sure that number is sensible
   %RESULT=INTTOSTR(D).MONTHS(M).INTTOSTR(Y-1900)
%END


%EXTERNALSTRING(9)%FN DATE
   %RESULT=DATETOSTR(GETDATE)
%END



%EXTERNALSTRING(9)%FN DAYTOSTR(%INTEGER UDT)
   %OWNSTRING(9)%ARRAY DAYS(0:6)=
   "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"
   %RESULT=DAYS(REM(UDT>>18+2,7))
%END

%EXTERNALSTRING(9)%FN DAY
   %RESULT=DAYTOSTR(GETNOW)
%END


!+
!.AP
!%EXTERNALSTRING(8)%FN TIME
! ^RETURNS A STRING IN THE FORM  HH:MM:SS
!-

%EXTERNALROUTINE FROMTIME(%INTEGER TIME, %INTEGERNAME H,M,S)
   TIME=TIME//1000;  !CONVERT TO SECONDS
   H=TIME//3600
   M=TIME//60-H*60
   S=REM(TIME,60)
%END

%EXTERNALINTEGERFN TOTIME(%INTEGER HRS,MINS,SECS)
   %RESULT=((HRS*60+MINS)*60+SECS)*1000
%END



%EXTERNALSTRING(8)%FN TIMETOSTR(%INTEGER TIME)
   %INTEGER H,M,S
   %STRING(2) HS,MS,SS
   FROMTIME(TIME,H,M,S)
   HS=INTTOSTR(H)
   %IF H<10 %THEN HS="0".HS
   MS=INTTOSTR(M)
   %IF M<10 %THEN MS="0".MS
   SS=INTTOSTR(S)
   %IF S<10 %THEN SS="0".SS
   %RESULT=HS.":".MS.":".SS
%END

%EXTERNALSTRING(8)%FN TIME
   %RESULT=TIMETOSTR(GETTIME)
%END


%EXTERNALSTRING(18)%FN UDTTOSTR(%INTEGER UDT)
   %INTEGER T,D
   FROMUDT(UDT,D,T)
   %RESULT=TIMETOSTR(T)."  ".DATETOSTR(D)
%END

%EXTERNALSTRING(18)%FN DATETIME
   %RESULT=TIMETOSTR(GETTIME)."  ".DATETOSTR(GETDATE)
%END

%EXTERNALINTEGERFN ACCPER(%INTEGER UDT)
   %INTEGER DAYS,MONTH,YEAR
   DAYS=(UDT&LH-START OF 7401)>>18
   MONTH=REM(DAYS,364)//28+1
   YEAR=74+DAYS//364
   %RESULT=YEAR*100+MONTH
%END

%INTEGERFN START PERIOD(%INTEGER PERIOD, DAY,WEEK)
!WILL ACCEPT 4,5 OR 6 FIGURE PERIOD SPECIFICATIONS
   %INTEGER MONTH,YEAR,PER
   PER=PERIOD
   %IF PERIOD>=100000 %START
      DAY=REM(PERIOD,10)-1; PERIOD=PERIOD//10
   %FINISH
   %IF PERIOD>=10000 %START
      WEEK=REM(PERIOD,10)-1; PERIOD=PERIOD//10
   %FINISH
   MONTH=REM(PERIOD,100)
   YEAR=PERIOD//100
   %IF DAY>6 %OR WEEK>3 %OR MONTH>13 %OR YEAR>99 %START
      ERRMSG="Accounting Period incorrectly specified ".INTTOSTR(PER)
      %SIGNAL 11,22,PER
   %FINISH
   %RESULT=((((YEAR-74)*364+(MONTH-1)*28)<<18)+START OF 7401)+(WEEK*7+DAY)<<18
%END

%EXTERNALINTEGERFN STARTOFPERIOD(%INTEGER PERIOD)
   %RESULT=STARTPERIOD(PERIOD,0,0)
%END

%EXTERNALINTEGERFN ENDOFPERIOD(%INTEGER PERIOD)
   %RESULT=STARTPERIOD(PERIOD,6,3)!8_777777
%END


%ENDOFFILE

