!+
!.AP
! ^THE CUSP COMMAND-SCAN ROUTINE PROVIDES THE FACILITY
!OF READING CUSP-TYPE COMMAND STRINGS OF THE FOLLOWING FORMS FROM THE
!CURRENT INPUT STREAM (WHICH MAY BE SET TO BE A TMPCOR AFTER A CCL ENTRY):-
!.NF
!OUT, AUX = IN (,IN ... )
!OUT = IN (,IN ... )
!IN
!@CMDFILE
!CMDFILE@
!RUNFILE!
!.S 1
!WHERE OUT, AUX, IN, CMDFILE, RUNFILE, ARE ALL DEC-SYSTEM 10 FILE SPECIFICATIONS.
!.NF
!%EXTERNALROUTINE CUSPFILES(%RECORD(FILESPEC)%NAME OUT,AUX,IN,RUN, %INTEGER CMDSTR, %INTEGERNAME GOT)
!.F
! ^THE COMMAND STRUCTURES ILLUSTRATED ABOVE ARE PARSED INTO THE GIVEN
!'FILESPEC' RECORDS, THE CMDSTR NUMBER IS USED IF A COMMAND-FILE IS
!SPECIFIED. ^A NON-ZERO VALUE IS RETURNED IN THE 'GOT' PARAMETER IF
!A NON-EMPTY LEGAL LINE HAS BEEN FOUND. ^ERROR REPORTS ARE OUTPUT ON THE
!TELETYPE. ^IT IS THE RESPONSIBILITY OF THE USER TO APPLY ALL THE
!NECCESSARY DEFAULTS.
! ^THE EXTERNAL INTEGER 'FSCHAR' CONTAINS THE VALUE OF THE LAST CHAR READ
!ON THE INPUT STREAM AND SO THE EXISTENCE OF FURTHER INPUT FILES
!FOLLOWING THE SUCCESSFUL RETURN FROM CUSPFILES IS ACHIEVED AS FOLLOWS:-
!.NF
!%IF FSCHAR=',' %THEN READFS(FSRECORD,GOT)
!   (SEE 'GETLIB' FOR A DESCRIPTION OF READFS)
!-



%INCLUDE "IMP:IOLIB.INC"

%EXTERNALROUTINE CUSPFILES(%RECORD(FILESPEC)%NAME OUT,AUX,IN,RUN, %INTEGER CMDCHAN, %INTEGERNAME GOT)
%EXTERNALROUTINESPEC PROMPT(%STRING(255) PR)
%EXTERNALINTEGERFNSPEC INDEV
%EXTERNALROUTINESPEC XDEFINPUT(%INTEGER N,%RECORD(FILESPEC)%NAME FS)
%EXTERNALROUTINESPEC READFS(%RECORD(FILESPEC)%NAME FS)
%EXTERNALINTEGERFNSPEC SUBEVENT
%EXTERNALINTEGERFNSPEC EVENTINFO
   %RECORD(FILESPEC) F
   %INTEGER GETS, AUXS, S, N, LASTINPUT,NXTCHAR
   %ON %EVENT 10 %START
      %UNLESS SUBEVENT=9 %THEN %SIGNAL 10,SUBEVENT,EVENTINFO
      N=OUTSTREAM
      SELECT OUTPUT(0)
      NEWLINE
      PRINTSTRING("Command error: ")
      %WHILE NEXTSYMBOL>=' ' %THEN READSYMBOL(S) %AND PRINTSYMBOL(S)
      NEWLINE
      SELECT OUTPUT(N)
      %IF INDEV#TTYDEV %START
         %IF LASTINPUT#0 %START
            CLOSE INPUT
            SELECTINPUT(LASTINPUT)
         %FINISH
         %SIGNAL 10,9,EVENT INFO
      %FINISH
   %FINISH

   %ROUTINE RDFILE(%RECORD(FILESPEC)%NAME FS)
      READFS(FS)
      NXTCHAR=NEXTSYMBOL
      SKIPSYMBOL %UNLESS NL<=NXTCHAR<=FF %OR NXTCHAR=','
   %END

   LASTINPUT=0
   GETS=0; AUXS=0; GOT=0
   OUT=0; AUX=0; IN=0; RUN=0
  %CYCLE
      PROMPT("*")
      %IF NEXTSYMBOL>=' ' %THEN %EXIT
      SKIPSYMBOL
   %REPEAT
      %CYCLE
         RDFILE(F)
         %IF NXTCHAR='@' %START
            %IF F_FILE="" %AND F_DEV="" %THEN RDFILE(F)
            F_EXT="CMD" %IF F_EXT=""
            XDEFINPUT(CMDCHAN,F)
            LASTINPUT=INSTREAM
            SELECTINPUT(CMDCHAN)
            %CONTINUE
         %FINISH
         %IF NXTCHAR='!' %START
            RUN=F
            GOT=-1
            %EXIT
         %FINISH
         %IF NXTCHAR=',' %START
            %IF GETS#0 %START
               IN=F
               GOT=1
               %EXIT
            %FINISH
            %IF AUXS#0 %THEN %SIGNAL 10,9
            OUT=F
            AUXS=1
            SKIPSYMBOL;   !COMMA LEFT PENDING FROM RDFILE
            %CONTINUE
         %FINISH
         %IF NXTCHAR='_' %OR NXTCHAR='=' %START
            %IF AUXS=0 %THEN OUT=F %ELSE AUX=F
            GETS=1
            %CONTINUE
         %FINISH
         %IF NXTCHAR=';' %START
            %WHILE %NOT NL<=NEXTSYMBOL<=FF %THEN SKIPSYMBOL
         %FINISH
         %IF NL<=NXTCHAR<=FF %OR NXTCHAR=';' %START
            IN=F
            GOT=1
            %EXIT
         %FINISH
      %REPEAT
      !HERE WHEN SOME FILES ARE FOUND
      %IF LASTINPUT#0 %START
         CLOSE INPUT
         SELECTINPUT(LASTINPUT)
      %FINISH
   %RETURN

%end

%ENDOFFILE

