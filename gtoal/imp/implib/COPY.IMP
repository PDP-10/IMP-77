%INCLUDE "IMP:DASQ.INC"

%CONSTINTEGER MAX CHANS=15
!**NEXT 3 LINES SHOULD BE REPLACED BY ;%INCLUDE "IMP:IOLIB.INC"
%EXTERNALINTEGERARRAYSPEC DASQVEC(1:MAX CHANS);  !**TYPE FRIG
%CONSTINTEGER BLOCKSIZE=24, LKENT=13, SIZ=5, DEVTYP=0; !**ADDRESSES IN SCB
%CONSTINTEGER DTADEV=1; !**DTA DEV TYPE

%EXTERNALRECORD(FILESPEC)%FNSPEC STRTOFS(%STRING(255) SPEC)
%EXTERNALSTRING(255)%FNSPEC FSTOSTR(%RECORD(FILESPEC)%NAME FS)
%EXTERNALSTRING(255)%SPEC ERRMSG

%EXTERNALROUTINE XCOPY(%RECORD(FILESPEC)%NAME FS1,FS2)
   %INTEGER N,BLOCK,LEN,SIZE,BUFSIZ,BLSIZE
   %INTEGER CHAN1,CHAN2

   %INTEGERFN FREECHAN(%INTEGER START)
      %FOR N=START,1,MAX CHANS %CYCLE
         %RESULT=N %IF DASQVEC(N)=0; !FREE CHAN
      %REPEAT
      ERRMSG="No free channels for COPYING ".FSTOSTR(FS1)
      %SIGNAL 2,5
   %END

   CHAN1=FREECHAN(1)
   CHAN2=FREECHAN(CHAN1+1)
   FS1_SWITCHES="/FUNCT:1".FS1_SWITCHES; !READ ONLY AND INCLUDE FILE LENGTH
   FS2_SWITCHES="/FUNCT:3".FS2_SWITCHES;  !SUPERCEDING ENTER
   XOPENDA(CHAN1,FS1)
   XOPENDA(CHAN2,FS2)
   SIZE=INTEGER(INTEGER(DASQVEC(CHAN1)+LKENT)+SIZ)
   %IF INTEGER(DASQVEC(CHAN1)+DEVTYP)=DTADEV %THEN BUFSIZ=512 %ELSE BUFSIZ=1024
   BLSIZE=INTEGER(DASQVEC(CHAN1)+BLOCKSIZE)
   BUFSIZ=BLSIZE %IF REM(BUFSIZ,BLSIZE)#0
   N=0

   %BEGIN
   %INTEGERARRAY BUFF(1:BUFSIZ)
   %ON %EVENT 9 %START
      LEN=SIZE-N*BLSIZE
      %UNLESS LEN<=0 %THEN WRITEDA(CHAN2,BLOCK,BUFF(1),BUFF(LEN))
      CLOSEDA(CHAN1)
      CLOSEDA(CHAN2)
      ->RETURN
   %FINISH

   %CYCLE
      BLOCK=N+1; READDA(CHAN1,BLOCK,BUFF(1),BUFF(BUFSIZ))
      BLOCK=N+1; WRITEDA(CHAN2,BLOCK,BUFF(1),BUFF(BUFSIZ))
      N=BLOCK
   %REPEAT
RETURN:
   %END
%END

%EXTERNALROUTINE COPY(%STRING(255) SPEC1,SPEC2)
   %RECORD(FILESPEC) FS1,FS2
   FS1=STRTOFS(SPEC1)
   FS2=STRTOFS(SPEC2)
   XCOPY(FS1,FS2)
%END

%ENDOFFILE
