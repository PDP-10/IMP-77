!+
! ^THIS IS THE LIBRARY OF DIRECT ACCESS AND SEQUENTIAL ACCESS FILES UTILITIES
!^IT USES A SIMILAR MECHANISM TO THE STREAMS, USING THE SAME STREAM CONTROL
!BLOCKS BUT UTILISING DUMP-MODE READING AND WRITING ROUTINES.
!-


%INCLUDE "IMP:IOLIB.INC"

%CONSTINTEGER LH=8_777777000000, RH=8_777777

%EXTERNALINTEGERSPEC FUNCTION
%EXTERNALRECORD(SCBNAME)%ARRAYSPEC DASQVEC(1:MAXCHANS)

%EXTERNALSTRING(255)%SPEC ERRMSG
%SYSTEMROUTINESPEC WTDUMP(%RECORD(SCB)%NAME S, %INTEGER LEN, %NAME LOC)
%SYSTEMROUTINESPEC SCBDEFINE(%INTEGER N, %RECORD(FILESPEC)%NAME FS, %RECORD(SCBNAME)%NAME IOSCB,%INTEGER CHNTYP)
%SYSTEMPREDICATESPEC FILOP(%RECORD(SCB)%NAME S, %INTEGERNAME ERR)
%SYSTEMROUTINESPEC RELEASE(%INTEGER CHAN)
%SYSTEMROUTINESPEC FREEVEC(%INTEGER THIS)
%EXTERNALSTRING(12)%FNSPEC OCTTOSTR(%INTEGER N)
%EXTERNALSTRING(255)%FNSPEC FSTOSTR(%RECORD(FILESPEC)%NAME FS)




%SYSTEMROUTINE OPNDASQ(%INTEGER N,%RECORD(FILESPEC)%NAME FS,%INTEGER DAORSQ)
   %RECORD(SCB)%NAME S
   %INTEGER ERROR,FN
   %UNLESS DASQVEC(N)_NAME==UNDSCB %START
      ERRMSG="OPENing already open DA/SQ channel for  ".FSTOSTR(FS)
      %SIGNAL 10,22,N
   %FINISH
   SCBDEFINE(N,FS,DASQVEC(N),DAORSQ)
   %IF DASQVEC(N)_NAME_DEVTYP=UNDEV %THEN DASQVEC(N)_NAME==UNDSCB %AND %RETURN
   S==DASQVEC(N)_NAME
   S_FLAGS=S_FLAGS!N   ;!KEEP CHANNEL NUMBER IN FLAG WORD
   %IF S_DEVTYP=DTADEV %THEN S_STATUS=S_STATUS!8_300; !NON-STANDARD BLOCKS
   %IF FUNCTION#-1 %THEN FN=FUNCTION %ELSE FN=4;!DEFAULT TO SINGLE USER UPDATE
   S_FILOPFN=S_FILOPFN!FN
   %UNLESS FILOP(S,ERROR) %START
      ERRMSG="Cannot OPEN DA/SQ channel ".FSTOSTR(FS)." Error:".OCTTOSTR(ERROR)
      %SIGNAL 10,21,N
   %FINISH
%END


%SYSTEMROUTINE DASQ CHANNEL CHECK(%INTEGER N, DAORSQ FILE)
   %RECORD(SCB)%NAME DASQSCB;   !CONTAINS THE CURRENT DASQ RECORD
   %UNLESS 1<=N<=MAXCHANS %START
      ERRMSG="Read/write to illegal DA/SQ channel"
      %SIGNAL 10,23,N
   %FINISH
   %IF DASQVEC(N)_NAME==UNDSCB %START
      ERRMSG="Read/write to DA/SQ channel before OPENing it"
      %SIGNAL 10,23,N
   %FINISH
   DASQSCB==DASQVEC(N)_NAME
   %IF DASQSCB_CHNTYP # DAORSQ FILE %START
      ERRMSG="Accessing a DA channel by an SQ routine or vice versa"
      %SIGNAL 10,24,N
   %FINISH
%END

%SYSTEMINTEGERFN DASQ LENGTH(%INTEGER CHAN, %INTEGER BEGIN,END)
!** THE SECOND AND THIRD PARAMETERS ARE PASSED AS %NAME TYPES
   %INTEGER LENGTH,LN
   LN=END>>27; LN=1 %IF LN=0
   LENGTH=END&RH - BEGIN&RH + LN
   %IF LENGTH<=0 %START
      ERRMSG="Storage area for DA/SQ routine inside out"
      %SIGNAL 10,25,CHAN
   %FINISH
   %RESULT=LENGTH
%END


%SYSTEMROUTINE CLDASQ(%INTEGER N,TYPE)
   %RECORD(SCB)%NAME DASQSCB;   !CONTAINS THE CURRENT DASQ RECORD
   %RECORD(RINGHEADER)%NAME R
   %UNLESS 1<=N<=MAXCHANS %START
      ERRMSG="Closing illegal DA/SQ channel number"
      %SIGNAL 10,28,N
   %FINISH
   %IF DASQVEC(N)_NAME==UNDSCB %START
      ERRMSG="Closing DA/SQ channel before OPENing it"
      %SIGNAL 10,28,N
   %FINISH
   DASQSCB==DASQVEC(N)_NAME
   %IF DASQSCB_CHNTYP # TYPE %START
      ERRMSG="Closing a DA/SQ channel with the wrong routine"
      %SIGNAL 10,28,N
   %FINISH
   %IF TYPE=SQFILE %AND DASQSCB_OBUFOP # 0 %START;   !OUTPUT REST OF ANY OUTPUT BUFFER
      R==DASQSCB_RINGHEAD
      R_BYTPTR=RH&R_BUFADR+2;  !START OF BUFFER
      WTDUMP(DASQSCB,R_BYTCNT,INTEGER(R_BYTPTR))
   %FINISH
   RELEASE(DASQSCB_FILOPFN>>18)
   FREEVEC(ADDR(DASQSCB))
   DASQVEC(N)_NAME==UNDSCB
%END


%ENDOFFILE

