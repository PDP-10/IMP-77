!+
! ^THESE TWO ROUTINES DO THE SAME THING EXCEPT THAT READFS OPERATES
!ON THE CURRENT INPUT STREAM AND GETFS USES THE STRING PARAMETER IT
!IS GIVEN. ^THEY BOTH HAVE THE FUNCTION OF PARSING A SEQUENCE OF CHARACTERS
!INTO THE COMPONENTS OF A STANDARD DEC-10 FILE SPECIFICATION AND PUTING
!THE RESULT IN THE GIVEN 'FILESPEC' RECORD.
! ^A CORRECT FILE SPECIFICATION IS A SUBSET OF THE FULL SPECIFICATION
!GIVEN BELOW
!.NF
!       DEV:FILENAME.EXT[PROJ,PROG]/SWITCH:NUMBER/SWITCH(SWITCH)
!.F
! ^FOR A DESCRIPTION OF THE 'FILESPEC' RECORD SEE 'PERMS.IMP'.
!-



%EXTERNALSTRING(255)%SPEC ERRMSG

%OWNINTEGER FSCHAR;  !LAST CHAR READ
%EXTERNALROUTINESPEC READOCTAL(%INTEGERNAME N)
%EXTERNALROUTINESPEC READPPN(%INTEGERNAME PPN)
%SYSTEMROUTINESPEC SDINPUT(%INTEGER N,%STRING(1)%NAME STR)
%SYSTEMROUTINESPEC SINPUT(%INTEGER N)

%RECORD(FILESPEC)%FN GETFS
   %ROUTINESPEC NEXT FSCHAR
   %ROUTINESPEC RDFSCHAR
   %PREDICATESPEC ALPHANUM
   %ROUTINESPEC GOBBLE SPACES
   %ROUTINESPEC RDWORD(%STRING(1)%NAME WORD, %INTEGER LEN)
   %ROUTINESPEC RDFS SWITCH
   %INTEGER COLON,DOT,N
   %STRING(80) WORD
   %RECORD(FILESPEC) FS
   FS=0
   WORD=""; COLON=0; DOT=0
      NEXT FSCHAR
   %CYCLE
      GOBBLE SPACES
      %IF ALPHANUM %THEN RDWORD(WORD,6)
      %IF FSCHAR=':' %START
         %IF COLON#0 %THENEXIT
         COLON=1; FS_DEV=WORD
         WORD=""
         RDFSCHAR
         %CONTINUE
      %FINISH
      %IF FSCHAR='.' %START
         %IF DOT#0 %THENEXIT
         DOT=1; FS_FILE=WORD
         WORD=""
         RDFSCHAR
         %CONTINUE
      %FINISH
      %IF FSCHAR='[' %START
         %IF FS_PPN#0 %THENEXIT
         SKIPSYMBOL
         READPPN(FS_PPN)
         NEXT FSCHAR
         N=1
         %CYCLE
            GOBBLE SPACES
            %EXIT %UNLESS FSCHAR=',' %AND N<=MAX SFDS
            RDFSCHAR
            RDWORD(FS_SFDS(N),6)
            N=N+1
         %REPEAT
         %IF FSCHAR=']' %THEN RDFSCHAR
         %EXIT %IF ALPHANUM
         %CONTINUE
      %FINISH
      %IF FSCHAR='<' %START
         %IF FS_PROT#0 %THENEXIT
         SKIP SYMBOL
         READOCTAL(FS_PROT)
         NEXT FSCHAR
         %IF FS_PROT>8_777 %THENEXIT
         %IF FSCHAR='>' %THEN RDFSCHAR
         %EXIT %IF ALPHANUM
         %CONTINUE
      %FINISH
      %IF FSCHAR='/' %START
         RDFS SWITCH %WHILE FSCHAR='/'
      %FINISH
      %IF DOT # 0 %START
     %IF LENGTH(WORD)>3 %THEN FS_EXT=SUBSTRING(WORD,1,3) %ELSE FS_EXT=WORD
  %FINISH %ELSE FS_FILE=WORD
      %RESULT=FS
   %REPEAT
!HERE FOR SYNTAX INFRINGMENT
   ERRMSG="Bad file specification "
   %SIGNAL 10,9

%ROUTINE NEXT FSCHAR
   FSCHAR=NEXT SYMBOL
%END

%ROUTINE RDFSCHAR
   SKIP SYMBOL; FS CHAR=NEXT SYMBOL
%END

%PREDICATE ALPHANUM
    %IF 'A'<=FSCHAR<='Z' %OR 'a'<=FSCHAR<='z' %OR '0'<=FSCHAR<='9' %THEN %TRUE
   %FALSE
%END

%ROUTINE GOBBLE SPACES
   %WHILE FSCHAR=' ' %OR FSCHAR=TAB %THEN RDFSCHAR
%END

%ROUTINE RDWORD(%STRING(1)%NAME WORD, %INTEGER LEN)
   %INTEGER I
   I=1
   %WHILE ALPHANUM %CYCLE
      %IF I<=LEN %THEN WORD=WORD.TOSTRING(FSCHAR) %AND I=I+1
      RDFSCHAR
   %REPEAT
   GOBBLE SPACES
%END

%ROUTINE RDFS SWITCH
   %CYCLE
      %CYCLE
         %IF LENGTH(FS_SWITCHES)>=39 %THEN FSCHAR=NL %AND %RETURN;  !NO MORE
         FS_SWITCHES=FS_SWITCHES.TOSTRING(FSCHAR)
         RDFSCHAR
      %REPEAT %UNTIL %NOT ALPHANUM
      GOBBLE SPACES
   %REPEAT %UNTIL ':'#FSCHAR#'#' %AND '-'#FSCHAR#'+'
%END
%END

%EXTERNALROUTINE READFS(%RECORD(FILESPEC)%NAME FS)
   FS=GETFS
%END

%EXTERNALRECORD(FILESPEC)%FN STRTOFS(%STRING(255) FILE)
   %RECORD(FILESPEC) FS
   %INTEGER N
   %ON %EVENT 10 %START
      CLOSE INPUT
      SELECT INPUT(N)
      ERRMSG=ERRMSG.FILE
      %SIGNAL 10,SUBEVENT,EVENTINFO
   %FINISH

   FILE=FILE."
";   !TO ENSURE NO EOF
   N=INSTREAM
   SDINPUT(-1,FILE)
   SINPUT(-1)
   FS=GETFS
   CLOSE INPUT
   SELECT INPUT(N)
   %RESULT=FS
%END



%EXTERNALROUTINE DEFINPUT(%INTEGER N,%STRING(255) SPEC)
   %EXTERNALROUTINESPEC XDEFINPUT(%INTEGER N,%RECORD(FILESPEC)%NAME FS)
   %RECORD(FILESPEC) FS
   FS=STRTOFS(SPEC)
   XDEFINPUT(N,FS)
%END


%EXTERNALROUTINE DEFOUTPUT(%INTEGER N,%STRING(255) SPEC)
   %EXTERNALROUTINESPEC XDEFOUTPUT(%INTEGER N,%RECORD(FILESPEC)%NAME FS)
   %RECORD(FILESPEC) FS
   FS=STRTOFS(SPEC)
   XDEFOUTPUT(N,FS)
%END


%ENDOFFILE
