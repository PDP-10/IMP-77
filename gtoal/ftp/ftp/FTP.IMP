!FTP.IMP
!   COPYRIGHT K.FARVIS ERCC.
%BEGIN
%EXTERNALINTEGERSPEC CCL
%EXTERNALROUTINESPEC MACINIT
%EXTERNALINTEGER CNTRLC,FTPTST
%EXTERNALINTEGERFNSPEC GETTIME
%EXTERNALINTEGERFNSPEC JOBNUM
%EXTERNALINTEGERFNSPEC PPN
%EXTERNALROUTINESPEC ECHO
%EXTERNALROUTINESPEC NOECHO
%EXTERNALPREDICATESPEC CALLI2(%INTEGER N,%INTEGERNAME AC)
%EXTERNALROUTINESPEC PROMPT(%STRING(255) STR)
%EXTERNALROUTINESPEC READPPN(%INTEGERNAME N)
%EXTERNALROUTINESPEC WRITEFS(%RECORD(FILESPEC)%NAME FS)
%EXTERNALROUTINESPEC WRITEPPN(%INTEGER N)
%EXTERNALPREDICATESPEC XISFILE(%RECORD(FILESPEC)%NAME FS)
%EXTERNALROUTINESPEC DELETE(%STRING(255) FILE)
%EXTERNALROUTINESPEC XDELETE(%RECORD(FILESPEC)%NAME FS)
%EXTERNALRECORD(FILESPEC)%FNSPEC STRTOFS(%STRING(255) STR)
%EXTERNALSTRING(255)%FNSPEC FSTOSTR(%RECORD(FILESPEC)%NAME FS)
%EXTERNALINTEGERFNSPEC STRTOSIX(%STRING(6) STR)
%EXTERNALSTRING(6)%FNSPEC SIXTOSTR(%INTEGER N)
%EXTERNALSTRING(12)%FNSPEC OCTTOSTR(%INTEGER N)
%EXTERNALROUTINESPEC READLINE(%STRING(1)%NAME STR)
%EXTERNALINTEGERFNSPEC MATCH(%STRING(1)%NAME S,%STRING(255) T)
%EXTERNALPREDICATESPEC SWITCH ARG(%STRING(1)%NAME SWITCHES,%STRING(11) SWITCH, %NAME X)
%EXTERNALROUTINESPEC INIT NODES
%EXTERNALROUTINESPEC LIST FTP NODES
%EXTERNALPREDICATESPEC ADDRESS(%STRING(1)%NAME TITLE,GPASS,TS ADDRESS,%INTEGERNAME NODE)
%EXTERNALPREDICATESPEC ISNODE(%STRING(1)%NAME NODE,TYPE %INTEGERNAME STATUS)
%EXTERNALSTRING(12)%SPEC OUR SRC NODE
%EXTERNALSTRING(12)%FNSPEC OURNODE
%EXTERNALINTEGER LOGIT;   !DUMMY NAME TO SATISFY THE LOADER
%EXTERNALSTRING(255)%SPEC ERRMSG
%STRING(255) LINE
%STRING(96) SOURCE,DEST,SFILE,DFILE
%RECORD(FILESPEC) QUEFILE,DFS,SFS
%STRING(96) SSWITCHES,DSWITCHES
%STRING(20) DNODE,DTYPE,DFILEPASS,DUSER,DUSERPASS,DACC,DACCPASS,DMODE,DCODE,DDEV
%STRING(20) SNODE,STYPE,SFILEPASS,SUSER,SUSERPASS,SACC,SACCPASS,SMODE,SCODE,SDEV
%STRING(20) THIS NODE,OTHER NODE,FILE
!G %STRING(150) GATESW
%STRING(255) TS ADDRESS
%INTEGER N,S,OURPPN
%CONSTINTEGER LF=8_12
%CONSTINTEGER TRUE=-1, FALSE=0
%CONSTINTEGER TTY=0, TEMP=8, QFILE=13, QDIR=14
%CONSTINTEGER DEBUG=FALSE
%OWNINTEGER OPRPRV;   !TRUE ALLOWS OPR [1,2] TO HAVE PRIVILIGES - DO NOT CHECK PASSWORDS
!IF DEBUG IS SET THEN THE QUEPPN AND DEVICE ARE SET
!TO ONES OWN AREA, OR ELSE IT IS DSKC:[3,3]
%EXTERNALSTRING(6)%SPEC QDEV
%OWNINTEGER QUFD=8_3 000003
%CONSTINTEGER MFD=8_1 000001
%CONSTINTEGER OPRPPN=8_1 000002, HLP PPN=8_2 000005
%CONSTINTEGER FTP=8_466460, FTD=8_466444;    !FILE EXTENSIONS

%CONSTSTRING(7)%ARRAY DEST MODE(1:7) =
"CREATE", "WRITE", "CWRITE", "APPEND", "CAPPEND", "SUBMIT", "PRINT"

%CONSTSTRING(6)%ARRAY SOURCE MODE(1:3)=
"NEVER","DURING","AFTER"


%CONSTSTRING(5) PRIME="PRIME", IBM="IBM", GEC="GEC", DEC10="DEC10", ARPA="ARPA", %c
DLGP="DLGP", EMAS="EMAS", VAX="VAX"
%conststring(8) PASSWORD="PASSWORD", ACCESS="USERS",OUTPUT SW="ACCESS", INPUT SW="DELETE"
!G %CONSTSTRING(13) GATE PASS="GATEPASSWORDS"

   %PREDICATE ALPHA(%INTEGER S)
!=============================
! Returns %TRUE if S is alphabetic
      %TRUE %IF 'a'<=S<='z' %OR 'A'<=S<='Z'
      %FALSE
   %END

   %STRING(255)%FN UPPER CASE OF(%STRING(1)%NAME STR)
!===================================================
!Converts a string to upper case
      %STRING(255) STR1
      %INTEGER N,L,S
      L=LENGTH(STR)
      STR1=""
      %IF L#0 %START
         %FOR N=1,1,L %CYCLE
            S=CHARNO(STR,N); S=S-32 %IF 'a'<=S<='z'
            STR1=STR1.TOSTRING(S)
         %REPEAT
      %FINISH
      %RESULT=STR1
   %END

%ROUTINE PARSE DEVICE(%STRING(1)%NAME DEVICE,DEV %INTEGERNAME NODE,NUM)
!=======================================================================
!takes a device of type DEVnnm: and parses it into three separate fields
   %INTEGER N,L,S
   DEV=""; NODE=0; NUM=0;  !DEFAULTS
   L=LENGTH(DEVICE)
   %RETURN %IF L=0
   %FOR N=1,1,L %CYCLE
      S=CHARNO(DEVICE,N)
      ->NODE FOUND %UNLESS 'A'<=S<='Z'
      DEV=DEV.TOSTRING(S)
   %REPEAT
   %RETURN
NODE FOUND:
   %IF L-N>0 %START
      N=N+1
      NODE=(S-'0')*8+CHARNO(DEVICE,N)-'0'
      %RETURN %IF N=L
      S=CHARNO(DEVICE,N+1)
   %FINISH
   NUM=S-'0'
%END




%INTEGERFN DEVTYPE(%STRING(6) DEV)
!=================================
!Returns the result of the DEVTYP UUO or -1 if unknown
   %CONSTINTEGER DEVTYP=8_53, DEV AVAL=8_40 000000
   %INTEGER N
   N=STRTOSIX(DEV)
   %RESULT=-1 %UNLESS CALLI2(DEVTYP,N) %AND N&DEV AVAL#0
   %RESULT=N&8_77
%END

%ROUTINE NO TRAIL STR(%STRING(6)%NAME STR)
   %INTEGER N
   %FOR N=6,-1,1 %CYCLE
      %EXIT %IF CHARNO(STR,N)#SP
   %REPEAT
   STR=SUBSTRING(STR,1,N)
%END

%STRING(15)%FN PPNTOSTR(%INTEGER PN)
!===========================================
!converts a ppn to a string
   %RESULT="[".OCTTOSTR(PN>>18).",".OCTTOSTR(PN&8_777777)."]"
%END





%PREDICATE READ SWITCH INI(%STRING(1)%NAME DMODE,SMODE)
!======================================================
!READS THE SWITCH.INI FILE TO PICK UP DEFAULT /ACCESS AND /DELETE VALUES
   %RECORD(FILESPEC) FS
   %STRING(20) STR,SWITCH
   %INTEGER DMODE OK,SMODE OK,IN,CHAR,N

   %ON %EVENT 9,10 %START
      CLOSE INPUT; SELECT INPUT(IN)
      %TRUE
   %FINISH

   %ROUTINE READ CHAR
      READSYMBOL(CHAR) %UNTIL SP#CHAR#TAB; CHAR=CHAR-32 %IF 'a'<=CHAR<='z'
   %END

   %PREDICATE ALPHANUM
      READ CHAR
      %TRUE %IF 'A'<=CHAR<='Z' %OR '0'<=CHAR<='9'
      %FALSE
   %END

   FS=0; FS_PPN=PPN
   FS_FILE="SWITCH"; FS_EXT="INI"
   IN=INSTREAM
   SELECT INPUT(TEMP)
   XDEFINE INPUT(TEMP,FS)
   SELECT INPUT(TEMP)
   %CYCLE
      STR=""
      %WHILE ALPHANUM %CYCLE
        STR=STR.TOSTRING(CHAR)
      %REPEAT
      %IF STR="FTP" %START
         %CYCLE
            READ CHAR %WHILE '/'#CHAR#NL
            %EXIT %IF CHAR=NL
            SWITCH=""
            %WHILE ALPHANUM %CYCLE
               SWITCH=SWITCH.TOSTRING(CHAR)
            %REPEAT
            %EXIT %IF CHAR=NL
            %IF MATCH(OUTPUT SW,SWITCH)=1 %START
               STR=""
               %FOR N=1,1,12 %CYCLE
                  %EXIT %IF %NOT ALPHANUM
                  STR=STR.TOSTRING(CHAR)
               %REPEAT
               DMODE=STR %IF DMODE=""
               DMODE OK=TRUE
               %CONTINUE
            %FINISH
            %IF MATCH(INPUT SW,SWITCH)=1 %START
               STR=""
               %FOR N=1,1,12 %CYCLE
                  %EXIT %IF %NOT ALPHANUM
                  STR=STR.TOSTRING(CHAR)
               %REPEAT
               SMODE=STR %IF SMODE=""
               SMODE OK=TRUE
               %CONTINUE
            %FINISH
            %IF MATCH(PASSWORD,SWITCH)#1#MATCH(ACCESS,SWITCH) %START
               ERRMSG="SWITCH.INI unrecognised FTP switch - ".SWITCH
               %FALSE
            %FINISH
         %REPEAT
         %IF DMODE OK %AND SMODE OK %START
            CLOSE INPUT; SELECT INPUT(IN)
            %TRUE
         %FINISH
      %ELSE
         %IF CHAR#NL %START
            SKIPSYMBOL %WHILE NEXTSYMBOL#NL;   !SKIP TO END OF LINE
         %FINISH
      %FINISH
      SKIPSYMBOL %WHILE NEXTSYMBOL<=SP;  !AND UNTIL BEGINNING OF NEXT SPEC
   %REPEAT
%END


%PREDICATE FILEANAL(%STRING(1)%NAME TEXT,FILE,NODE,TYPE,SWITCHES,MODE,DEST DEV,FPASS,USER,UPASS,ACC,APASS,CODE, %RECORD(FILESPEC)%NAME FS,%INTEGER DEST)
!=========================================================================================================================
!Takes the full filespec given and parses it into node,password etc., other
!switches and file spec.
      %STRING(80) STR
      %STRING(6) DEV
      %INTEGER STATUS,NNODE,NUM,UPASSGOT

      %ROUTINE GET RESPONSE(%STRING(1)%NAME OPT,%STRING(30) OPTSTR)
      !------------------------------------------------------------
      !if the value of OPT is null then the string OPTSTR is used for prompting the user
         %IF OPT="" %START
            PRINTSTRING(OPTSTR); PRINTSTRING(" for ")
            PRINTSTRING(TEXT); PRINTSTRING("	: "); READLINE(OPT)
         %FINISH
      %END

      %ROUTINE FILL PATH(%RECORD(FILESPEC)%NAME FS)
      !GET THE DEFAULT PATH
         %CONSTINTEGER MAX SFDS=5
         %RECORDFORMAT PATHBLOCK(%INTEGER FUNCT,SWITCHES,PPN, %INTEGERARRAY SFDS(1:MAXSFDS))
         %RECORD(PATHBLOCK)PATH
         %INTEGER N
         PATH=0
         PATH_FUNCT=-1
         AC(1)=(3+MAX SFDS)<<18!ADDR(PATH)
         *8_047040000110;     !PATH AC1,0
         *8_255000000000;     !JFCL
         %IF PATH_PPN=0 %THEN FS_PPN=OURPPN %AND %RETURN
         FS_PPN=PATH_PPN
         %FOR N=1,1,MAX SFDS %CYCLE
            %RETURN %IF PATH_SFDS(N)=0
            FS_SFDS(N)=SIXTOSTR(PATH_SFDS(N))
            NO TRAIL STR(FS_SFDS(N))
         %REPEAT
      %END


      %IF SWITCH ARG(SWITCHES,"PASSWORD",UPASS) %THEN UPASSGOT=TRUE %ELSE UPASSGOT=FALSE
      FS=0; FPASS=""; USER=""; ACC=""; APASS=""; DEST DEV=""
      %UNLESS TEXT->NODE.("_").FILE %START
         NODE=THIS NODE; FILE=TEXT; TEXT=NODE."_".FILE
      %FINISH
      NODE=UPPER CASE OF(NODE)
      %IF NODE=THIS NODE %START
         TYPE=DEC10
      %ELSE
         %UNLESS ISNODE(NODE,TYPE,STATUS) %START
            %IF LENGTH(NODE)=5 %THEN STR=SUBSTRING(NODE,1,4) %ELSE STR="";   !IF AN SRCNET NODE SPEC TRY STRIPPING OFF THE 'F'
            %IF STR#"" %AND ISNODE(STR,TYPE,STATUS) %START
               NODE=STR
            %ELSE
               ERRMSG="Not a recognised node:- ".NODE
               %FALSE
            %FINISH
         %FINISH
      %FINISH
      %IF NODE=THIS NODE %THEN TYPE=DEC10
      %IF TYPE=DEC10 %START
1:       FS=STRTOFS(FILE)
         STR=FSTOSTR(FS)
         %IF FS_PPN=0 %AND LENGTH(FS_DEV)#3 %START
            %IF NODE=THIS NODE %THEN FILL PATH(FS) %ELSE FS_PPN=OURPPN
         %FINISH
         USER=PPNTOSTR(FS_PPN)
         ACC=USER
         PARSE DEVICE(FS_DEV,DEV,NNODE,NUM)
         %IF DEV#"LPT" %AND DEV#"PLT" %START
!*            %IF FS_FILE="" %THEN GET RESPONSE(FILE,"Filename") %AND ->1
            %UNLESS (FS_PPN=OURPPN %AND NODE=THIS NODE) %OR (OPRPRV=TRUE %AND OURPPN=OPRPPN) %START
               %UNLESS UPASSGOT=TRUE %START; !DO NOT CHECK FOR NULL PASSWORD
                  NOECHO; GET RESPONSE(UPASS,"User password"); PRINTSYMBOL(LF); ECHO
               %FINISH
            %FINISH
         %FINISH
!         CODE="BINARY"
         CODE="36BIT"
      %ELSE %IF TYPE=IBM %START
         %IF MODE#"SUBMIT" %START
            GET RESPONSE(FILE,"Dataset name") %WHILE FILE=""
         %FINISH
         GET RESPONSE(USER,"IBM ID. (2 chars)") %WHILE USER=""
         NOECHO
         GET RESPONSE(ACC,"IBM account (4 chars)") %WHILE ACC=""
         PRINTSYMBOL(LF); ECHO
         CODE="TEXT"
      %ELSE %IF TYPE=GEC%START
         %IF DEST=FALSE %AND MODE#"NEVER" %THEN ERRMSG="/DELETE:NEVER is only value accepted for GECs" %AND %FALSE
         GET RESPONSE(FILE,"GEC filename or <CR> for device")
         %IF FILE="" %START
            GET RESPONSE(DEST DEV,"GEC device name") %WHILE DEST DEV=""
            GET RESPONSE(FILE,"GEC filename for output")
         %FINISH
         GET RESPONSE(USER,"GEC login name") %WHILE USER=""
         NOECHO; GET RESPONSE(UPASS,"GEC login password"); PRINTSYMBOL(LF); ECHO
         GET RESPONSE(ACC,"GEC account name")
         %IF ACC="" %THEN ACC=USER
         CODE="TEXT"
      %ELSE %IF TYPE=PRIME %START
         GET RESPONSE(FILE,"PRIME filename") %WHILE FILE=""
         GET RESPONSE(USER,"PRIME login name") %WHILE USER=""
         NOECHO; GET RESPONSE(UPASS,"PRIME login password"); PRINTSYMBOL(LF); ECHO
         CODE="TEXT"
      %ELSEIF TYPE=VAX %START
         GET RESPONSE(FILE,"VAX filename") %WHILE FILE=""
         GET RESPONSE(USER,"VAX user name") %WHILE USER=""
         NOECHO; GET RESPONSE(UPASS,"VAX user password"); PRINTSYMBOL(LF); ECHO
         CODE="TEXT"
      %ELSEIF TYPE=ARPA %START
         GET RESPONSE(FILE,"Filename") %WHILE FILE=""
         GET RESPONSE(USER,"User name") %WHILE USER=""
         NOECHO; GET RESPONSE(UPASS,"User password"); PRINTSYMBOL(LF); ECHO
         CODE="TEXT"
      %ELSEIF TYPE=EMAS %START
         GET RESPONSE(FILE,"EMAS filename") %WHILE FILE=""
         GET RESPONSE(USER,"EMAS user name") %WHILE USER=""
         NOECHO; GET RESPONSE(UPASS,"EMAS background password"); PRINTSYMBOL(LF); ECHO
         CODE="TEXT"
      %ELSE%IF TYPE=DLGP %START;   !PROTOCOL CONVERTER AT DARESBURY
         DEST DEV=OUR SRC NODE
         MODE="PRINT"
         CODE="TEXT"
      %ELSE
         ERRMSG="Not a recognised node type ".TYPE
         %FALSE
      %FINISH
      %TRUE
   %END

%PREDICATE QUEUE IT
!===================
!Queues a file for FTP
   %STRING(255) STR
   %STRING(6) DEVICE
   %INTEGER NODE,NUM,DTYP

   %PREDICATE OPEN QUEUE FILE
     %INTEGER N,KEY,TIMES

      %ON %EVENT 10 %START
         SELECT OUTPUT(QFILE); CLOSE OUTPUT
         %IF %NOT (SUBEVENT=5 %AND EVENTINFO=4) %THEN %SIGNAL 10,SUBEVENT,EVENTINFO
         %FALSE %IF TIMES>10;   !WELL WE TRIED
         ->1
      %FINISH

      QUEFILE=0
      QUEFILE_DEV=QDEV; QUEFILE_SWITCHES="/FUN:2";  !REPLACE ONLY
      QUEFILE_EXT="FTP"; QUEFILE_PPN=QUFD
      QUEFILE_PROT=8_177
      TIMES=0
1:    TIMES=TIMES+1
      KEY=GETTIME//100+JOBNUM; !A UNIQUE NAME
      %FOR N=1,1,6 %CYCLE
         QUEFILE_FILE=QUEFILE_FILE.TOSTRING(REM(KEY,10)+'0')
         KEY=KEY//10
      %REPEAT
      XDEFINE OUTPUT(QFILE,QUEFILE)
      SELECT OUTPUT(QFILE)
      %TRUE
   %END

   %ROUTINE COMMA
   !OUTPUT A COMMA
      PRINTSYMBOL(',')
   %END

   STR=LINE
   %UNLESS STR->DEST.("=").SOURCE %START
      ERRMSG="Line syntax"
      ->ERROR
   %FINISH
   %UNLESS DEST->DEST.("/").DSWITCHES %START; %FINISH
   %UNLESS SOURCE->SOURCE.("/").SSWITCHES %START; %FINISH
   DSWITCHES=UPPER CASE OF(DSWITCHES)
   SSWITCHES=UPPER CASE OF(SSWITCHES)
   %UNLESS SWITCH ARG(DSWITCHES,OUTPUT SW,DMODE) %THEN DMODE=""
   %UNLESS SWITCH ARG(SSWITCHES,INPUT SW,SMODE) %THEN SMODE=""
!NOW ADD DEFAULTS FROM SWITCH.INI IF NECESSARY
   %IF SMODE="" %OR DMODE="" %START
      ->ERROR %UNLESS READ SWITCH INI(DMODE,SMODE)
   %FINISH
!AND CHECK VALID SWITCH VALUES
   %IF DMODE#"" %START
      %FOR N=1,1,7 %CYCLE
         ->DMOK %IF MATCH(DESTMODE(N),DMODE)=1
      %REPEAT
      ERRMSG="Unknown /ACCESS value - ".DMODE
      ->ERROR
DMOK: DMODE=DEST MODE(N)
   %ELSE DMODE=DESTMODE(1);  !DEFAULT VALUE
   %IF SMODE#"" %START
      %FOR N=1,1,3 %CYCLE
         ->SMOK %IF MATCH(SOURCE MODE(N),SMODE)=1
      %REPEAT
      ERRMSG="Unknown /DELETE value - ".SMODE
      ->ERROR
SMOK: SMODE=SOURCE MODE(N)
   %ELSE SMODE=SOURCE MODE(1);   !USE DEFAULT VALUE
   -> ERROR %UNLESS FILEANAL(DEST,DFILE,DNODE,DTYPE,DSWITCHES,DMODE,DDEV,DFILEPASS,DUSER,DUSERPASS,DACC,DACCPASS,DCODE,DFS,TRUE)
!G    %IF SWITCH ARG(DSWITCHES,GATE PASS,GATESW) %START;  !GOT A STRING OF GATEWAY SWITCHES
!G       -> ERROR %UNLESS ADDRESS(DNODE,GATESW,TSADDRESS,N)
!G    %ELSE GATESW=""
   %UNLESS DSWITCHES="" %START
      ERRMSG="Unknown destination switch ".DSWITCHES; ->ERROR
   %FINISH
   ->ERROR %UNLESS FILEANAL(SOURCE,SFILE,SNODE,STYPE,SSWITCHES,SMODE,SDEV,SFILEPASS,SUSER,SUSERPASS,SACC,SACCPASS,SCODE,SFS,FALSE)
   %IF SFILE="" %START
      ERRMSG="No source file name specified"; ->ERROR
   %FINISH
   %UNLESS SSWITCHES="" %START
      ERRMSG="Unknown source switch ".SSWITCHES; ->ERROR
   %FINISH
!NOW DO SOME MORE CHECKS
   %IF DNODE=THIS NODE %START
      %IF %NOT DEBUG %AND SNODE=THIS NODE %START
         ERRMSG="Cannot transfer files within the same node"; ->ERROR
      %FINISH
      DTYP=DEVTYPE(DFS_DEV)
      %IF DFS_DEV#"" %AND 7#DTYP#0 %AND DTYP#8_13 %START
         ERRMSG="Unknown or illegal destination device ".DFS_DEV; ->ERROR
      %FINISH
      OTHER NODE=SNODE
   %ELSE
      %IF SNODE=THIS NODE %START
         OTHER NODE=DNODE
         %UNLESS XISFILE(SFS) %START
            ERRMSG=FSTOSTR(SFS)." - File not found"; ->ERROR
         %FINISH
      %ELSE
         ERRMSG="This node must be specified for either source or destination file"; ->ERROR
      %FINISH
   %FINISH
   %IF DTYPE=DEC10 %AND DFS_FILE="" %START
      DFS_FILE=SFS_FILE
      %IF DFS_FILE="" %START;  !NOT A DEC-10 AS THE SOURCE
         ERRMSG="A destination file specification must be given"
         ->ERROR
      %FINISH
      %IF DFS_EXT="" %THEN  DFS_EXT=SFS_EXT
   %FINISH
   ->ERROR %UNLESS OPEN QUEUE FILE
   PARSE DEVICE(DFS_DEV,DEVICE,NODE,NUM)
   %IF DEVICE="LPT" %START
      DMODE=DEST MODE(7);   !PRINT
   %FINISH
!FOR A FULL DESCRIPTION OF THE FILE LOOK AT MODULE FTPREQ.IMP
   PRINTSTRING(OTHER NODE); NEWLINE
   PRINTSTRING(DNODE); PRINTSYMBOL('_')
   %IF DTYPE=DEC10 %THEN WRITEFS(DFS) %ELSE PRINTSTRING(DFILE); PRINTSYMBOL('=')
   PRINTSTRING(SNODE); PRINTSYMBOL('_')
   %IF STYPE=DEC10 %THEN WRITEFS(SFS) %ELSE PRINTSTRING(SFILE); NEWLINE
   WRITEPPN(OURPPN); NEWLINE
   PRINTSTRING(DFILEPASS); COMMA; PRINTSTRING(DUSER); COMMA
   PRINTSTRING(DUSERPASS); COMMA; PRINTSTRING(DACC); COMMA
   PRINTSTRING(DACCPASS); NEWLINE
   PRINTSTRING(SFILEPASS); COMMA; PRINTSTRING(SUSER); COMMA
   PRINTSTRING(SUSERPASS); COMMA; PRINTSTRING(SACC); COMMA
   PRINTSTRING(SACCPASS); NEWLINE
   PRINTSTRING(DMODE); COMMA; PRINTSTRING(SMODE); COMMA
   %IF DNODE=THIS NODE %THEN PRINTSTRING(SCODE) %ELSE PRINTSTRING(DCODE)
   NEWLINE
   PRINTSTRING(DDEV);COMMA; COMMA; COMMA; NEWLINE
!G    PRINTSTRING(GATESW); NEWLINE
   CLOSE OUTPUT; SELECT OUTPUT(TTY)
   %TRUE
ERROR:
   SELECT OUTPUT(TTY)
   PRINTSYMBOL('?')
   PRINTSTRING(ERRMSG); NEWLINE
   %FALSE
%END


%ROUTINE HELP
!============
!types out the help information
   %INTEGER S
   %ON %EVENT 9,10 %START
      %IF EVENT=10 %START
         PRINTSTRING("?No info on FTP"); NEWLINE
      %ELSE
         CLOSE INPUT; SELECT INPUT(TTY)
      %FINISH
      %RETURN
   %FINISH

   DEFINE INPUT(TEMP,"HLP:FTP.HLP")
   SELECT INPUT(TEMP)
   %CYCLE
      READSYMBOL(S); PRINTSYMBOL(S)
   %REPEAT
%END

%ROUTINE LIST
!============
!lists the queues
   %RECORD(FILESPEC) FS,QDIRFS
   %STRING(255) TEXT
   %STRING(50) USER,DEST
   %INTEGER FILE,EXT,TRANS
   %ON %EVENT 9,10 %START
      %IF EVENT=10 %START
         %IF INSTREAM=QDIR %START
            PRINTSTRING("Problem looking up Queue area on disk")
         %ELSE ->1
      %ELSE
         %IF TRANS=-1 %START;   !IF ANY FILES HAVE BEEN FOUND
            PRINTSTRING("Where * indicates the job being transferred"); NEWLINE
         %FINISH
      %FINISH
     NEWLINE
      CLOSE INPUT
      SELECT INPUT(QDIR); CLOSE INPUT
      SELECT INPUT(TTY); %RETURN
   %FINISH

   %ROUTINE PRINT HEADER
      PRINTSTRING("    Seq#   User         Destination                  Source"); NEWLINE
   %END

   NEWLINE
   TRANS=0
   QDIRFS=0; QDIRFS_DEV=QDEV
   QDIRFS_FILE=SIXTOSTR(QUFD)
   QDIRFS_EXT="UFD"
   QDIRFS_PPN=MFD
   QDIRFS_SWITCHES="/MODE:#10"
   SELECT INPUT(QDIR)
   XDEFINE INPUT(QDIR,QDIRFS)
   %CYCLE
      SELECT INPUT(QDIR)
      FS=0
      %CYCLE
         READSYMBOL(FILE); READSYMBOL(EXT); EXT=EXT>>18
         %IF EXT=FTD %START
            FS_EXT="FTD"
            PRINT HEADER %IF TRANS=0
            TRANS=-1;  !FLAG THAT ONE IS FOUND
            PRINTSTRING("* ")
            %EXIT;   !SUCCESS
         %FINISH
         %IF EXT=FTP %START
            FS_EXT="FTP"
            %IF TRANS=0 %START
              PRINT HEADER
              TRANS=1
            %FINISH
            SPACES(2)
            %EXIT
         %FINISH
      %REPEAT
      FS_DEV=QDEV
      FS_FILE=SIXTOSTR(FILE)
      FS_PPN=QUFD
      SELECT INPUT(QFILE)
      XDEFINE INPUT(QFILE,FS)
      READLINE(DEST)
      READLINE(TEXT)
      READLINE(USER)
      PRINTSTRING(FS_FILE); SPACE; PRINTSTRING(USER); PRINTSYMBOL(TAB)
      PRINTSTRING(TEXT); NEWLINE
1:    CLOSE INPUT
   %REPEAT
%END


%ROUTINE KILL(%STRING(1)%NAME FILENAME)
!=======================================
!kills a queue entry
   %RECORD(FILESPEC) FS
   %STRING(255) STR,FIL
   %INTEGER USER
   FS=0; FS_DEV=QDEV
   FS_FILE=FILENAME; FS_EXT="FTP"; FS_PPN=QUFD
1: %IF XISFILE(FS) %START
      XDEFINE INPUT(QFILE,FS)
      SELECT INPUT(QFILE)
      READ LINE(LINE); !DESTINATION
      READLINE(STR);    !CONTAINS FILESPECS
      READPPN(USER); READLINE(LINE); !SKIP REST OF LINE
      READLINE(LINE)
      READLINE(LINE);  !HAS EITHER "MAIL" OR "POST" IF A MAIL FILE
      CLOSE INPUT
      SELECT INPUT(TTY)
      %UNLESS USER=OURPPN %OR PPN=OPR PPN %START
         PRINTSTRING("?Not the owner of the request"); NEWLINE
         %RETURN
      %FINISH
      XDELETE(FS)
      PRINTSTRING("Killed")
!NOW CHECK IF MAIL FILE AND KILL FILE TO BE SENT
      %IF LINE->FIL.(",MAIL,").FIL %OR LINE->FIL.(",POST,").FIL %START;  !A MAIL FILE
         %IF STR->FIL.("=").STR %AND STR->STR.("_").FIL %START
            DELETE(FIL)
            PRINTSTRING(" and post file deleted")
         %FINISH
      %FINISH
      NEWLINE
      %RETURN
   %FINISH
   %IF FS_EXT="FTP" %START;   !TRY ONE WHICH HAS ALREADY STARTED
      FS_EXT="FTD"; ->1
   %FINISH
   PRINTSTRING("?No such request sequence number"); NEWLINE
%END



!===================================================================
!MAIN PROGRAM

   MACINIT
   CNTRLC=FALSE
   OURPPN=PPN
   %IF DEBUG %START
      QUFD=OURPPN;   !IF DEBUGGING, USE OWN AREA FOR QUEUE
   %ELSE
      N=-JOBNUM
      %IF OURPPN#OPRPPN %AND CALLI2(8_61,N) %START;   !GET JOB STATUS AND SEE IF JACCT BIT SET
         %IF N&8_010000 000000=0 %THEN PRINTSTRING("
?No privileges to modify the queue - must be RUN from SYS:
")
      %FINISH
   %FINISH
   THIS NODE=OUR NODE
   INIT NODES
   OPRPRV=FALSE
   %CYCLE
   !GET A COMMAND LINE
      %IF CCL %START
         AC(1)=0
         *8_051400 000001;   !GET COMMAND LINE (RESCAN)
         *8_255000 000000;  !JFCL
         %WHILE %NOT SP#NEXTSYMBOL#TAB %THEN SKIPSYMBOL
         %CYCLE; !SKIP COMMAND AND SPACES
            S=NEXTSYMBOL; %EXIT %UNLESS ALPHA(S)
            SKIPSYMBOL
         %REPEAT
         %WHILE %NOT SP#NEXTSYMBOL#TAB %THEN SKIPSYMBOL
         READLINE(LINE); %IF LINE="" %THEN LINE="/LIST";  !DEFAULT
      %ELSE
         %CYCLE
            PROMPT("*")
            %WHILE NL#NEXTSYMBOL<=SP %THEN SKIPSYMBOL
            READLINE(LINE)
            %EXIT %IF LINE#""
         %REPEAT
      %FINISH
   !PROCESS THE COMMAND LINE
      %IF CHARNO(LINE,1)='/' %START;    !A SWITCH
         %IF SWITCH ARG(LINE,"EXIT",N) %THEN %EXIT
         %IF SWITCH ARG(LINE,"HELP",N) %THEN HELP %AND ->END
         %IF SWITCH ARG(LINE,"LIST",N) %THEN LIST %AND ->END
         %IF SWITCH ARG(LINE,"NODES",N) %THEN LIST FTP NODES %AND ->END
         %IF SWITCH ARG(LINE,"KILL",FILE) %START
            %IF OURPPN=HLP PPN %THEN PRINTSTRING("? LOGIN to modify the queue") %ELSE KILL(FILE)
            ->END
         %FINISH
         PRINTSTRING("? Unknown switch to FTP")
      %ELSE
         %IF OUR PPN=HLP PPN %THEN PRINTSTRING("? LOGIN to enter a file in the queue") %AND ->END
         %EXIT %UNLESS QUEUE IT;   ! A TRANSFER COMMAND
      %FINISH
END:
      %EXIT %IF CCL
   %REPEAT
   %IF OURPPN=HLP PPN %THEN PRINTSTRING("
.KJOB
.")
   *8_047000 000012;    !EXIT 0,

%ENDOFPROGRAM
