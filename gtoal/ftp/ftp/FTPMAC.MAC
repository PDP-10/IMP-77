TITLE FTPMAC
;COPYRIGHT K.FARVIS 1978,79

	SEARCH	IMPPRM,UUOSYM
	EXTERN	CNTRLC,FTPTST
	ENTRY	ERR,HIBARG,TOUT
	ENTRY	MACINI,SETTIM
	TWOSEG	400000

INTLOC:	PORTAL	.+1		;ALLOW EXECUTE ONLY ENTRY
	SKIPN	CNTRLC		;ARE WE ALLOWING?
	JRST	[setom	1	;yes
		getlch	1
		tlz	1,4	;set echo back on
		setlch	1
		RESET		;CLEAR ANY JACCT
		EXIT]	;EXIT
	MOVEM	1,SAV		;SAVE AC
	MOVE	1,INTBLK+2	;GET RETURN ADDR
	EXCH	1,SAV		;EXCHANGE RETURN ADDR AND AC1
	SETZM	INTBLK+2	;REENABLE INTERRUPTS
	JRST	@SAV		;DISMISS

;MACINI SETS UP THE INTERRUPT BLOCK
MACINI:	MOVE	1,[4,,INTLOC]
	MOVEM	1,INTBLK	;STORE IN INTERRUPT BLOCK
	MOVEI	1,2		;TRAP CTL C'S
	MOVEM	1,INTBLK+1
	SETZM	INTBLK+2
	SETZM	INTBLK+3
	SETZM	CNTRLC		;SET CNTRLC FLAG TO FALSE
	MOVEI	1,INTBLK
	MOVEM	1,.JBINT##	;STORE IN JOBDAT
	MOVE	T1,[%CNTIC]	;GET NUMBER OF TICKS PER SECOND
	GETTAB	T1,
	  JRST ERR
	MOVEM	T1,TICKS
	POPJ	P,

SUBTTL TIMEOUT SETTING

;SETTIM TAKES NUMBER OF SECONDS AS ARGUMENT
; %ROUTINE SETTIM(%INTEGER SECS)

SETTIM:	MOVE	T1,TICKS	;GET CLOCK TICKS
	IMUL	T1,ARG1		;GET TIMEOUT AS TICKS
	MOVEM	T1,TOUT		;SAVE
	HRRZI	ARG1,^D2000	;MILLISECS - USE 2 SECOND SLEEP TIMES
	HRLI	ARG1,100	;I/O FINISHED BIT
	MOVEM	ARG1,HIBARG	;SAVE AS HIBERNATE ARGUMENT
	SETZM	FTPTST		;SET TEST FLAG TO FALSE
	POPJ	P,

ERR:	SETZ	AC,
	ERROR	^D14,0,AC,IMPSTR<Gettab failure in timeout mechanism>

	RELOC 0
TOUT:	Z
TICKS:	Z
HIBARG:	Z
SAV:	0
INTBLK:	BLOCK	4

	PRGEND

SUBTTL READING
	SEARCH	IMPPRM,UUOSYM
	EXTERN	$INTST,$OUTTST,OUTSCB,INSCB,INERR
	EXTERN	ERR,FTPTST,HIBARG,TOUT
	EXTERN	GSEGS,PSEGS
	ENTRY	FTPRD,FTPWT,FTPOUT
	TWOSEG 400000

FTPRD:	MOVSI	T1,400000	;SET BIT 0 FOR TESTING FOR ZERO SYMBOL
	SKIPGE	FLAGS(IOREG)	;IS THE ZERO SYMBOL PENDING BIT SET(BIT 0)
	JRST	(J)		;YES RETURN ZERO
FTPRD0:	SOSGE	0,BYTCNT(IOREG)
	JRST	FTPR01
	ILDB	AC,BYTPTR(IOREG)
	SKIPN	AC		;IS IT ZERO
	IORM	T1,FLAGS(IOREG)	;YES, NOTE IT
	JRST	(J)	; AND RETURN

FTPR01:	XCT	0,IBUFOP(IOREG)	;GET A BUFFER
	JRST	FTPR0X		;GOT ONE
	XCT	STATZ(IOREG)	;TEST ERROR BITS
	JRST	$INTST		;SOME SET
	SKIPE	FTPTST		;ARE WE ONLY TESTING
	JRST	[SETZM	FTPTST	;CLEAR INDICATOR
		 JRST	(J)]	;RETURN
	MOVE	AC,UPTIM
	GETTAB	AC,		;GET UPTIME
	  JRST	ERR
	ADD	AC,TOUT		;ADD TIMOUT PERIOD
	MOVEM	AC,FINISH	;START TIMEOUT TIMER
FTPR02:	MOVE	IOREG,INSCB
	MOVE	AC,HIBARG
	HIBER	AC,		;HIBERNATE TILL I/O OR TIME
	  SKIP
	XCT	IBUFOP(IOREG)	;INPUT AGAIN
	JRST	FTPR0X		;GOT SOMETHING
	XCT	STATZ(IOREG)
	JRST	$INTST
	PUSH	P,J		;SAVE J,T1 AND ARG1
	PUSH	P,ARG1
	PUSH	P,T1
	PUSH	P,IOREG
	PUSHJ	P,FTPUP##	;ARE WE STILL ACTIVE?
	POP	P,IOREG
	POP	P,T1
	POP	P,ARG1
	POP	P,J
	JUMPE	AC,INERR	;THE CALL IS CLOSED
	MOVE	AC,UPTIM
	GETTAB	AC,		;GET NEW TIME
	  JRST ERR
	CAMGE	AC,FINISH	;HAVE WE TIMED OUT?
	JRST	FTPR02		;NOT YET, TRY AGAIN
FTPR03:	SETZ	AC,
	ERROR	^D14,0,AC,IMPSTR<Transport input timeout>


;HERE TO FIX A TSKSER BUG, WHERE THE BYTE COUNT GETS SCREWED IN THE BUFFER CONTROL
;BLOCK BUT IS CORRECT IN THE BUFFER HEADER, DUE TO TSKSER NOT GETTING CALLED
;BY UUOCON.
FTPR0X:
REPEAT 0,<
	SKIPN	IBUFFS		;DO WE WANT TO TYPE THE BUFFERS OUT
	JRST	FTPRX1		;NO
	PUSH	P,BUFADR(IOREG)
	PUSHJ	P,PRRING##	;OUTPUT THE RING TO TTY:
FTPRX1:
>;END REPEAT
	AOS	GSEGS		;ADD ONE TO THE NUMBER OF SEGMENTS RECIEVED
	HRRZ	AC,BUFADR(IOREG)	;GET THE BUFFER ADDRESS
	HLRZ	AC,1(AC)	;GET DAP TYPE
	CAIL	AC,1		;IS DAP TYPE LESS THAN 1 (DATA WITHOUT EOR)
	CAILE	AC,2		;IS IT DATA ?
	  JRST FTPR01		;NO THROW IT AWAY
	HRRZ	AC,BUFADR(IOREG)	;GET BUFFER ADDRESS AGAIN
	HRRZ	AC,1(AC)	;GET THE BYTE COUNT IN HEADER
;* SPECIAL TO FIX A BUG WHERE THE COUNTS GET OUT OF STEP
	MOVEM	AC,BYTCNT(IOREG); TELL THE CONTROL BLOCK WHAT IT SHOULD BE.
	JRST	FTPRD0		;AND THEN READ THEM

SUBTTL WRITING
FTPWT:	SOSGE	0,BYTCNT(IOREG)
	JRST	FTPWTO
	IDPB	ARG1,BYTPTR(IOREG)
	  POPJ	P,

FTPWTO:	MOVEI	T1,FTPWT	;RETURN TO WRITER AFTER THE OUT UUO
	PUSH	P,T1
FTPOUT:	MOVE	IOREG,OUTSCB
	XCT	0,OBUFOP(IOREG)
	PJRST	WAIT
	XCT	STATZ(IOREG)	;TEST ERROR BITS
	JRST	OUTTST		;SOME SET
	MOVE	T1,UPTIM
	GETTAB	T1,		;GET UPTIME
	  JRST	ERR
	ADD	T1,TOUT		;ADD TIMOUT PERIOD
	MOVEM	T1,FINISH	;START TIMEOUT TIMER
FTPWT2:	MOVE	IOREG,OUTSCB
	MOVE	T1,HIBARG
	HIBER	T1,		;HIBERNATE TILL I/O OR TIME
	  JFCL
	XCT	OBUFOP(IOREG)	;OUTPUT
	PJRST	WAIT		;DONE
	XCT	STATZ(IOREG)
	JRST	OUTTST
	MOVE	T1,UPTIM
	GETTAB	T1,		;GET NEW TIME
	  JRST ERR
	CAMGE	T1,FINISH	;HAVE WE TIMED OUT?
	JRST	FTPWT2		;NOT YET, TRY AGAIN
FTPWT3:	SETZ	AC,
	MOVE	T1,(P)	;LOCATE STACK BACK TO CALLING ROUTINE
	CAIN	T1,FTPWT	;WAS IT FTOM FTPWT
	POP	P,T1		;YES, POP IT
	ERROR	^D14,0,AC,IMPSTR<Transport output timeout>
OUTTST:	MOVE	T1,(P)	;LOCATE STACK BACK TO CALLING ROUTINE
	CAIN	T1,FTPWT	;WAS IT FTOM FTPWT
	POP	P,T1		;YES, POP IT
	JRST	$OUTTST

WAIT:		;HERE WHEN OUT UUO HAS BEEN DONE BUT WE WAIT IN ORDER TO BE SURE
	MOVE	T1,[CALLI 10]	;START CONSTRUCTING THE WAIT CALLI
	LDB	T2,[POINT 4,OBUFOP(IOREG),12];GET THE CHANNEL NUMBER
	DPB	T2,[POINT 4,T1,12]	;MAKE WAIT CHAN, COMMAND
	XCT	T1			;DO IT
REPEAT 0,<
	SKIPN	OBUFFS		;DO WE WANT TO TYPE OUT BUFFERS?
	POPJ	P,			;NO, FINISHED
	PUSH	P,BUFADR(IOREG)
	PUSHJ	P,PRRING##
>;END REPEAT
	AOS	PSEGS		;ADD ONE TO THE NUMBER OF SEGMENTS OUTPUT
	POPJ	P,


	RELOC 0

IBUFFS:	Z	;FLAG FOR TYPEING INPUT BUFFERS
OBUFFS:	Z	;FLAG FOR TYPEING OUTPUT BUFFERS
FINISH:	Z
UPTIM:	%NSUPT

	END
