!PARAM.IMP
!   COPYRIGHT K.FARVIS ERCC.
!Contains the code to read, write and validate the parameters for the level 0
!protocol.

%EXTERNALSTRING(20)%SPEC XOURNODE
%EXTERNALSTRING(255)%SPEC XOTHER NODE;   !THE OTHER NODE FROM US
%EXTERNALINTEGERSPEC LOGLEVEL
%EXTERNALINTEGERSPEC SENT, SENT ARG;  !GLOBAL LEVEL 1 SENT CHARS
%CONSTINTEGER MAX DATA RECORD=1024;  !ALSO DEFINED IN FTP12 AND FTPSPL
%CONSTINTEGER TRUE=-1, FALSE=0;   !LOGIC SETTINGS
%CONSTINTEGER LOG=3

%EXTERNALRECORD(FILESPEC)%FNSPEC STRTOFS(%STRING(255) SPEC)
%EXTERNALPREDICATESPEC ISFILE(%STRING(255) FIL)
%EXTERNALSTRING(255)%FNSPEC FSTOSTR(%RECORD(FILESPEC)%NAME FS)
%EXTERNALROUTINESPEC LOGIT(%STRING(255) STR)
%EXTERNALSTRING(12)%FNSPEC INTTOSTR(%INTEGER N)
%EXTERNALSTRING(9)%FNSPEC HEXTOSTR(%INTEGER N)
%EXTERNALROUTINESPEC WRITEHEX(%INTEGER N,M)
%EXTERNALROUTINESPEC REPRT(%STRING(255) STR)

%EXTERNALROUTINESPEC GET0(%INTEGERNAME N)
%EXTERNALROUTINESPEC PUT0(%INTEGER N)
%EXTERNALPREDICATESPEC ISNODE(%STRING(1)%NAME NAME,TYPE %INTEGERNAME STATUS)
%EXTERNALPREDICATESPEC LEGAL ACCESS(%STRING(1)%NAME FILENAME, %INTEGER MODE, %STRING(20) ACCOUNT,USER,UPASS)
%EXTERNALROUTINESPEC SETTIM(%INTEGER SECS)
%EXTERNALROUTINESPEC UPPER CASE(%STRING(1)%NAME STR)
%EXTERNALINTEGERFNSPEC UNIQUE(%INTEGER N)

%RECORDFORMAT PARAMETER RECORD(%BYTEINTEGER IN,OUT,OK,MONITOR,VTYPE,TYPE,OPERATOR, %INTEGER VALUE)
%OWNRECORD(PARAMETER RECORD) PARAMETER;   !CONTAINS THE CURRENT PARAMETER
%OWNINTEGER THIS PARAMETER;   !THE NUMBER OF THE CURRENT PARAMETER
%EXTERNALINTEGER ARPA MAIL
%EXTERNALINTEGER BINARY FILE

%CONSTINTEGER MAX PARAM=16_80;   !HIGHEST PARAMETER NUMBER
%CONSTINTEGER MAX PARAMS=37;     !MAXIMUM NUMBER OF PARAMETERS IMPLEMENTED
%CONSTINTEGER MAX STRINGS=15;   !MAXIMUM NUMBER OF STRING VALUES FOR PARAMETERS
%OWNRECORD(PARAMETER RECORD)%ARRAY PARAMETERS(1:MAX PARAMS);  !LIST OF THE AVAILABLE PARAMETERS
%OWNSTRING(96) THIS STRING
%OWNRECORD (FILESPEC) FS
%EXTERNALSTRING(6)%SPEC QDEV
%OWNINTEGERARRAY STRING VALUES(1:MAX STRINGS);  !CONTAINS STRING ADDRESSES
!THIS ARRAY WILL MAP THE FOLLOWING STRING PARAMETERS
%EXTERNALINTEGERNAME XCODE
%EXTERNALINTEGERNAME XMODE
%EXTERNALINTEGER YMODE
%EXTERNALINTEGERNAME XFORMAT
%EXTERNALINTEGERNAME XRSIZE
%EXTERNALINTEGERNAME XTSIZE
%EXTERNALINTEGERNAME XMAPPING
%EXTERNALINTEGERNAME XTID
%EXTERNALINTEGERNAME XTIMEOUT
%EXTERNALINTEGERNAME XFACILITIES
%EXTERNALINTEGERNAME XSTATE
%EXTERNALINTEGERNAME XFSIZE
%EXTERNALSTRING(96) XFILENAME
%EXTERNALSTRING(20) XUSERNAME
%EXTERNALSTRING(20) XUSERPASS
%EXTERNALSTRING(20) XFILEPASS
%EXTERNALSTRING(20) XKINSHIP
%EXTERNALSTRING(20) XACCOUNT
%EXTERNALSTRING(20) XACCPASS
%EXTERNALSTRING(20) XOUTDEV
%EXTERNALSTRING(80) XOPMESS
%EXTERNALSTRING(80) XMONMESS
%EXTERNALSTRING(80) XSPECIAL
%EXTERNALSTRING(25) XPRIV TCODE
%EXTERNALINTEGER FTP81

!THE ABOVE TWO ARRAYS HOLD THE PARAMETER RECORDS AND THE STRING VALUES
!OF THESE RECORDS.  THEY ARE ACCESSED INDIRECTLY THROUGH
!THE FOLLOWING TWO ARRAYS WHICH CONTAIN INDEXES INTO THEM.
!FOR EXAMPLE THE FILE-PASSWORD RECORD IS NUMBER 16_45 WHICH GIVES INDEX
!NUMBER 17 THEREFOR THE RECORD IS PARAMETER(17) AND ITS VALUE, BECAUSE
!IT IS A STRING IS INDEXED ALSO AND IS 4, THAT IS IS FOUND IN 
!STRING VALUES(4).

!  0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F
%CONSTBYTEINTEGERARRAY PARNUM(0:MAX PARAM)=  %C
   1,  2,  3,  4,  5,  6,  7, 26,  8, 27,  9, 10,  0, 11, 12, 13,
  0(16),
  28, 29, 30, 31, 32, 33, 34, 35,  0, 36,  0(6),
  0(16),
  14,  0, 15,  0, 16, 17, 18,  0,  0,  0, 19, 20,  0,  0,  0,  0,
  21,  37, 0(14),
  22,  0(15),
  23, 24,  0(14),
  25

%CONSTBYTEINTEGERARRAY STRNUM(0:MAX PARAM)=  %C
  0,  0,  0,  0,  0,  0,  0,  0,  0, 12,  0(6),
  0(16),
  0,  0,  0, 13,  0,  0,  0,  0,  0, 14,  0(6),
  0(16),
  1,  0,  2,  0,  3,  4,  5,  0,  0,  0,  6,  7,  0,  0,  0,  0,
  8, 15,  0(14),
  0(16),
  9, 10,  0(14),
  11

!PARAMETER VALUES
%CONSTINTEGER NONE=0, NONE AVAIL=1, NUMBER=2, ASTRING=3;  !VALUE TYPE
%CONSTINTEGER MODIFY=1, SELECT=0;  !PARAMETER TYPE
%CONSTINTEGER EQ=2, LE=3, NE=5, GE=6, ANY=7;  !OPERATORS
%CONSTSTRING(3)%ARRAY OP STR(0:7)= "=0 ", "=1 ", "EQ ", "LE ", "=4 ", "NE ", "GE ", "ANY"

!PARAMETER NUMBERS
%CONSTINTEGER P ID=0,
              MODE=1,
              CODE=2,
              FORMAT=3,
              MAPPING=4,
              RSIZE=5,
              TSIZE=6,
              DATA EST=7,
              T ID=8,
              PRIV TCODE=9,
              ACK WINDOW=16_0A,
              I REST=16_0B,
              MIN TOUT=16_0D,
              FACILITIES=16_0E,
              STATE=16_0F,
              DATA TYPE=16_20,
              DELIMITER=16_21,
              TEXT STOR=16_22,
              HORIZ TABS=16_23,
              BIN SIZE=16_24,
              MAX SREC=16_25,
              PAGE WID=16_26,
              PAGE LEN=16_27,
              PRIV SCODE=16_29,
              FILENAME=16_40,
              USERNAME=16_42,
              USER PASS=16_44,
              FILE PASS=16_45,
              KINSHIP=16_46,
              ACCOUNT=16_4A,
              ACC PASS=16_4B,
              OUTDEV=16_50
%CONSTINTEGER DEV TYPE=16_51,
              F SIZE=16_60,
              OPMESS=16_70,
              MON MESS=16_71,
              SPECIAL=16_80

%CONSTSTRING(10)%ARRAY PARAM STR(1:MAX PARAMS)=
              "PROTCL ID ",
              "MODE      ",
              "TEXT CODE ",
              "FORMATTING",
              "BIN FORMAT",
              "MAX TRSIZE",
              "TRNS LIMIT",
              "TRANSFR ID",
              "ACK WINDOW",
              "INIT RSTRT",
              "MIN TIMOUT",
              "FACILITIES",
              "STATE OF T",
              "FILENAME  ",
              "USERNAME  ",
              "USER PASS ",
              "FILE PASS ",
              "KINSHIP   ",
              "ACCOUNT   ",
              "ACC PASS  ",
              "OUTDEV TYP",
              "F SIZE    ",
              "ACTN MESS ",
              "INFOR MESS",
              "SPECIAL OP",
              "DATA EST  ",
              "PRIV TCODE",
              "DATA TYPE ",
              "DELIMITER ",
              "TEXT STORE",
              "HORIZ TABS",
              "BIN WDSIZE",
              "MAX SRECRD",
              "PAGE WIDTH",
              "PAGE LEN  ",
              "PRIV SCODE",
              "DEV TYPE Q"
!THESE ROUTINES ARE USED BY BOTH PROCESS P AND Q


%EXTERNALROUTINE INIT PARAMS
!===========================
!SET UP POINTER VARIABLES
   XCODE==PARAMETERS(PARNUM(CODE))_VALUE
   XMODE==PARAMETERS(PARNUM(MODE))_VALUE
   XFORMAT==PARAMETERS(PARNUM(FORMAT))_VALUE
   XMAPPING==PARAMETERS(PARNUM(MAPPING))_VALUE
   XRSIZE==PARAMETERS(PARNUM(RSIZE))_VALUE
   XTSIZE==PARAMETERS(PARNUM(TSIZE))_VALUE
   XTID==PARAMETERS(PARNUM(TID))_VALUE
   XTIMEOUT==PARAMETERS(PARNUM(MIN TOUT))_VALUE
   XFACILITIES==PARAMETERS(PARNUM(FACILITIES))_VALUE
   XSTATE==PARAMETERS(PARNUM(STATE))_VALUE
   XFSIZE==PARAMETERS(PARNUM(FSIZE))_VALUE
!SET UP STRING VALUE ARRAY TO POINT TO GLOBAL SYMBOLS
   STRING VALUES(1)=ADDR(XFILENAME)
   STRING VALUES(2)=ADDR(XUSERNAME)
   STRING VALUES(3)=ADDR(XUSERPASS)
   STRING VALUES(4)=ADDR(XFILEPASS)
   STRING VALUES(5)=ADDR(XKINSHIP)
   STRING VALUES(6)=ADDR(XACCOUNT)
   STRING VALUES(7)=ADDR(XACCPASS)
   STRING VALUES(8)=ADDR(XOUTDEV)
   STRING VALUES(9)=ADDR(XOPMESS)
   STRING VALUES(10)=ADDR(XMONMESS)
   STRING VALUES(11)=ADDR(XSPECIAL)
   STRING VALUES(12)=ADDR(XPRIVTCODE)
%END


%EXTERNALROUTINE DEF PARAMS
!===========================
!SET PARAMETER DEFAULTS,THOSE MARKED WITH A STAR ARE VALUES FOR 'TAKE'
!BEING TRUE AND WILL BE RESET LATER IF NEED BE
   %INTEGER N
   STRING(STRING VALUES(N))="" %FOR N=1,1,MAX STRINGS
   %FOR N=0,1,MAX PARAM %CYCLE
      %CONTINUE %IF PARNUM(N)=0;  !NO PARAMETER ASSIGNED TO THIS VALUE
      PARAMETERS(PARNUM(N))=0
      PARAMETERS(PARNUM(N))_VALUE=STRNUM(N);   !SAY WHICH STRING IS EQUIVALENT OR NONE
   %REPEAT
   PARAMETER=0
!FIRST [1F] QUALIFIERS
   PARAMETER_VTYPE=NONE AVAIL
   PARAMETER_TYPE=MODIFY
   PARAMETER_OPERATOR=ANY
   PARAMETERS(PARNUM(T SIZE))=PARAMETER
!NEXT [2A] QUALIFIERS
   PARAMETER_VTYPE=NUMBER
   PARAMETER_OPERATOR=EQ
![2A] <0000>
   PARAMETERS(PARNUM(P ID))=PARAMETER
   PARAMETERS(PARNUM(P ID))_VALUE=0;    !ERCC FTP ID NUMBER
   PARAMETERS(PARNUM(MODE))=PARAMETER
   PARAMETERS(PARNUM(T ID))=PARAMETER
   PARAMETERS(PARNUM(I REST))=PARAMETER
   PARAMETERS(PARNUM(STATE))=PARAMETER
   PARAMETERS(PARNUM(FSIZE))=PARAMETER
! [2A] VALUE <0008>
   PARAMETER_VALUE=8
   PARAMETERS(PARNUM(MAPPING))=PARAMETER
! [2A] <0002>
   PARAMETER_VALUE=2
   PARAMETERS(PARNUM(ACK WINDOW))=PARAMETER
![2A] <00FC>
![2A] <8002>
   PARAMETER_VALUE=16_8002
   PARAMETERS(PARNUM(MODE))=PARAMETER
![AB] QUALIFIERS
![AB] <0000>
   PARAMETER_MONITOR=TRUE
   PARAMETER_OPERATOR=LE
   PARAMETER_VALUE=0
   PARAMETERS(PARNUM(FACILITIES))=PARAMETER
![AB] <1001>
   PARAMETER_VALUE=16_1001
   PARAMETERS(PARNUM(CODE))=PARAMETER
![AF] <0001>
   PARAMETER_VALUE=16_0001
   PARAMETERS(PARNUM(FORMAT))=PARAMETER
   PARAMETERS(PARNUM(FORMAT))_OPERATOR=ANY
![AB] <0258>
   PARAMETER_VALUE=16_0258;   !TEN MINUTES
   PARAMETERS(PARNUM(MIN TOUT))=PARAMETER
![AB] <0400>
![AB] <00FC>
   PARAMETER_VALUE=MAX DATA RECORD
   PARAMETERS(PARNUM(R SIZE))=PARAMETER
![32] QUALIFIERS
![32] <0000>
   PARAMETER_MONITOR=FALSE
   PARAMETER_VTYPE=ASTRING
   PARAMETER_TYPE=SELECT
   PARAMETER_OPERATOR=EQ
   PARAMETER_VALUE=0
   PARAMETERS(PARNUM(FILENAME))=PARAMETER
   PARAMETERS(PARNUM(FILENAME))_VALUE=FILENAME
   PARAMETERS(PARNUM(USERNAME))=PARAMETER
   PARAMETERS(PARNUM(USERNAME))_VALUE=USERNAME
   PARAMETERS(PARNUM(USER PASS))=PARAMETER
   PARAMETERS(PARNUM(USER PASS))_VALUE=USER PASS
   PARAMETERS(PARNUM(FILE PASS))=PARAMETER
   PARAMETERS(PARNUM(FILE PASS))_VALUE=FILE PASS
   PARAMETERS(PARNUM(KINSHIP))=PARAMETER
   PARAMETERS(PARNUM(KINSHIP))_VALUE=KINSHIP
   PARAMETERS(PARNUM(ACCOUNT))=PARAMETER
   PARAMETERS(PARNUM(ACCOUNT))_VALUE=ACCOUNT
   PARAMETERS(PARNUM(ACC PASS))=PARAMETER
   PARAMETERS(PARNUM(ACC PASS))_VALUE=ACC PASS
   PARAMETERS(PARNUM(OUTDEV))=PARAMETER
   PARAMETERS(PARNUM(OUTDEV))_VALUE=OUTDEV
   XOUTDEV="LP"
![3A] QUALIFIERS
   PARAMETER_TYPE=MODIFY
   PARAMETERS(PARNUM(OPMESS))=PARAMETER
   PARAMETERS(PARNUM(OPMESS))_VALUE=OPMESS
   PARAMETERS(PARNUM(MON MESS))=PARAMETER
   PARAMETERS(PARNUM(MON MESS))_VALUE=MON MESS
   PARAMETERS(PARNUM(SPECIAL))=PARAMETER
   PARAMETERS(PARNUM(SPECIAL))_VALUE=SPECIAL
!NOW FTP81 PARAMS
   PARAMETER_VTYPE=NONE
   PARAMETER_TYPE=SELECT
   PARAMETER_OPERATOR=ANY
   PARAMETER_MONITOR=FALSE
   PARAMETERS(PARNUM(DATA EST))=PARAMETER
   PARAMETERS(PARNUM(PRIV TCODE))=PARAMETER
   PARAMETERS(PARNUM(DATA TYPE))=PARAMETER
   PARAMETERS(PARNUM(DELIMITER))=PARAMETER
   PARAMETERS(PARNUM(TEXT STOR))=PARAMETER
   PARAMETERS(PARNUM(HORIZ TABS))=PARAMETER
   PARAMETERS(PARNUM(BIN SIZE))=PARAMETER
   PARAMETERS(PARNUM(MAX SREC))=PARAMETER
   PARAMETERS(PARNUM(PAGE WID))=PARAMETER
   PARAMETERS(PARNUM(PAGE LEN))=PARAMETER
   PARAMETERS(PARNUM(PRIV SCODE))=PARAMETER
   PARAMETERS(PARNUM(DEV TYPE))=PARAMETER
%END
%ROUTINE MONITOR PARAM(%INTEGER PARAM,QUALIFIER,VALUE)
!======================================================
!OUTPUTS THE GIVEN PARAMETER TO THE LOG FILE
   %INTEGER OUT,TYPE,OP
   OUT=OUTSTREAM
   SELECT OUTPUT(LOG)
   SPACES(10)
   %IF PARNUM(PARAM)=0 %THEN WRITEHEX(PARAM,3) %ELSE PRINTSTRING(PARAM STR(PARNUM(PARAM)))
   SPACE
   %IF QUALIFIER>>7#0 %THEN PRINTSTRING("MON-") %ELSE SPACES(4)
   TYPE=QUALIFIER>>4&3; OP=QUALIFIER&7
   PRINTSTRING(OP STR(OP)); PRINTSYMBOL('('); WRITEHEX(QUALIFIER,0); PRINTSYMBOL(')');  SPACE
   %IF TYPE=ASTRING %START
      PRINTSYMBOL('"')
!A SPECIAL CASE FOR A STRING IN THE CURRENT PARAMETER BEING READ
      %IF VALUE=0 %THEN PRINTSTRING(THIS STRING) %ELSE  PRINTSTRING(STRING(STRING VALUES(VALUE)))
      PRINTSYMBOL('"')
   %ELSE %IF TYPE=NUMBER %START
      WRITEHEX(VALUE,2); PRINTSYMBOL('='); WRITE(VALUE,0)
   %ELSEIF TYPE=NONE %START
      PRINTSTRING("ATR. UNKN.")
   %ELSE PRINTSTRING("NONE AVL.")
   NEWLINE
   SELECT OUTPUT(OUT)
%END

%EXTERNALROUTINE PUT0 PARAMS
!===========================
!PUTS ALL PARAMETERS WITH THE 'OUT' ITEM SET TO TRUE, INTO THE OUTPUT BUFFER
   %RECORD(PARAMETER RECORD)%NAME P
   %STRING(255) STR
   %INTEGER N,M,NUM,QUALIFIER
   NUM=0
   %FOR N=1,1,MAX PARAMS %CYCLE
      %IF PARAMETERS(N)_OUT=TRUE %START
         NUM=NUM+1; !COUNT PARAMETERS TO BE OUTPUT
      %FINISH
   %REPEAT
   PUT0(NUM)
   %RETURN %IF NUM=0
   %IF LOGLEVEL>=20 %THEN LOGIT("Outgoing parameters")
   %FOR N=0,1,MAX PARAM %CYCLE
      %CONTINUE %IF PARNUM(N)=0;  !PARAMETER NOT PRESENT
      %IF PARAMETERS(PARNUM(N))_OUT=TRUE %START
         P==PARAMETERS(PARNUM(N))
         PUT0(N);    !PARAMETER NUMBER
         QUALIFIER=(P_MONITOR<<7!P_VTYPE<<4!P_TYPE<<3!P_OPERATOR)&16_FF
         PUT0(QUALIFIER)
         %IF P_VTYPE=ASTRING %START
            STR=STRING(STRING VALUES(STR NUM(N)))
            P_VALUE=STR NUM(N)
            %IF LENGTH(STR)>0 %START
               PUT0(LENGTH(STR))
               PUT0(CHARNO(STR,M)) %FOR M=1,1,LENGTH(STR)
            %ELSE PUT0(0)
         %ELSE %IF P_VTYPE=NUMBER %THEN PUT0(P_VALUE>>8) %AND PUT0(P_VALUE)
         %IF LOGLEVEL>=20 %THEN MONITOR PARAM(N,QUALIFIER,P_VALUE)
      %FINISH
   %REPEAT
   %IF LOGLEVEL>=20 %THEN LOGIT("")
%END


%ROUTINE READ PARAMETER
!======================
!READS A SINGLE PARAMETER FROM THE INPUT BUFFER INTO THE GLOBAL RECORD
!'PARAMETER' AND USES GLOBALS 'THIS PARAMETER' AND 'THIS STRING' ALSO
   %INTEGER QUALIFIER,N,M,S
1: PARAMETER=0
   GET0(THIS PARAMETER)
   GET0(QUALIFIER)
   %IF QUALIFIER>>7 # 0 %THEN PARAMETER_MONITOR=TRUE %ELSE PARAMETER_MONITOR=FALSE
   PARAMETER_VTYPE=QUALIFIER>>4&3
   PARAMETER_TYPE=QUALIFIER>>3&1
   PARAMETER_OPERATOR=QUALIFIER&7
   THIS STRING=""
   %IF PARAMETER_VTYPE=ASTRING %START
      GET0(N);   !STRING LENGTH
      %IF N>0 %START
         %FOR M=1,1,N %CYCLE
            GET0(S); THIS STRING=THIS STRING.TOSTRING(S&8_177)
         %REPEAT
      %FINISH
   %ELSE
      %IF PARAMETER_VTYPE=NUMBER %START
         GET0(PARAMETER_VALUE); GET0(N)
         PARAMETER_VALUE=PARAMETER_VALUE<<8!N
      %ELSE PARAMETER_VALUE=0
   %FINISH
   %IF PARNUM(THIS PARAMETER)=0 %START
      LOGIT("Unknown parameter read and ignored - see next line")
      MONITOR PARAM(THIS PARAMETER,QUALIFIER,PARAMETER_VALUE)
      ->1
   %FINISH
   %IF LOGLEVEL>=20 %THEN MONITOR PARAM(THIS PARAMETER,QUALIFIER,PARAMETER_VALUE)
%END

%EXTERNALROUTINE SKIP PARAMS
!===========================
!THIS ROUTINE THROWS AWAY THE PARAMETERS FOR A LEVEL 0 MESSAGE
%INTEGER N,NUM
   GET0(NUM)
   %RETURN %IF NUM=0
   %IF LOGLEVEL>=20 %THEN LOGIT("with ignored parameters")
   READ PARAMETER %FOR N=1,1,NUM
   %IF LOGLEVEL>=20 %THEN LOGIT("")
%END

!ROUTINES FOR 'P' PROCESS ONLY


%ROUTINE CHECK PARAM
!===================
!CHECKS THE SETTINGS OF THE 'VALUE' ITEM OF THE CURRENT PARAMETER READ
!AND SETS THE 'OK' ITEM TO EITHER TRUE OR FALSE.
   %SWITCH P(0:MAX PARAM)
   %RECORD(PARAMETER RECORD)%NAME PAR
   PAR==PARAMETERS(PARNUM(THIS PARAMETER))
   PAR_IN=TRUE
   %IF PARAMETER_MONITOR=TRUE  %START
      PAR_OK=FALSE
      PAR==PARAMETERS(PARNUM(STATE))
      PAR_VALUE=16_1002; PAR_OUT=TRUE
      %RETURN
   %FINISH
   %IF PAR_MONITOR=TRUE %AND PARAMETER_VALUE=PAR_VALUE %START
      PAR_OK=TRUE
      %RETURN
   %FINISH
   ->P(THIS PARAMETER)
P(P ID):
   PAR_OK=TRUE;  !ACCEPT ANY VALUE
   %RETURN
P(MODE):
   %IF PAR_VALUE#XMODE %THEN PAR_OK=FALSE %ELSE PAR_OK=TRUE
   %RETURN
P(CODE):
   %IF PARAMETER_VALUE=16_1001 %OR PARAMETER_VALUE=2 %OR PARAMETER_VALUE=1 %OR PARAMETER_VALUE=8 %START
      %IF XMODE&16_8000=0 %AND PAR_VALUE#XCODE %START
         PAR_OPERATOR=EQ
         PAR_OK=FALSE
      %ELSE
         PAR_VALUE=PARAMETER_VALUE
         PAR_OK=TRUE
      %FINISH
   %ELSE
      PAR_OK=FALSE
   %FINISH
   %RETURN
P(FORMAT):
   %IF PARAMETER_VALUE&16_CFFC#0 %START
      %IF (PARAMETER_VALUE&16_1000#0 %AND PARAMETER_VALUE&16_10=0) %OR  %C
       (PARAMETER_VALUE&16_2000#0 %AND PARAMETER_VALUE&16_20=0) %THEN PAR_OK=FALSE %ELSE  %C
      PAR_VALUE=PARAMETER_VALUE %AND PAR_OK=TRUE
   %ELSE%IF PARAMETER_VALUE<=3 %START
      PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
   %ELSE PAR_OK=FALSE
   %RETURN
P(MAPPING):
   %IF PARAMETER_VALUE=16_0024 %START
      PAR_VALUE=PARAMETER_VALUE
      PAR_OK=TRUE
   %ELSE PAR_OK=FALSE
   %RETURN
P(RSIZE):
   %IF PARAMETER_VALUE<=MAX DATA RECORD %START
      PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
   %ELSE
      PAR_VALUE=MAX DATA RECORD
      %IF PARAMETER_OPERATOR=LE %OR PARAMETER_OPERATOR=ANY %THEN PAR_OK=TRUE %ELSE PAR_OK=FALSE
   %FINISH
   %RETURN
P(TSIZE):
   PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
   %RETURN
P(T ID):
   PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
   %RETURN
P(ACK WINDOW):
P(I REST):
   PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
   %RETURN
P(MIN TOUT):
   PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
   SETTIM(XTIMEOUT)
   %RETURN
P(FACILITIES):
   %IF PARAMETER_VALUE<=1 %START
      PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
   %ELSEIF PARAMETER_OPERATOR=LE %OR PARAMETER_OPERATOR=ANY %START
      PAR_VALUE=1; PAR_OK=TRUE
   %ELSE PAR_VALUE=1 %AND PAR_OK=FALSE
   %RETURN
P(STATE):
   %IF PARAMETER_VALUE#0 %START
      PAR_VALUE=PARAMETER_VALUE; PAR_OK=FALSE
   %ELSE PAR_OK=TRUE
   %RETURN
P(FILENAME):
   PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE;   !MAIL RETURNS FILENAME
   %RETURN
P(USERNAME):
P(USERPASS):
P(FILEPASS):
P(KINSHIP):
P(ACCOUNT):
P(ACCPASS):
   PAR_OK=FALSE
   %RETURN
P(OUTDEV):
   XOUTDEV=THIS STRING; PAR_OK=TRUE
   %RETURN
P(FSIZE):
   PAR_VALUE=PARAMETER_VALUE
   PAR_OK=TRUE
   %RETURN
P(OPMESS):
   XOPMESS=THIS STRING
   PAR_OK=TRUE
   REPRT(XOPMESS)
   %IF LOGLEVEL>=20 %THEN LOGIT("")
   LOGIT(XOPMESS)
   %RETURN
P(MONMESS):
   XMONMESS=THIS STRING; PAR_OK=TRUE
   REPRT(XMONMESS)
   %IF LOGLEVEL>=20 %THEN LOGIT("")
   LOGIT(XMONMESS)
   %RETURN
P(SPECIAL):
   XSPECIAL=THIS STRING
   PAR_OK=FALSE
   %RETURN
P(PRIV TCODE):
   XPRIVTCODE=THIS STRING
   %IF THIS STRING="36BIT" %THEN PAR_OK=TRUE %ELSE PAR_OK=FALSE
   %RETURN
P(*):PAR_MONITOR=FALSE; PAR_VTYPE=NONE; PAR_OPERATOR=ANY; PAR_OK=TRUE
%END

%EXTERNALROUTINE SET P PARAMS
!============================
!SET REST OF PARAMETERS DEPENDANT ON WHETHER 'TAKE' OR 'GIVE'
   %STRING(12) TYPE
   %INTEGER N
   PARAMETER=0
   %IF BINARY FILE=TRUE %AND XPRIV TCODE="" %START;    !BINARY MODE - BUT NOT SPECIAL
      XCODE=2
      PARAMETERS(PARNUM(MAPPING))_VALUE=16_0024
      PARAMETERS(PARNUM(MAPPING))_OUT=TRUE
   %FINISH
   %IF XMODE&16_8000=0 %START;      !ON A TAKE
      PARAMETERS(PARNUM(TSIZE))_OUT=TRUE %IF XTSIZE#0
      PARAMETERS(PARNUM(FSIZE))_OUT=TRUE %IF XFSIZE#0 %AND (ISNODE(XOTHERNODE,TYPE,N) %AND TYPE#"IBM")
   %FINISH
!*   PARAMETERS(PARNUM(P ID))_OUT=TRUE
   PARAMETERS(PARNUM(MODE))_OUT=TRUE
   PARAMETERS(PARNUM(CODE))_OUT=TRUE
   PARAMETERS(PARNUM(FORMAT))_OUT=TRUE %IF XPRIV TCODE="" %AND BINARY FILE=FALSE;  !IF NOT SPECIAL
   PARAMETERS(PARNUM(RSIZE))_OUT=TRUE
   XTIMEOUT=60;   !ONE MINUTE
   PARAMETERS(PARNUM(MIN TOUT))_OUT=TRUE
   PARAMETERS(PARNUM(FACILITIES))_VALUE=1;   !COMPRESSION
   PARAMETERS(PARNUM(FACILITIES))_OUT=TRUE
   PARAMETERS(PARNUM(FILENAME))_OUT=TRUE %IF XFILENAME#""
   PARAMETERS(PARNUM(FILEPASS))_OUT=TRUE %IF XFILEPASS#""
   PARAMETERS(PARNUM(ACCOUNT))_OUT=TRUE %IF XACCOUNT#""
   PARAMETERS(PARNUM(ACCPASS))_OUT=TRUE %IF XACCPASS#""
   PARAMETERS(PARNUM(USERNAME))_OUT=TRUE %IF XUSERNAME#""
   PARAMETERS(PARNUM(USERPASS))_OUT=TRUE %IF XUSERPASS#""
   %IF XPRIV TCODE#"" %START
      PARAMETERS(PARNUM(PRIV TCODE))_VTYPE=ASTRING
      PARAMETERS(PARNUM(PRIV TCODE))_TYPE=SELECT
      PARAMETERS(PARNUM(PRIV TCODE))_OPERATOR=EQ
      PARAMETERS(PARNUM(PRIV TCODE))_OUT=TRUE
   %FINISH
   PARAMETERS(PARNUM(OUTDEV))_OUT=TRUE %IF XMODE&16_4000#0;   !SPOOLED OUTPUT
%END

%EXTERNALPREDICATE P PARAM OK
!============================
!TRUE IF ALL RECEIVED PARAMETERS ARE OK ON AN 'RPOS' FROM Q
   %RECORD(PARAMETER RECORD)%NAME P
   %INTEGER N,RESULT,PARAM COUNT
   GET0(PARAM COUNT)
   %TRUE %IF PARAM COUNT=0
   %IF LOGLEVEL>=20 %THEN LOGIT("with incoming parameters")
   %FOR N=1,1,PARAM COUNT %CYCLE
      READ PARAMETER
      CHECK PARAM
   %REPEAT
!NOW CHECK THEY ARE ALL OK
   RESULT=TRUE
   %FOR N=1,1,MAX PARAMS %CYCLE
      P==PARAMETERS(N)
      %IF (P_IN %AND %NOT P_OK) %OR ( (P_OUT %AND P_MONITOR) %AND %NOT P_IN) %START
         RESULT=FALSE
         P_OUT=TRUE
      %ELSE P_OUT=FALSE %AND P_MONITOR=FALSE
   %REPEAT
   %IF XCODE=2 %AND XMAPPING#16_0024 %START
      PARAMETERS(PARNUM(STATE))_VALUE=16_1002 %IF PARAMETERS(PARNUM(STATE))_VALUE=0
      PARAMETERS(PARNUM(STATE))_OUT=TRUE
      PARAMETERS(PARNUM(CODE))_OUT=TRUE
      PARAMETERS(PARNUM(MAPPING))_OUT=TRUE
      RESULT=FALSE
   %FINISH
   %IF XCODE#8 %THEN XPRIV TCODE="";  !CLEAR PRIVATETE CODE IF NOT RELEVANT
   %IF LOGLEVEL>=20 %THEN LOGIT("")
   %TRUE %IF RESULT=TRUE
   %FALSE
%END


!NOW ROUTINES FOR 'Q' PROCESS ONLY


%EXTERNALPREDICATE GET Q PARAMS
!===============================
!GETS THE PARAMETERS FOR Q ON AN 'SFT' FROM P AND SETS 'OK' ITEM
!ACCORDING TO THE 'VALUE' ITEM RECEIVED. SUBSEQUENTLY IT SETS THE
!'OUT' ITEM IF MONITORING WAS REQUESTED OR A PARAMETER WAS NOT 'OK'
   %SWITCH P(0:MAX PARAM)
   %RECORD(PARAMETER RECORD)%NAME PAR
   %INTEGER N,PARAMETER COUNT,TAKE,OK,SAVCODE
   %STRING(20) S,T
   %STRING(4) EXT
   GET0(PARAMETER COUNT)
   %IF PARAMETER COUNT=0 %THEN %FALSE
   %IF LOGLEVEL>=20 %THEN LOGIT("Incoming parameters")
   %FOR N=1,1,PARAMETER COUNT %CYCLE
      READ PARAMETER
      PAR==PARAMETERS(PARNUM(THIS PARAMETER))
      PAR_IN=TRUE; PAR_MONITOR=PARAMETER_MONITOR; PAR_VTYPE=PARAMETER_VTYPE
      PAR_TYPE=PARAMETER_TYPE; PAR_OPERATOR=PARAMETER_OPERATOR
      %IF PAR_VTYPE=NONE AVAIL %START
         PAR_OK=TRUE
         %CONTINUE
      %FINISH
      ->P(THIS PARAMETER)
P(P ID):
      %IF PARAMETER_VALUE>16_FF %THEN FTP81=TRUE %ELSE FTP81=FALSE
      PAR_OK=TRUE
      %CONTINUE
P(MODE):
      %IF PARAMETER_VALUE&16_8000=0 %THEN TAKE=TRUE %ELSE TAKE=FALSE
      PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE;  !LET 'LEGAL ACCESS' ROUTINE CHECK VALIDITY LATER
      !HERE TO ADD REST OF DEFAULT PARAMETERS ON A TAKE=FALSE
      %IF PAR_OK=TRUE %AND TAKE=FALSE %START
         PARAMETER=0
! [2B] <0400>
         PARAMETER_VTYPE=NUMBER
!*         PARAMETER_TYPE=MODIFY
         PARAMETER_MONITOR=FALSE
         PARAMETER_OPERATOR=LE
         PARAMETER_VALUE=16_0400
         PARAMETERS(PARNUM(T SIZE))=PARAMETER %IF PARAMETERS(PARNUM(T SIZE))_IN=FALSE
![2B] <00FC>
         PARAMETER_VALUE=MAX DATA RECORD
         PARAMETERS(PARNUM(R SIZE))=PARAMETER %IF PARAMETERS(PARNUM(R SIZE))_IN=FALSE
      %FINISH
      %CONTINUE
P(CODE):
      %IF PARAMETER_VALUE=16_1001 %OR PARAMETER_VALUE=2 %OR PARAMETER_VALUE=1 %OR PARAMETER_VALUE=8 %START
         PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
      %ELSEIF (PARAMETER_OPERATOR=LE %AND PARAMETER_VALUE>=1) %START
         PAR_VALUE=(PARAMETER_VALUE&16_1000)!1; PAR_OK=TRUE
      %ELSE PAR_OK=FALSE
      PAR_OUT=TRUE
      %CONTINUE
P(FORMAT):
      %IF PARAMETER_VALUE&16_CFFC=0 %START
         %IF (PARAMETER_VALUE&16_1000#0 %AND PARAMETER_VALUE&16_10=0) %OR  %C
          (PARAMETER_VALUE&16_2000#0 %AND PARAMETER_VALUE&16_20=0) %START
            PAR_OK=FALSE
         %ELSE
!*            %IF PARAMETER_TYPE=MODIFY %AND (PARAMETER_OPERATOR=LE %OR PARAMETER_OPERATOR=ANY) %START
            %IF PARAMETER_OPERATOR=LE %OR PARAMETER_OPERATOR=ANY %START
               %IF PARAMETER_VALUE&2#0 %THEN PAR_VALUE=2 %ELSE PAR_VALUE=1;   !USE FORTRAN FORMATTING IF POSSIBLE
               %IF PAR_VALUE=2 %AND FTP81=FALSE %THEN PAR_VALUE=3;  !BACK COMPATIBILITY
             %ELSE
               PAR_VALUE=PARAMETER_VALUE
            %FINISH
            PAR_OK=TRUE
         %FINISH
!*      %ELSEIF PARAMETER_TYPE=MODIFY %AND (PARAMETER_OPERATOR=LE %OR PARAMETER_OPERATOR=ANY) %START
      %ELSEIF PARAMETER_OPERATOR=LE %OR PARAMETER_OPERATOR=ANY %START
         %IF PARAMETER_VALUE&2#0 %THEN PAR_VALUE=2 %ELSE PAR_VALUE=1;   !USE FORTRAN FORMATTING IF POSSIBLE
         %IF PAR_VALUE=2 %AND FTP81=FALSE %THEN PAR_VALUE=3;  !BACK COMPATIBILITY
         PAR_OK=TRUE
      %ELSE%IF PARAMETER_OPERATOR=LE %OR PARAMETER_OPERATOR=ANY %START
         %IF PARAMETER_VALUE>2 %THEN PAR_VALUE=2 %ELSE PAR_VALUE=PARAMETER_VALUE
         %IF PAR_VALUE=2 %AND FTP81=FALSE %THEN PAR_VALUE=3;  !BACK COMPATIBILITY
         PAR_OK=TRUE
      %ELSEIF PARAMETER_OPERATOR=EQ %AND PARAMETER_VALUE=16_80 %AND FTP81=TRUE %START
         PAR_VALUE=PARAMETER_VALUE
         PAR_OK=TRUE
      %ELSE PAR_OK=FALSE
      PAR_OUT=TRUE
      %CONTINUE
P(MAPPING):
      %IF PARAMETER_VALUE=16_0024 %OR PARAMETER_VALUE=16_4001 %START
         PAR_VALUE=PARAMETER_VALUE
         PAR_OK=TRUE
      %ELSE
         PAR_OK=FALSE
      %FINISH
      %CONTINUE
P(RSIZE):
      %IF PARAMETER_VALUE<=MAX DATA RECORD %START
         PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
      %ELSE
         PAR_VALUE=MAX DATA RECORD
         %IF PARAMETER_OPERATOR=LE %OR PARAMETER_OPERATOR=ANY %THEN PAR_OK=TRUE %ELSE PAR_OK=FALSE
      %FINISH
      PAR_OUT=TRUE
      %CONTINUE
P(TSIZE):
      PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
      %CONTINUE
P(T ID):
      PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
      %CONTINUE
P(ACK WINDOW):
P(I REST):
      PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE;   !JUST IGNORE PARAMETER
      %CONTINUE
P(MIN TOUT):
      PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
      SETTIM(XTIMEOUT)
      %CONTINUE
P(FACILITIES):
      %IF PARAMETER_VALUE<=1 %AND (PARAMETER_OPERATOR=EQ)  %START
         PAR_VALUE=PARAMETER_VALUE; PAR_OK=TRUE
      %ELSEIF PARAMETER_OPERATOR=LE %OR PARAMETER_OPERATOR=ANY %START
         %IF PARAMETER_VALUE&1=1 %THEN PAR_VALUE=1 %ELSE PAR_VALUE=0
         PAR_OK=TRUE
      %ELSE PAR_VALUE=1 %AND PAR_OK=FALSE
      PAR_OUT=TRUE
      %CONTINUE
P(STATE):
      %IF PARAMETER_VALUE#0 %START
         PAR_VALUE=PARAMETER_VALUE; PAR_OK=FALSE
      %ELSE PAR_OK=TRUE
      %CONTINUE
P(FILENAME):
      XFILENAME=THIS STRING
      PAR_OK=TRUE
      %CONTINUE
P(ACCOUNT):
      XACCOUNT=THIS STRING
      PAR_OK=TRUE
      %CONTINUE
P(USERNAME):
      XUSERNAME=THIS STRING
      PAR_OK=TRUE
      %CONTINUE
P(USERPASS):
      XUSERPASS=THIS STRING
      PAR_OK=TRUE
      %CONTINUE
P(ACCPASS):
      XACCPASS=THIS STRING
      PAR_OK=TRUE
      %CONTINUE
P(FILEPASS):
      XFILEPASS=THIS STRING
      PAR_OK=TRUE
      %CONTINUE
P(KINSHIP):
      XKINSHIP=THIS STRING
      PAR_OK=TRUE
      %CONTINUE
P(OUTDEV):
      XOUTDEV=THIS STRING
      PAR_OK=TRUE
      %CONTINUE
P(FSIZE):
      PAR_VALUE=PARAMETER_VALUE
      PAR_OK=TRUE
      %CONTINUE
P(OPMESS):
      XOPMESS=THIS STRING
      PAR_OK=TRUE
      XOPMESS=XOTHER NODE." sent operator message ".XOPMESS
      REPRT(XOPMESS)
      %IF LOGLEVEL>=20 %THEN LOGIT("")
      LOGIT(XOPMESS)
      %CONTINUE
P(MONMESS):
      XMONMESS=THIS STRING
      PAR_OK=TRUE
      XMONMESS=XOTHER NODE." sent monitor message ".XMONMESS
      REPRT(XMONMESS)
      %IF LOGLEVEL>=20 %THEN LOGIT("")
      LOGIT(XMONMESS)
      %CONTINUE
P(SPECIAL):
      XSPECIAL=THIS STRING
      PAR_OK=FALSE
      %CONTINUE
P(PRIV TCODE):
      UPPER CASE(THIS STRING)
      XPRIV TCODE=THIS STRING
      PAR_OK=TRUE
      %CONTINUE
P(*): PAR_MONITOR=TRUE; PAR_OPERATOR=ANY; PAR_VTYPE=NONE
      PAR_OK=TRUE
      %CONTINUE
!*      PAR==PARAMETERS(PARNUM(STATE))
!*      XMONMESS="Invalid parameter"
!*      PAR_VALUE=16_1001; PAR_OK=FALSE
   %REPEAT
   %IF XCODE&9#0 %THEN PARAMETERS(PARNUM(MAPPING))_OK=TRUE;   !DO NOT FAULT BIN PARAM
!NOW MARK FOR OUTPUT, THOSE WHICH ARE WRONG OR NEED MONITORED
   OK=TRUE
   %FOR N=1,1,MAX PARAMS %CYCLE
      PAR==PARAMETERS(N)
      %IF (PAR_IN %AND (PAR_MONITOR %OR %NOT PAR_OK)) %OR PAR_OUT=TRUE %START
         PAR_OUT=TRUE; PAR_MONITOR=FALSE; PAR_OPERATOR=EQ %UNLESS PAR_VTYPE<NUMBER
         OK=FALSE %IF PAR_OK=FALSE
      %FINISH
   %REPEAT
   %IF OK=FALSE %START
      XMONMESS=""; ->FAIL
   %FINISH
   %IF XMODE=16_4001 %START;   !OUTPUT TO A DEVICE
      XOUTDEV="LP" %IF XOUTDEV=""
      XUSERNAME="JOB OUTPUT" %IF XUSERNAME=""
      XACCOUNT=XUSERNAME %IF XACCOUNT=""
!      EXT=".IBM"
!      %IF XOUTDEV="LP" %AND XUSERNAME="DSPL" %START;  !**MAKE DL OUTPUT SAME AS RAL OUTPUT
!         XOUTDEV="D60"; EXT=".TSO"
!      %FINISH
!      %IF XOUTDEV="D60" %START;  !**SPECIAL FOR IBM OUTPUT
!         XACCOUNT="RJE OUTPUT"
!         %CYCLE
!            XFILENAME="D60:".INTTOSTR(UNIQUE(6)).EXT
!         %REPEAT %UNTIL %NOT ISFILE(XFILENAME)
!      %FINISH
      %IF XFILENAME#"" %START;  !GUARD AGAINST SILLY FILENAMES
         FS=STRTOFS(XFILENAME); XFILENAME=FSTOSTR(FS)
      %FINISH
      %IF XFILENAME="" %OR FS_FILE="" %START
         %CYCLE
            XFILENAME=QDEV.":".INTTOSTR(UNIQUE(6))
            %IF LENGTH(XOUTDEV)>0 %START
               XFILENAME=XFILENAME."."
               %IF LENGTH(XOUTDEV)>3 %START
                  XFILENAME=XFILENAME.SUBSTRING(XOUTDEV,1,3)
               %ELSE
                  XFILENAME=XFILENAME.XOUTDEV   
               %FINISH
            %FINISH
            XFILENAME=XFILENAME."[3,3]"
         %REPEAT %UNTIL %NOT ISFILE(XFILENAME)
      %FINISH
   %FINISH
   %IF ARPA MAIL=TRUE %OR  %C
     (XMODE&1=1 %AND XFILENAME="" %AND PARAMETERS(PARNUM(FILENAME))_VTYPE=NONE AVAIL)  %OR  %C
     XFILENAME="...MAIL"  %START
      ARPA MAIL=TRUE;    !ARPA TYPE MAIL ENTRY
   %ELSE ARPA MAIL=FALSE
   %IF ARPA MAIL=TRUE %OR XOUTDEV="POST" %START;    !**SPECIAL FOR NETWORK MAIL**
!*      %IF XOURNODE="UMIST" %START
!*         XMONMESS="NETWORK MAIL NOT SUPPORTED ON ".XOURNODE
!*         XSTATE=16_1001
!*         ->FAIL
!*      %FINISH
      %IF XUSERNAME->S.(":").T %AND T="" %START
         XFILENAME=XUSERNAME
      %ELSE
         XFILENAME=QDEV.":".INTTOSTR(UNIQUE(6)).".MAI[3,5]" %UNTIL %NOT ISFILE(XFILENAME)
         PARAMETERS(PARNUM(FILENAME))_OUT=TRUE;   !TELL P WHAT I AM USING
      %FINISH
      XACCOUNT="MAIL"
      XUSERNAME=XACCOUNT %IF XUSERNAME=""
   %%ELSE%IF XUSERNAME="" %OR XFILENAME="" %START
      XMONMESS="must supply FILENAME and USERNAME parameters"
      XSTATE=16_1001; ->FAIL
   %FINISH
   XACCOUNT=XUSERNAME %IF XACCOUNT=""
!ENSURE ALL CHANGED STRING PARAMS HAVE THE TYPE SET PROPERLY
   %IF XFILENAME#"" %THEN PARAMETERS(PARNUM(FILENAME))_VTYPE=ASTRING
   %IF XUSERNAME#"" %THEN PARAMETERS(PARNUM(USERNAME))_VTYPE=ASTRING
   %IF XACCOUNT#"" %THEN PARAMETERS(PARNUM(ACCOUNT))_VTYPE=ASTRING
   %IF XOUTDEV#"" %THEN PARAMETERS(PARNUM(OUTDEV))_VTYPE=ASTRING
   SAVCODE=XCODE;   !SAVE CURRENT ACCESS MODE FOR LATER
   %UNLESS LEGAL ACCESS(XFILENAME,XMODE,XACCOUNT,XUSERNAME,XUSERPASS) %START
      PAR==PARAMETERS(PARNUM(STATE)); PAR_OUT=TRUE; PAR_OK=FALSE
      %IF PAR_VALUE=0 %THEN PAR_VALUE=16_1012
      OK=FALSE
   %FINISH
   %IF XCODE#SAVCODE %START
      PAR==PARAMETERS(PARNUM(CODE))
!*      PAR_TYPE=MODIFY
      PAR_OUT=TRUE; PAR_OK=FALSE
      OK=FALSE
   %FINISH
   %IF XFSIZE#0 %AND TAKE=FALSE %START
      PAR==PARAMETERS(PARNUM(FSIZE))
      PAR_OPERATOR=EQ
      PAR_OK=TRUE; PAR_OUT=TRUE
   %FINISH
   %IF XCODE=8 %START
      %UNLESS XPRIV TCODE="36BIT" %START
         PARAMETERS(PARNUM(PRIV TCODE))_OK=FALSE
         XMONMESS="The supplied private code is not supported on DEC-10"
         OK=FALSE
      %FINISH
   %ELSE XPRIV TCODE=""
   %IF XCODE&3=2 %START
      BINARY FILE=TRUE
      %IF 16_4001#XMAPPING#16_0024 %START;  !GET MAPPING RIGHT
         PARAMETERS(PARNUM(CODE))_OK=FALSE
         XMONMESS="Only 36 bit binary code supported on DEC-10"
         PAR==PARAMETERS(PARNUM(MAPPING))
         PAR_VALUE=16_0024
!*         PAR_TYPE=MODIFY
         PAR_OUT=TRUE; PAR_OK=FALSE
         OK=FALSE
      %FINISH
   %ELSE BINARY FILE=FALSE
   PAR==PARAMETERS(PARNUM(RSIZE))
   %IF PAR_IN=FALSE %START;  !TELL P WHAT WE ARE USING
      PAR_OK=TRUE; PAR_OUT=TRUE; PAR_OPERATOR=EQ; PAR_MONITOR=FALSE
   %FINISH
   %TRUE %IF OK=TRUE
FAIL:
   %FOR N=1,1,MAX PARAMS %CYCLE
      PAR==PARAMETERS(N)
      %IF PAR_OUT %START
         %IF PAR_OK %START; !DO NOT OUTPUT AN OK PARAMETER -I.E. NO MONITORING ON AN 'RNEG'
            PAR_OUT=FALSE
         %ELSE
            %IF XMONMESS="" %START
               XMONMESS="Unacceptable parameter value:  parameter ".PARAM STR(N)
               XMONMESS=XMONMESS." operator ".OP STR(PAR_OPERATOR)." value "
               %IF PAR_VTYPE=ASTRING %START
                  XMONMESS=XMONMESS.STRING(STRING VALUES(PAR_VALUE))
               %ELSEIF PAR_VTYPE=NUMBER %START
                  XMONMESS=XMONMESS.HEXTOSTR(PAR_VALUE)
               %FINISH
            %FINISH
         %FINISH
         PAR_MONITOR=FALSE
         PAR_OPERATOR=EQ
      %FINISH
   %REPEAT
   PAR==PARAMETERS(PARNUM(STATE))
   PAR_VALUE=16_1002 %IF PAR_VALUE=0
   PAR_OUT=TRUE
   XMONMESS="Unacceptable parameter value" %IF XMONMESS=""
   PARAMETERS(PARNUM(MONMESS))_OUT=TRUE
   %FALSE
%END

%EXTERNALROUTINE PRIVATE CODE
!============================
!THIS SETS UP THE CODES WE KNOW ABOUT
   %RETURN %IF XCODE#8
   %IF XPRIV TCODE="36BIT" %START
      XCODE=2
      XMAPPING=16_4001
      BINARY FILE=TRUE
   %FINISH
%END

%ENDOFFILE
