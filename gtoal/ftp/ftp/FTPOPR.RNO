.centre
OPERATORS GUIDE TO FTP (FILE TRANSFER PROTOCOL)
.S 2.C
CONTENTS
.S
1.#Overview
.s
2.#Running the spooler
.s
3.#Commands to the spooler
.s
4.#Examining the queues
.s
5.#Testing
.s
6.#References
.pg
.hl Overview
.f
FTP (File Transfer Protocol) is as a system which allows a user
to queue requests for file transfers to other machines.
This is achieved by having a monitor command
called FTP which puts a file transfer request into the FTP queue, and a
spooler called FTXSPL running on the DECsystem-10 to handle the transfer itself.
.p 0
The spooler handles the setting up of the necessary tasks between the
machines and handles the transfer and possible subsequent respooling
of the file (say to the IBM 360/195 or to the line-printer or plotter).

.hl Running the spooler
The spooler is normally run as an OPSER sub-job with the following
sequence of commands:
.s;.nf
     :SLOG             ;log in a sub-job
     :DEF FTP=         ;define the sub-job as FTP
     FTP-R FTXSPL      ;run the spooler
     FTP-START         ;start spooling

.hl Commands to the spooler
.f
Below are a list of all the commands available in FTXSPL. They may all
be abbreviated to their shortest unique form, except that "S" or "ST"
is interpreted as START rather than STOP
.s;.lm 12;.ts 12
.i-12
CURRENT type the current settings of parameters
.i-12
DEBUG   run a test version of the spooler
.i-12
DETACH	detach the job and continue running detached. All
subsequent output to the terminal is prefixed by "FTP- "
.i-12
EXIT	exit to monitor level immediately, aborting any current transfer
.i-12
GO	continue with the next request after a PAUSE
.i-12
HELP	type a list of the available commands on the console
.i-12
KILL	abort the current file transfer but continue with any subsequent
requests
.i-12
LOG file	open the named file as a log file.
A log file called FTPOPR.LOG[3,3] is automatically opened when the spooler is
run
.i-12
MSGLEVEL n	determines the level of logging in the log file, the
values are cumulative i.e. 30 includes 20, 10 and 0, and are as follows:
.i-5
n=0##log the files being transferred and whether or not they succeed
but do not type anything
.i-5
n=1##type the files being transferred and whether or not they succeed
(default)
.i-5
n=10#log protocol level 0 message headers
.i-5
n=20#log parameters passed at protocol level 0
.i-5
n=30#log messages passed at protocol level 1
.i-5
n=40#log protocol level 2 header words
.i-5
n=50#log protocol level 2 data i.e. the data bytes
of the file being transferred. Please note that this produces a lot of output.
.i-5
n=100#type the transport level start-up procedure and each byte being received
.i-12
NEXT seq#	do the request whose sequence number is given, next
.i-12
NODES	type out a list of the nodes known to the spooler and their status
.i-12
PAUSE	stop processing requests after the current transfer
and await operator action. When the current transfer is finished
"[FTP is pausing]" is typed on the console
.i-12
RESET	reset all the variables to their original values except
for the name of the log file and the node status
.i-12
SET (NODE) <name> OFFLINE disables transfers either to or from the named node
.i-12
SET (NODE) <name> ONLINE enables file transfers both to and from the named node
(depending on the mode of operation - see START command)
.I-12
START (P or Q)	start transferring files in the queue for processing (P), or
start accepting files from other machines (Q), or both (when no P or Q modifier
is used)
.i-12
STOP	stop processing requests after the current transfer and
return to monitor level. This will type
"[FTP is stopping]" on the console when the transfer is complete.
.i-12
TASK <name> change name of listening task (default is FTX*)
.i-12
WHAT	types the file transfer in progress with
an indication of how far the transfer has progressed and at what baud rate.
.lm 0

.hl Examining the queue
The queue of requests for transfers is examined by running the
FTP command with no parameters or with the switch /LIST.
This will print out the files involved and who submitted the request
See the document 3A55B in the Edinburgh Installation Manual(1)
for a full description of running FTP.
.hl Testing
To test the spooler back to back you should run two versions of the spooler
one started as Q only, the other started as P only. Note that it is necessary
to open a different log file on the first spooler before the second spooler is
started otherwise the second spooler will give an enter error.  You can use the
DEBUG command in the spoolers, this will create job-specific log files and set
the MSG level to 31.
.s
If you run both the spoolers and FTP from a disk other than the system disk,
the queues will go onto the disk from which they are run, in the area [3,3]
so that you can run a parallel FTP system for testing purposes.
.s
You can send a file to yourself, either using local ANF-10 tasks or using
a call over the SRCNET gateway.
.s
For the first, make sure that both P and
Q spoolers have your own node name set online (use the NODE and SET NODE <name>
ONLINE commands). Then do an FTP command: e.g.
.s.nf
FTP TEST__file2=file1
.s.f
The second method using the gateway is as follows. Make sure that the gateway
is set online in both spoolers and then use the SRCNET type of nodename
e.g.
.s.nf
FTP EDXA__file2=file1
.hl References
1.##The Edinburgh DECsystem-10 Installation Manual. section 3A55B
