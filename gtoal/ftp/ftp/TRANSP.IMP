!TRANSP.IMP
!   COPYRIGHT K.FARVIS ERCC.
!   IS THE TRANSPORT MECHANISM FOR FTP
!USES SPECIAL MACRO READ AND WRITE ROUTINES WHICH WILL
!TIMEOUT ON A READ OR WRITE AFTER THE TIME SET BY SETTIM
!ROUTINE.  THEREFORE THE TWO SIGNALLED EVENTS POSSIBLE ARE
!EVENT 14 (TRANSPORT TIMEOUT) AND EVENT 4 (I/O TRANSMISSION ERROR)

%INCLUDE "IMP:IOLIB.INC"
%EXTERNALRECORD(SCB)%NAMESPEC INSCB
%EXTERNALRECORD(SCB)%NAMESPEC OUTSCB
%EXTERNALRECORD(SCBNAME)%ARRAYSPEC INVEC(-1:MAXCHANS)
%EXTERNALRECORD(SCBNAME)%ARRAYSPEC OUTVEC(-1:MAXCHANS)
%EXTERNALRECORD(SCB)%SPEC IUNSCB,OUNSCB;  !NUL STREAMS
%SYSTEMPREDICATESPEC IOUUO(%INTEGER FN,CHAN,%INTEGERNAME AC)
%SYSTEMROUTINESPEC SCBDEFINE(%INTEGER N,%RECORD(FILESPEC)%NAME FS,%RECORD(SCBNAME)%NAME IOSCB, %INTEGER CHNTYP)
%SYSTEMROUTINESPEC GETSCB(%RECORD(SCBNAME)%NAME R,%INTEGER LENGTH)
%SYSTEMINTEGERFNSPEC GETVEC(%INTEGER SIZE)
%SYSTEMROUTINESPEC FREEVEC(%INTEGER THIS)
%SYSTEMROUTINESPEC RELEASE(%INTEGER CHAN)
%EXTERNALPREDICATESPEC CALLI2(%INTEGER N,%INTEGERNAME ARG)
%EXTERNALROUTINESPEC NODE OFFLINE(%STRING(1)%NAME NODE)
%EXTERNALROUTINESPEC SET NODE DOWN(%STRING(1)%NAME NODE,%INTEGER SECS)
%EXTERNALSTRING(10)%FNSPEC NODE NAME(%STRING(1)%NAME NUMBER)
%EXTERNALSTRING(6)%FNSPEC ANF NODE NAME(%INTEGER N)
%EXTERNALROUTINESPEC UPD NODES;  !UPDATE NODE TABLES
%EXTERNALPREDICATESPEC ADDRESS(%STRING(1)%NAME TITLE,TR ADDRESS,%INTEGERNAME GATEWAY)
%EXTERNALROUTINESPEC OPEN LOG
%EXTERNALROUTINESPEC CLOSE LOG
%EXTERNALROUTINESPEC LOGIT(%STRING(255) STR)

%EXTERNALROUTINESPEC SLEEP(%INTEGER N)
%EXTERNALROUTINESPEC WRITEHEX(%INTEGER N,M)
%EXTERNALSTRING(6)%FNSPEC SIXTOSTR(%INTEGER N)
%EXTERNALSTRING(255)%FNSPEC FSTOSTR(%RECORD(FILESPEC)%NAME FS)
%EXTERNALSTRING(12)%FNSPEC OCTTOSTR(%INTEGER N)
%EXTERNALSTRING(15)%FNSPEC PPNTOSTR(%INTEGER N)
%EXTERNALSTRING(12)%FNSPEC INTTOSTR(%INTEGER N)
%EXTERNALSTRING(9)%FNSPEC HEXTOSTR(%INTEGER N)
%EXTERNALSTRING(255)%FNSPEC ASCTOSTR(%NAME ADR)
%EXTERNALROUTINESPEC STRTOASC(%STRING(1)%NAME STR,%NAME ADR)
%EXTERNALINTEGERFNSPEC STRTOINT(%STRING(1)%NAME S)
%EXTERNALSTRING(20)%SPEC XOUR NODE
%EXTERNALINTEGERSPEC XOUR PPN
%EXTERNALSTRING(255)%SPEC XOTHER NODE
%EXTERNALSTRING(255) XREMOTE NAME
%EXTERNALINTEGERSPEC ARPA MAIL
%EXTERNALINTEGERSPEC DEBUG
%EXTERNALINTEGERSPEC OPRPRV
%EXTERNALINTEGER  MAX SUBRECORD
%EXTERNALINTEGERSPEC I AM P
%EXTERNALINTEGERSPEC PSS OUTPUT
%EXTERNALINTEGERSPEC LOGLEVEL
%EXTERNALSTRING(12)%SPEC OUR SRC NODE
%OWNSTRING(30) BYTE MODE="/MODE:#140000000003/BYTE:8" ;! ASYNCHRONOUS I/O AND DO NOT REASSEMBLE PACKETS AND BYTE MODE
%CONSTINTEGER TTY=1, FTP=5, LOG=3
%CONSTINTEGER TRUE=-1, FALSE=0, RH=8_777777, LH=8_777777 000000, UP=1, DOWN=0, OFFLINE=-1
%CONSTINTEGER OPEN=8_50
!NOW THE TRANSPORT SUBEVENTS
%CONSTINTEGER NO SUCH HANDLER=2
%CONSTINTEGER TSK UUO=8_177, GET STATE=1, TASK WAIT=5,LOOKUP=2,ENTER=3
%EXTERNALSTRING(12) TASK NAME="FTX*"
%OWNINTEGER TASK ASCIZ=0
%OWNSTRING(25) LOCAL TASK=""
%EXTERNALSTRING(25) XLOCAL TASK

%ROUTINESPEC CLOSE TRANSPORT
%ROUTINESPEC GOT
%EXTERNALROUTINESPEC FTPOUT;  !OUTPUT FOR FTP
%EXTERNALINTEGER FTPTST;   !INPUT TESTING FLAG
%EXTERNALINTEGERSPEC FTPRD;   !SPECIAL READING ROUTINE
%EXTERNALINTEGERSPEC FTPWT;     !SPECIAL WRITING ROUTINE
%EXTERNALROUTINESPEC SETTIM(%INTEGER SECS);    !SET TIMEOUT INTERVAL
%ROUTINESPEC GET(%INTEGERNAME N)
%PREDICATESPEC ANY GOT

%EXTERNALSTRING(255)%SPEC ERRMSG

%ROUTINE FTP NOT RUNNING
!========================
   SET NODE DOWN(XOTHER NODE,15*60)
   ERRMSG=ERRMSG." - will try again later to ".XOTHER NODE
   LOGIT(ERRMSG)
%END


%ROUTINE TMONITOR(%STRING(150) STRING,%INTEGER HEX)
!========================================================
!Monitors the transport level
   %INTEGER OUT
   OUT=OUTSTREAM
   SELECT OUTPUT(TTY)
   PRINTSTRING(STRING)
   WRITEHEX(HEX,3) %IF HEX#-1
   NEWLINE %IF STRING#""
   SELECT OUTPUT(OUT)
%END


%ROUTINE CLOSE INOUT
!===================
!ROUTINE TO CLOSE THE SPECIAL FTP INPUT/OUTPUT COMBO
   %INTEGER INSTR,OUTST
   %RETURN %IF INSCB_DEVTYP=UNDEV=OUTSCB_DEVTYP
   INSTR=INSTREAM; OUTST=OUTSTREAM
   RELEASE(INSCB_FILOPFN>>18&15)
   FREEVEC(INSCB_BUFVEC&8_777777)
   FREEVEC(ADDR(INSCB))
    FREEVEC(OUTSCB_BUFVEC&8_777777)
    FREEVEC(ADDR(OUTSCB))
!DEFAULT BACK TO UNDEFINED
    INVEC(INSTR)_NAME==IUNSCB
    INSCB==INVEC(INSTR)_NAME
    OUTVEC(OUTST)_NAME==OUNSCB
    OUTSCB==OUTVEC(OUTST)_NAME
%END

%ROUTINE TASK FUNCTION(%INTEGER CHAN,FUNCT,NODE NUM,%STRING(1)%NAME LOCAL,REMOTE)
!==================================================================================
!PERFORMS A TASK FUNCTION - EITHER LOOKUP OR ENTER
%INTEGERARRAY TSKADR(0:4), ADR1(0:19), ADR2(0:19),ADR3(0:19)
%INTEGER N
   TSKADR(0)=FUNCT      ;!FUNCTION
   TSKADR(1)=CHAN
   TSKADR(2)=20<<18!ADDR(ADR1(0));   !FIRST NPD
   TSKADR(3)=20<<18!ADDR(ADR2(0));  !SECOND NPD
   TSKADR(4)=20<<18!ADDR(ADR3(0));  !THIRD NPD
   %FOR N=2,1,19 %CYCLE
      ADR1(N)=0; ADR2(N)=0; ADR3(N)=0;   !CLEAR NPDS
   %REPEAT
   ADR1(0)=-1;     !LOCAL
   ADR1(1)=LENGTH(LOCAL);       !LENGTH OF ASCII STRING
   STRTOASC(LOCAL,ADR1(2))
   ADR2(0)=NODE NUM
   ADR2(1)=LENGTH(REMOTE)
   STRTOASC(REMOTE,ADR2(2))
   ADR3(0)=-1
   ADR3(1)=0
   N=5<<18!ADDR(TSKADR(0))
   %UNLESS CALLI2(TSK UUO,N) %START
      ERRMSG="Task function error for ".REMOTE
      %signal 10,5,n
   %FINISH
%END


%PREDICATE TASK INFO(%INTEGER CHAN,FUNCT,%INTEGERNAME VALUE,REASON,REM NODE,%STRING(1)%NAME LOCAL,REMOTE)
!==================================================================================
!PERFORMS A TASK FUNCTION - EITHER 'GET STATE' OR 'TASK WAIT' CURRENTLY
!THAT IS IT EITHER DOES A TASK WAIT OR
!CHECKS THE STATE OF THE FTP TASK AND RETURNS A VALUE FOR THE STATE
!THE REASON FOR A DISCONNECT AND THE NAME OF THE LOCAL AND REMOTE TASK
%INTEGERARRAY TSKADR(0:4), ADR1(0:19), ADR2(0:19),ADR3(0:19)
%INTEGER N
   TSKADR(0)=FUNCT      ;!FUNCTION
   TSKADR(1)=CHAN
   TSKADR(2)=20<<18!ADDR(ADR1(0));   !FIRST NPD
   TSKADR(3)=20<<18!ADDR(ADR2(0));  !SECOND NPD
   TSKADR(4)=20<<18!ADDR(ADR3(0));  !THIRD NPD
   %FOR N=2,1,19 %CYCLE
      ADR1(N)=0; ADR2(N)=0; ADR3(N)=0;   !CLEAR NPDS
   %REPEAT
   ADR1(0)=-1;     !LOCAL
   ADR1(1)=LENGTH(LOCAL);       !LENGTH OF ASCII STRING
   STRTOASC(LOCAL,ADR1(2))
   N=5<<18!ADDR(TSKADR(0))
   %UNLESS CALLI2(TSK UUO,N) %START
      VALUE=N
      %FALSE
   %FINISH
   %TRUE %UNLESS FUNCT=GET STATE
   VALUE=TSKADR(2)
   %IF VALUE=0 %START
      REASON=TSKADR(3)
   %ELSE
      REASON=0
      LOCAL=ASCTOSTR(ADR2(2))
      REM NODE=ADR3(0)
      REMOTE=ASCTOSTR(ADR3(2))
   %FINISH
   %TRUE
%END



%ROUTINE FTP OPEN(%INTEGER N,%RECORD(FILESPEC) FS)
!==================================================
!Opens a special FTP stream for both input and output
   %RECORD(SCB)%NAME ISCB,OSCB
   %STRING(255) STR
   %INTEGER OLD JBFF,IN
   %CONSTINTEGER JBFF=8_121

   SCBDEFINE(N,FS,INVEC(N),STREAM)
   ISCB==INVEC(N)_NAME
   GETSCB(OUTVEC(N),SCBSIZE)
   OSCB==OUTVEC(N)_NAME
!NOW COPY INPUT TO OUTPUT SCB BUT MAKE SOME CHANGES
   OSCB=ISCB
   OSCB_BUFHEDS=ADDR(OSCB_RINGHEAD_BUFADR)<<18
   OSCB_BUFNUM=OSCB_BUFNUM<<18
   OSCB_RINGHEAD_BUFADR=GETVEC(OSCB_BUFVEC>>18)
   OSCB_BUFVEC=(OSCB_BUFVEC&LH)!OSCB_RINGHEAD_BUFADR
   ISCB_BUFHEDS=ISCB_BUFHEDS!OSCB_BUFHEDS
   ISCB_BUFNUM=ISCB_BUFNUM!OSCB_BUFNUM
   %UNLESS IOUUO(OPEN,ISCB_FILOPFN>>18&15,ISCB_STATUS) %START
      ERRMSG="Open error for device".SIXTOSTR(ISCB_DEVNAM)
      %SIGNAL 10,6,0
   %FINISH
   ISCB_RINGHEAD_BUFADR=ISCB_BUFVEC&RH;  !RESTORE BUFADR AFTER OPEN UUO
   OSCB_RINGHEAD_BUFADR=OSCB_BUFVEC&RH;  !RESTORE BUFADR AFTER OPEN UUO
   OLD JBFF=AC(JBFF)
   AC(JBFF)=ISCB_RINGHEAD_BUFADR;  !IN ORDER TO BUILD INPUT BUFFERS
   AC(1)=ISCB_IBUFOP+8_6000<<18!(ISCB_BUFNUM&8_777777)
   *8_256000000001;   !DO INBUF N,M
   AC(JBFF)=OSCB_RINGHEAD_BUFADR;  !IN ORDER TO BUILD OUTPUT BUFFERS
   AC(1)=OSCB_OBUFOP+8_6000<<18!OSCB_BUFNUM>>18
   *8_256000000001;   !DO OUTBUF N,M
   AC(JBFF)=OLD JBFF;  !RESTORE JBFF
   ISCB_OPER==FTPRD;  !SPECIAL READING FUNCTION
   OSCB_OPER==FTPWT;   !SPECIAL WRITING FUNCTION
   ISCB_RINGHEAD_BYTPTR=(ISCB_RINGHEAD_BYTPTR&RH)!8<<24
   OSCB_RINGHEAD_BYTPTR=(OSCB_RINGHEAD_BYTPTR&RH)!8<<24
   %IF N=INSTREAM %THEN INSCB==INVEC(N)_NAME;    !SET CURRENT SCB POINTER
   %IF N=OUTSTREAM %THEN OUTSCB==OUTVEC(N)_NAME;  !SET CURRENT SCB POINER
   IN=INSTREAM
   SELECT INPUT(N)
   FTPTST=TRUE
   N=NEXTSYMBOL;  !GET BUFFER RING ESTABLISHED
   SELECT INPUT(IN)
   SETTIM(300);  !SET TIMEOUT INTERVAL
   %IF LOGLEVEL>=100 %START
      STR="Opened task device ".FSTOSTR(FS)
      TMONITOR(STR,-1)
   %FINISH
%END

%EXTERNALROUTINE FTP ENTER(%INTEGER N,%INTEGERNAME GATE,%STRING(1)%NAME LOCAL,REMOTE)
!================================================================================
!OPENS THE FTP STREAM FOR OUTPUT
   %RECORD(SCB)%NAME SCB
   %STRING(150) STR
   %INTEGER VALUE,REASON,REM NODE
   SCB==OUTVEC(N)_NAME
   TASK FUNCTION(SCB_FILOPFN>>18&15,ENTER,GATE,LOCAL,REMOTE) %IF I AM P=TRUE
   %IF TASK INFO(SCB_FILOPFN>>18&15,TASK WAIT,VALUE,REASON,REM NODE,LOCAL,REMOTE) %START; %FINISH
   %IF  TASK INFO(SCB_FILOPFN>>18&15,GET STATE,VALUE,REASON,REM NODE,LOCAL,REMOTE) %START;  !GET STATE
      %IF VALUE=3 %START;    !LINK IS OPERATIONAL
         %IF GATE=0 %OR GATE=-1 %THEN GATE=REM NODE
         %IF I AM P=TRUE %START
            STR="Outgoing call on node ".ANF NODE NAME(GATE)." to ".REMOTE
         %ELSE
            STR="Incoming call on node ".ANF NODE NAME(GATE)." from ".REMOTE
         %FINISH
         STR=STR." on ".LOCAL
         %IF LOGLEVEL>=100 %THEN TMONITOR(STR,-1)
         LOGIT(STR)
      %ELSE
         CLOSE TRANSPORT
         ERRMSG="Call to ".XOTHERNODE." on ".ANF NODE NAME(GATE)." failed. Reason = ".HEXTOSTR(REASON)
         %SIGNAL 10,5,REASON
      %FINISH
   %FINISH
!IF WE GET HERE WE WILL SEND OUT AN SFT AND THEN TIMEOUT ON INPUT
%END


%EXTERNALROUTINE INIT TRANSPORT
!=============================
!Routine to set up global values that are relevant to this transport station
   %STRING(255) STR,DUMMY
   %INTEGER N
   OPRPRV=FALSE
   MAXSUBRECORD=63
   STRTOASC(TASK NAME,TASK ASCIZ)
   %IF LOCAL TASK="" %START
      %IF ADDRESS(OUR SRC NODE,STR,N) %START
         %IF CHARNO(STR,1)='(' %START
            %IF STR->DUMMY.(")").STR %START; %FINISH;  !REMOVE PARAMETER FIELD
         %FINISH
         %IF CHARNO(STR,1)='.' %THEN STR=SUBSTRING(STR,2,LENGTH(STR));  !REMOVE ANY DOT
         %IF STR->STR.(".").DUMMY %START; %FINISH
         %IF STR="FTP" %OR STR="ftp" %THEN LOCAL TASK=XOURNODE %ELSE LOCAL TASK=STR
      %ELSE LOCAL TASK=XOURNODE
      LOCAL TASK=LOCAL TASK.".FTX"
   %FINISH
%END

%ROUTINE OPEN RECEIVER
!======================
!THIS ROUTINE OPENS AN INPUT TASK IN NON-BLOCKING MODE JUST TO LISTEN TO THE LINE
   %RECORD(FILESPEC) FS
   FS=0; FTPTST=FALSE
   FS_DEV="TSK"
   FS_SWITCHES=BYTE MODE
   FTP OPEN(FTP,FS)
   XLOCAL TASK=LOCAL TASK
   TASK FUNCTION(OUTVEC(FTP)_NAME_FILOPFN>>18&15,LOOKUP,-1,XLOCAL TASK,TASK NAME)
%END



%EXTERNALPREDICATE P OPEN TRANSPORT(%STRING(1)%NAME NODE)
!=========================================================
!Opens an output task to the specified node, doing a handshake by
!exchanging node numbers if it is a DEC-10
   %RECORD(FILESPEC) FS
   %OWNSTRING(25) LAST DEST=""
   %STRING (200) LOCAL,S1,S2
   %INTEGER OTHER NODE
   %ON %EVENT 10 %START
      CLOSE TRANSPORT
      FTP NOT RUNNING
      %FALSE
   %FINISH

   FS=0; FS_SWITCHES=BYTE MODE
   %SIGNAL 10,10 %UNLESS ADDRESS(NODE,XREMOTE NAME,OTHER NODE)
   XLOCAL TASK=LOCAL TASK
   %IF ARPA MAIL=TRUE %START
      XREMOTE NAME=XREMOTE NAME.".MAIL"
      XLOCAL TASK=XLOCAL TASK.".MAIL"
   %FINISH
   LOCAL=XLOCAL TASK
!NOW MARK WHETHER IT IS VIA PSS
   %IF XREMOTE NAME->S1.(".PSS(").S2 %THEN PSS OUTPUT=TRUE %ELSE PSS OUTPUT=FALSE
   FS_DEV="TSK".OCTTOSTR(OTHER NODE)
   CLOSE TRANSPORT
   %IF LAST DEST=NODE %THEN SLEEP(10000);  !ALLOW TIME FOR OTHER FTP HANDLER TO RECOVER IF SENT TO LAST TIME
!   %IF LAST DEST="UCL" %OR LAST DEST="ZUXA" %THEN SLEEP (60000);  !LONG WAIT FOR UCL
   LAST DEST=NODE
   FTP OPEN(FTP,FS)
   FTP ENTER(FTP,OTHER NODE,LOCAL,XREMOTE NAME)
   %TRUE
%END



%EXTERNALPREDICATE Q OPEN TRANSPORT
!================================
!THIS INITIALISES THE OUTPUT SIDE OF THE TRANSPORT FOR THE 'Q' PROCESS
   %STRING(100) NUMBER,DUMMY,LOCAL
   %INTEGER N
   %ON %EVENT 10 %START
      CLOSE TRANSPORT
      FTP NOT RUNNING
      %FALSE
   %FINISH

   N=-1
   XLOCAL TASK=LOCAL TASK
   FTP ENTER(FTP,N,XLOCAL TASK,XREMOTE NAME)
   %IF XLOCAL TASK->XLOCAL TASK.(".MAIL").DUMMY %OR   %C
     XLOCAL TASK->XLOCAL TASK.("MAIL").DUMMY %C
       %THEN ARPA MAIL=TRUE %ELSE ARPA MAIL=FALSE
   %IF XREMOTE NAME->NUMBER.(".").DUMMY %START;  !GET THE NODE NUMBER
      XOTHER NODE=NODE NAME(NUMBER);        !HENCE THE NAME
      XOTHER NODE=XREMOTE NAME %IF XOTHER NODE=""
   %ELSE XOTHER NODE=ANF NODE NAME(N);  !AN ANF-10 NODE
   %TRUE
%END

%EXTERNALROUTINE CLOSE TRANSPORT
!===============================
!CLOSES THE TRANSPORT MECHANISM
   %INTEGER IN,OUT
   IN=INSTREAM; OUT=OUTSTREAM
   SELECT INPUT(FTP); SELECT OUTPUT(FTP)
   CLOSE INOUT
   SELECT INPUT(IN); SELECT OUTPUT(OUT)
%END

%EXTERNALROUTINE RESET TRANSPORT
!===============================
!RESETS THE TRANSPORT TO JUST LISTEN
   CLOSE TRANSPORT; OPEN RECEIVER
%END

%EXTERNALROUTINE IDLE(%INTEGER SECS)
!====================
!CAUSES A SLEEP FOR 'SECS' SECONDS OR UNTIL TTY INPUT
   AC(1)=8_320<<18!(SECS*1000);  !SLEEP FOR N SECS OR UNTIL TTY INPUT OR RB.IPC OR RB.RIO
   *8_047040 000072;   !HIBER UUO
   *8_320000 000000
%END


%EXTERNALPREDICATE FTP STATE(%INTEGERNAME VALUE,%STRING(1)%NAME MESS)
!================================================================
!RETURNS TRUE FOR TRANSPORT OK, FALSE FOR BROKEN
!IF FALSE THE REASON IS RETURNED IN THE STRING
   %INTEGER IN,REASON,REM NODE
   %STRING(100) REMOTE,LOCAL
   LOCAL=XLOCAL TASK
   REMOTE=XREMOTE NAME
   IN=INSTREAM; SELECT INPUT(FTP)
   %IF TASK INFO(INSCB_FILOPFN>>18&15,GET STATE,VALUE,REASON,REM NODE,LOCAL,REMOTE) %START
      %IF VALUE=0 %start;  !LINK IS NOT OPERATIONAL
         MESS="Call to ".XOTHERNODE." closed with reason ".HEXTOSTR(REASON)
         SELECT INPUT(IN)
         %FALSE
      %FINISH
   %FINISH
!IF LINK EITHER OPERATIONAL OR ELSE I DON'T KNOW SAY IT IS OK
   SELECT INPUT(IN)
   %TRUE
%END


%EXTERNALPREDICATE FTP UP
!========================
!RETURNS TRUE FOR TRANSPORT OK, FALSE FOR BROKEN- assumes INSTREAM=FTP
   %INTEGERARRAY TSKADR(0:4), ADR1(0:19), ADR2(0:19),ADR3(0:19)
   %INTEGER N
   TSKADR(0)=GET STATE      ;!FUNCTION
   TSKADR(1)=INSCB_FILOPFN>>18&15
   TSKADR(2)=3<<18!ADDR(ADR1(0));   !FIRST NPD
   TSKADR(3)=20<<18!ADDR(ADR2(0));  !SECOND NPD
   TSKADR(4)=20<<18!ADDR(ADR3(0));  !THIRD NPD
   %FOR N=0,1,19 %CYCLE
      ADR1(N)=0; ADR2(N)=0; ADR3(N)=0;   !CLEAR OTHER NPDS
   %REPEAT
   ADR1(0)=-1;     !LOCAL
   ADR1(1)=LENGTH(XLOCAL TASK)
   STRTOASC(XLOCAL TASK,ADR1(2))
   N=5<<18!ADDR(TSKADR(0))
   %UNLESS CALLI2(TSK UUO,N) %START
      %TRUE;   !JUST IN CASE ITS OK
   %FINISH
   %IF TSKADR(2)=0 %start;  !LINK IS NOT OPERATIONAL
      %FALSE
   %FINISH
!IF LINK EITHER OPERATIONAL OR ELSE I DON'T KNOW SAY IT IS OK
   %TRUE
%END

%EXTERNALPREDICATE FTP RECEIVE
!===============================
!TEST WHETHER THERE IS INPUT ON EITHER FTP RECEIVERS
!AND IF THERE IS SET JUST ONE TO BE ON THE FTP CHANNEL
   %string(100) MESS
   %INTEGER IN,N
   %UNLESS FTP STATE(N,MESS) %START;  !IF LINK CLOSED
      OPEN LOG
      LOGIT(MESS)
      RESET TRANSPORT
      CLOSE LOG
      %FALSE
   %FINISH
   IN=INSTREAM
   SELECT INPUT(FTP)
   FTPTST=TRUE
   N=NEXT SYMBOL
   %IF FTPTST=TRUE %START;  !GOT SOMETHING
      %IF N&8_300=8_300 %THEN SKIPSYMBOL;   !AN OLD DEC-10 FTP TELLING ME ITS NODE NUMBER
      SELECT INPUT(IN)
      %TRUE
   %FINISH
   SELECT INPUT(IN)
   %FALSE
%END



!NOW THE DATA HANDLING ROUTINES

%EXTERNALPREDICATE ANY GOT
!=========================
!TEST WHETHER THERE IS ANY INPUT PENDING ON THE FTP LINK
!RETURN TRUE IF THERE IS AND FALSE IF THERE IS NOT
   %INTEGER N,IN
   IN=INSTREAM
   SELECT INPUT(FTP)
   FTPTST=TRUE
   N=NEXT SYMBOL
   SELECT INPUT(IN)
   %FALSE %IF FTPTST=FALSE
   FTPTST=FALSE
   %TRUE
%END


!THE REST OF THE ROUTINES RELY ON THE FTP STREAM BEING SELECTEDPRIOR TO ENTRY

%EXTERNALROUTINE GET(%INTEGERNAME N)
!===================================
!GET A SYMBOL FROM THE FTP TRANSPORT SYSTEM
   READSYMBOL(N)
   %IF 400>LOGLEVEL>=200 %THEN TMONITOR("",N)
%END


%EXTERNALROUTINE GOT
!====================
!THIS TELLS THE TRANSPORT SYSTEM THAT WE HAVE GOT A FULL RECORD
   %IF 400>LOGLEVEL>=200 %THEN TMONITOR("GOT WHOLE BUFFER",-1)
%END

%EXTERNALROUTINE PUT(%INTEGER N)
!===============================
!GIVE A SYMBOL TO THE TRANSPORT SYSTEM
   PRINTSYMBOL(N)
   %IF LOGLEVEL>=400 %THEN TMONITOR("",N)
%END

%EXTERNALROUTINE PUT OUT
!=======================
!THIS INDICATES THAT WE HAVE 'PUT' A FULL RECORD OUT TO THE TRANSPORT
!SYSTEM AND THAT WE WISH IT TO BE SENT
   FTPOUT
   %IF LOGLEVEL>=400 %THEN TMONITOR("BUFFER OUTPUT",-1)
%END

%ENDOFFILE
