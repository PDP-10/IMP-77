!FTPREQ.IMP
!COPYRIGHT K.FARVIS 1978,79
!Contains the fetching of requests generated by the FTP program from the
!QUEUE area, checking for legality etc.
!
!The format of the request file is as follows:
!
!   other node name
!   dest node _ dest filename = source node _ source filename
!   submitter of request
!   d file pass, d username, d username pass, d account, d account pass
!   s file pass, s username, s username pass, s account, s account pass
!   dest mode, source mode, file type
!   output dev type, opmess, monmess,spec option
!G !   destination node gateway passwords
!
!many of these fields are left blank and unprocessed

%CONSTINTEGER TTY=1, QDIR=12, QFILE=13, TRUE=-1, FALSE=0

%EXTERNALROUTINESPEC READPPN(%INTEGERNAME PPN)
%EXTERNALSTRING(15)%FNSPEC PPNTOSTR(%INTEGER N)
%EXTERNALINTEGERFNSPEC STRTOSIX(%STRING(6) S)
%EXTERNALSTRING(6)%FNSPEC SIXTOSTR(%INTEGER N)
%EXTERNALROUTINESPEC XRENAME(%RECORD(FILESPEC)%NAME FS,FS1)
%EXTERNALROUTINESPEC XDELETE(%RECORD(FILESPEC)%NAME FS)
%EXTERNALSTRING(255)%FNSPEC FSTOSTR(%RECORD(FILESPEC)%NAME FS)
%EXTERNALRECORD(FILESPEC)%FNSPEC STRTOFS(%STRING(255) SPEC)
%EXTERNALSTRING(12)%SPEC OUR SRCNODE
%EXTERNALPREDICATESPEC LEGAL ACCESS(%STRING(1)%NAME FIL, %INTEGER MODE, %STRING(20) ACCOUNT,USER,UPASS)
%EXTERNALROUTINESPEC REPRT(%STRING(255) MESS)
%EXTERNALROUTINESPEC LOGIT(%STRING(255) MESS)
%EXTERNALROUTINESPEC TELL USER(%STRING(1)%NAME USER,FIL,%STRING(255) MESSAGE)
%EXTERNALROUTINESPEC PARSE DEVICE(%STRING(1)%NAME DEVICE,DEV, %INTEGERNAME NODE,NUM)
%EXTERNALROUTINESPEC CHECK NETWRK FILE
%EXTERNALPREDICATESPEC ISNODE(%STRING(1)%NAME NODE,TYPE %INTEGERNAME STATUS)
%ROUTINESPEC UPPERCASE(%STRING(1)%NAME STR)
%ROUTINESPEC END REQUEST

%EXTERNALINTEGERSPEC LOGLEVEL
%EXTERNALSTRING(255)%SPEC ERRMSG
%EXTERNALSTRING(96)%SPEC XSPECIAL
%EXTERNALSTRING(96)%SPEC XOPMESS
%EXTERNALSTRING(96)%SPEC XMONMESS
%EXTERNALSTRING(96)%SPEC XFILENAME
%EXTERNALSTRING(20)%SPEC XFILEPASS
%EXTERNALSTRING(20)%SPEC XACCOUNT
%EXTERNALSTRING(20)%SPEC XACCPASS
%EXTERNALSTRING(20)%SPEC XUSERNAME
%EXTERNALSTRING(20)%SPEC XUSERPASS
%EXTERNALSTRING(20)%SPEC XOUTDEV
%EXTERNALSTRING(25)%SPEC XPRIV TCODE
%EXTERNALINTEGERNAMESPEC XCODE
%EXTERNALINTEGERNAMESPEC XMODE
%EXTERNALINTEGERNAMESPEC XFORMAT
%EXTERNALINTEGERNAMESPEC XRSIZE
%EXTERNALINTEGERSPEC YMODE
%EXTERNALSTRING(20)%SPEC XOUR NODE
%EXTERNALSTRING(20)%SPEC XOURACCOUNT
%EXTERNALSTRING(255)%SPEC XOTHER NODE
!G %EXTERNALSTRING(255)%SPEC XGATE PASS
%EXTERNALINTEGERSPEC ARPA MAIL
%EXTERNALINTEGERSPEC BINARY FILE

%EXTERNALSTRING(6)%SPEC QDEV
%EXTERNALINTEGERSPEC QUFD
%CONSTINTEGER FT=8_4664;    !'FT' IN SIXBIT
%CONSTINTEGER FTP=8_466460;   !IN SIXBIT
%CONSTINTEGER FTD=8_466444;   !IN SIXBIT
%CONSTINTEGER MFD=8_1 000001;   !MFD
%CONSTSTRING(8) DEC10="DEC10", IBM="IBM", GEC="GEC", PRIME="PRIME", ARPA="ARPA"
%CONSTINTEGER UP=1;   !NODE STATUS

!NOW THE PERMITTED DESTINATION AND SOURCE MODES
%CONSTSTRING(7)%ARRAY DEST MODES(0:7)=
"", "CREATE", "WRITE", "CWRITE", "APPEND", "CAPPEND", "SUBMIT", "PRINT"

%CONSTSHORTINTEGERARRAY DMODES(0:7)=
16_0001, 16_0001, 16_0002, 16_0003, 16_0004, 16_0005, 16_2001, 16_4001

%CONSTSTRING(6)%ARRAY SOURCE MODES(0:3)=
"", "NEVER", "DURING", "AFTER"
%CONSTSHORTINTEGERARRAY SMODES(0:3)=
16_8002, 16_8002, 16_8004, 16_8001


%OWNRECORD(FILESPEC) QUEFILE;   !HOLDS CURRENT QUEUE FILE


%ROUTINE READTEXT(%STRING(1)%NAME STR,%INTEGER SEP)
!-------------------------------------------------
!will read a string up to the separating character and include
!bracketed expressions - with []
   %INTEGER S
   STR=""
   %CYCLE
      READSYMBOL(S)
      %IF S='[' %START
         %CYCLE
            STR=STR.TOSTRING(S)
            READSYMBOL(S)
         %REPEATUNTIL S=']'
      %FINISH
      %EXIT %IF S=SEP
      STR=STR.TOSTRING(S)
   %REPEAT
%END


%EXTERNALPREDICATE ANY REQUESTS(%STRING(1)%NAME NEXT)
!===============================
!Looks for requests on the QUEUE area and returns true if any present, and
!also renames the selected request to .FTD to note that oprocessing is
!beginning
   %RECORD(FILESPEC) FS,QDIRFS
   %STRING(6) SAVE FILE,SAVE EXT
   %INTEGER GOT,FILE,EXT,NEXTFILE,FIRST TIME
   %ON %EVENT 9,10 %START
      %FALSE %IF EVENT=10
      ->END
   %FINISH

   %PREDICATE NODE UP
   !DETERMINE WHETHER THE NODE TO WHICH THE REQUEST REFERS IS UP
      %string(20) other node,TYPE
      %STRING(255) DUMMY
      %INTEGER STATUS,PPN
      %ON %EVENT 9,10 %START
         CLOSE INPUT; SELECT INPUT(QDIR)
         QUEFILE_FILE=SAVE FILE; QUEFILE_EXT=SAVE EXT;   !RESTORE OLD FILE NAMES
         %FALSE
      %FINISH

      %IF FIRST TIME=TRUE %START;  !IF WE HAVE FOUND A FILE TO TRY ON THIS RUN THROUGH
         CHECK NETWRK FILE
         FIRST TIME=FALSE
      %FINISH
      SELECT INPUT(QFILE)
      XDEFINE INPUT(QFILE,QUEFILE)
      READTEXT(OTHER NODE,NL); UPPER CASE(OTHER NODE)
      READTEXT(DUMMY,NL)
      READPPN(PPN)
      CLOSE INPUT; SELECT INPUT(QDIR)
      %IF IS NODE(OTHER NODE,TYPE,STATUS) %START
         %IF STATUS=UP %START
            %TRUE
         %ELSE
            QUEFILE_FILE=SAVE FILE; QUEFILE_EXT=SAVE EXT;  !RESTORE OLD VALUES
            %FALSE
         %FINISH
      %ELSE;  !NO SUCH NODE
         REPRT("Deleted request for non-existent host - ".OTHER NODE)
         END REQUEST;  !DELETE REQUEST FOR NON-EXISTENT NODE
         %FALSE
      %FINISH
   %END

   FIRST TIME=TRUE
   QDIRFS=0
   QDIRFS_DEV=QDEV
   QDIRFS_FILE=SIXTOSTR(QUFD)
   QDIRFS_EXT="UFD"
   QDIRFS_PPN=MFD
   QDIRFS_SWITCHES="/MODE:#10"
   XDEFINE INPUT(QDIR,QDIRFS)
   SELECT INPUT(QDIR)
   QUEFILE=0; GOT=FALSE; NEXTFILE=STRTOSIX(NEXT)
   QUEFILE_DEV=QDEV; QUEFILE_PPN=QUFD
   SAVE FILE=""; SAVE EXT=""
!FIND THE FIRST 'FILE'.FTP OR ANY 'FILE'.FTD (I.E. INCOMPLETE TRANSFER) OR 'NEXT'
   %CYCLE
      READSYMBOL(FILE); READSYMBOL(EXT); EXT=EXT>>18
      %CONTINUE %UNLESS EXT>>6=FT;  !IS IT A FILE.FT?
      SAVE FILE=QUEFILE_FILE; SAVE EXT=QUEFILE_EXT;  !SAVE OLD VERSION OF FILE
      %IF FILE=NEXTFILE %START;  !GOT 'NEXT'
         QUEFILE_FILE=SIXTOSTR(FILE)
         %IF EXT=FTP %THEN QUEFILE_EXT="FTP" %ELSE QUEFILE_EXT="FTD"
         %IF NODE UP %START; %FINISH; !CHECK FOR EXISTENCE BUT DO IT ANYWAY
         GOT=TRUE
         %EXIT
      %FINISH
      %IF EXT=FTD %START
         QUEFILE_FILE=SIXTOSTR(FILE); QUEFILE_EXT="FTD"
         %CONTINUE %UNLESS NODE UP;  !DO NOT BOTHER TO GO FURTHER
         GOT=TRUE
         %EXIT %IF NEXTFILE=0;   !SUCCESS %IF NOT LOOKING FOR 'NEXT'
      %FINISH
      %IF EXT=FTP %AND GOT=FALSE %START;   !NOTE FIRST ONE ONLY
         QUEFILE_FILE=SIXTOSTR(FILE); QUEFILE_EXT="FTP"
         %CONTINUE %UNLESS NODE UP;  !DO NOT BOTHER TO GO FURTHER
         GOT=TRUE
      %FINISH
   %REPEAT
END:
   CLOSE INPUT; SELECT INPUT(TTY)
   %FALSE %IF GOT=FALSE
   %IF QUEFILE_EXT="FTP" %START;  !RENAME TO FILE.FTD
      FS=QUEFILE; QUEFILE_EXT="FTD"
      QUEFILE_PROT=8_177
      XRENAME(FS,QUEFILE)
   %FINISH
   XDEFINE INPUT(QFILE,QUEFILE)
   SELECT INPUT(QFILE)
   %TRUE
%END


%EXTERNALROUTINE UPPER CASE(%STRING(1)%NAME STR)
!================================================
!Convert the given string to to upper case
   %STRING(255) STR1
   %INTEGER N,L,S
   L=LENGTH(STR)
   %RETURN %IF L=0
   STR1=STR; STR=""
   %FOR N=1,1,L %CYCLE
      S=CHARNO(STR1,N)
      S=S-32 %IF 'a'<=S<='z'
      STR=STR.TOSTRING(S)
   %REPEAT
%END

%PREDICATE CONVERT MODE(%STRING(1)%NAME DMODE,SMODE, %INTEGERNAME DM,SM)
!==========================================================================
!Takes the modes given as strings to FTP transfer mode codes for
!both source and destination.
   %INTEGER N
   %FOR N=0,1,7 %CYCLE
      %IF DMODE=DEST MODES(N) %THEN DM=DMODES(N) %AND ->SOURCE
   %REPEAT
   XMONMESS="Unknown destination mode ".DMODE." in FTP request file"
   %FALSE
SOURCE:
   %FOR N=0,1,3 %CYCLE
      %IF SMODE=SOURCE MODES(N) %THEN SM=SMODES(N) %AND %TRUE
   %REPEAT
   XMONMESS="Unknown source mode ".SMODE." in FTP request file"
   %FALSE
%END


%EXTERNALPREDICATE GET REQUEST(%STRING(1)%NAME FIL)
!===================================================
!get and validate the request in the file opened by ANY REQUESTS above
!return %TRUE if the request is valid and access permission is allowed or %FALSE
!if not and set the reason in ERRMSG.
   %RECORD(FILESPEC) FS
   %STRING(96) DFILE,SFILE,DUMMY
   %STRING(20) DNODE,DFILEPASS,DUSERNAME,DUSERPASS,DACCOUNT,DACCPASS,DMODE
   %STRING(20) SNODE,SFILEPASS,SUSERNAME,SUSERPASS,SACCOUNT,SACCPASS,SMODE,TYPE,CODE
   %STRING(6) DEVICE
   %INTEGER STATUS,SM,DM,NODE,NUM,USERPPN
  %CONSTINTEGER COMMA=','
   %ON %EVENT 9 %START
      XMONMESS="Illegal FTP request file format"
      CLOSE INPUT; SELECT INPUT(TTY)
      %FALSE
   %FINISH


   READTEXT(XOTHERNODE,NL)
   READTEXT(DNODE,'_'); READTEXT(DFILE,'=')
   READTEXT(SNODE,'_'); READTEXT(SFILE,NL)
   READPPN(USERPPN); XOURACCOUNT=PPNTOSTR(USERPPN); READTEXT(DUMMY,NL)
   READTEXT(DFILEPASS,COMMA); READTEXT(DUSERNAME,COMMA); READTEXT(DUSERPASS,COMMA); READTEXT(DACCOUNT,COMMA); READTEXT(DACCPASS,NL)
   READTEXT(SFILEPASS,COMMA); READTEXT(SUSERNAME,COMMA); READTEXT(SUSERPASS,COMMA); READTEXT(SACCOUNT,COMMA); READTEXT(SACCPASS,NL)
   READTEXT(DMODE,COMMA); READTEXT(SMODE,COMMA); READTEXT(CODE,NL)
   READTEXT(XOUTDEV,COMMA); READTEXT(XOPMESS,COMMA); READTEXT(XMONMESS,COMMA); READTEXT(XSPECIAL,NL)
!G    READTEXT(XGATE PASS,NL)
   CLOSE INPUT
   SELECT INPUT(TTY)
   UPPER CASE(XOTHERNODE)
   UPPER CASE(DNODE); UPPER CASE(SNODE)
   UPPER CASE(DMODE); UPPER CASE(SMODE)
   UPPER CASE(CODE); UPPER CASE(XOUTDEV)
   %IF XSPECIAL="MAIL" %START
      ARPA MAIL=TRUE; XSPECIAL=""
!SPECIAL FOR EMAS MAIL
      %IF ISNODE(DNODE,TYPE,STATUS) %AND (TYPE="RCO" %OR TYPE="EMAS") %START
         DFILE="...MAIL"
         DMODE="CREATE"
      %FINISH
   %ELSE ARPA MAIL=FALSE
   %IF CODE="BINARY" %START
      XCODE=2; BINARY FILE=TRUE
   %ELSE%IF CODE="FORTRAN" %START
      BINARY FILE=FALSE
      XFORMAT=3
      XCODE=16_1001
   %%ELSEIF CODE="TEXT" %START
      BINARY FILE=FALSE
      XFORMAT=1;   !TEXT MODE FORMATTING
      XCODE=16_1001
   %ELSE;            !SET UP PRIVATE CODES
      XPRIV TCODE=CODE
      XCODE=8
   %FINISH
   %UNLESS CONVERT MODE(DMODE,SMODE,DM,SM) %THEN %FALSE
;!   %IF DM&16_6000 %THEN SM=SM&16_8000!1!(DM&16_6000); !MAKE SM INTO 16_?001
   %IF DNODE=XOURNODE %START
      XOTHERNODE=SNODE
      XMODE=SM; YMODE=DM
      XFILENAME=SFILE
      XFILEPASS=SFILEPASS
      XUSERNAME=SUSERNAME
      XUSERPASS=SUSERPASS
      XACCOUNT=SACCOUNT
      XACCPASS=SACCPASS
      %IF ISNODE(SNODE,TYPE,STATUS) %AND TYPE=IBM %START
         XFORMAT=1
      %ELSE %IF TYPE=GEC %START
         XFORMAT=1;   !16_F01
      %ELSE %IF TYPE=PRIME %START
         XFORMAT=1;  !16_F01
      %FINISH
      FS=STRTOFS(DFILE)
      PARSE DEVICE(FS_DEV,DEVICE,NODE,NUM)
     %IF DEVICE="LPT" %OR DEVICE="PLT" %START
         XMODE=16_C001; YMODE=16_4001; XOUTDEV=FS_DEV
         FS_DEV=QDEV; FS_PPN=QUFD
     %ELSE
         %UNLESS LEGAL ACCESS(DFILE,DM,XOURACCOUNT,DUSERNAME,DUSERPASS) %START
            FIL=DFILE
            XMONMESS=XMONMESS." whilst attempting to write ".DFILE
            %FALSE
         %FINISH
      %FINISH
      FIL=FSTOSTR(FS)
      %TRUE
   %ELSE%IF SNODE=XOURNODE %OR SNODE=OUR SRCNODE %START
      XMODE=DM; YMODE=SM
      XOTHER NODE=DNODE
      XFILENAME=DFILE
      XFILEPASS=DFILEPASS
      XUSERNAME=DUSERNAME
      XUSERPASS=DUSERPASS
      XACCOUNT=DACCOUNT
      XACCPASS=DACCPASS
      %IF ISNODE(DNODE,TYPE,STATUS) %AND TYPE=DEC10 %START;   !A DEC-10
         FS=STRTOFS(DFILE)
         PARSE DEVICE(FS_DEV,DEVICE,NODE,NUM)
         %IF DEVICE="LPT" %OR DEVICE="PLT" %START
            XMODE=16_4001; YMODE=16_C001; XOUTDEV=FS_DEV
         %FINISH
      %ELSE %IF TYPE=IBM %START
         XFORMAT=1
         %IF XMODE=16_2001 %THEN XRSIZE=80 %ELSE XRSIZE=200
      %ELSEIF TYPE=GEC %START
         XFORMAT=1;   !16_F01
      %ELSE %IF TYPE =PRIME %START
         XFORMAT=1;  !16_F01
      %FINISH
      FIL=SFILE
      %UNLESS LEGAL ACCESS(SFILE,SM,XOURACCOUNT,SUSERNAME,SUSERPASS) %START
         XMONMESS=XMONMESS." whilst attempting to read ".SFILE
         %FALSE
      %FINISH
      %TRUE
   %ELSE
      XMONMESS="This node not specified for either node"
   %FINISH
   %FALSE
%END

%EXTERNALROUTINE END REQUEST
!===========================
!here after a request has been successfully processed.
   XDELETE(QUEFILE)
%END


%EXTERNALROUTINE REQUEUE REQUEST
!====================================
!Here on some kind of abort to requeue the request
   %RECORD (FILESPEC) FS
   FS=QUEFILE
   FS_EXT="FTP"
   XRENAME(QUEFILE,FS)
%END

%ENDOFFILE
